<!-- This has been created to PUSH into git repository -->
<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/Agile/V1/schemas/EngineeringChangeOrderABM.xsd"/>
      <rootElement name="AgileCreateEngineeringChangeOrderListABM" namespace="http://xmlns.oracle.com/Agile/ABM/EngineeringChangeOrder/V1"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/EngineeringChangeOrder/V1/EngineeringChangeOrderEBM.xsd"/>
      <rootElement name="CreateEngineeringChangeOrderListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/EngineeringChangeOrder/V1"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [TUE JAN 22 09:42:36 GMT+05:30 2008]. -->
?>
<xsl:stylesheet version="2.0" xmlns:changeABO="http://xmlns.oracle.com/Agile/ABO/EngineeringChangeOrder/V1" xmlns:changeEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/EngineeringChangeOrder/V1" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:common="http://xmlns.oracle.com/Agile/Common/V1" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:coreEBOcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/CommonEBO/V1" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:coreengineeringchangeordercust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/EngineeringChangeOrder/V1" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:changeABM="http://xmlns.oracle.com/Agile/ABM/EngineeringChangeOrder/V1" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:itemABO="http://xmlns.oracle.com/Agile/ABO/Item/V1" xmlns:fia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:exsl="http://exslt.org/common" xmlns:aiacfg="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.config.ConfigurationXPathFunctions" exclude-result-prefixes="xsl changeABO xsd common changeABM itemABO changeEBO corecomEBO svcdoc wsa coreEBOcust xacml-context coreengineeringchangeordercust corecomcust xacml corecom bpws ehdr hwf xp20 xref ora ids orcl fia exsl aiacfg ignore01" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:funct="http://www.w3.org/2005/xpath-functions" xml:id="id_1" xmlns:ignore01="http://www.oracle.com/XSL/Transform/java" ignore01:ignorexmlids="true">

 <xsl:include href="AgileCreateEngineeringChangeOrderListABM_to_CreateEngineeringChangeOrderListEBM_Custom.xsl" xml:id="id_2"/>
 
   <!-- 
    @Template: Main template
    @Purpose: Create 'CreateEngineeringChangeOrderListEBM' from 'AgileCreateEngineeringChangeOrderListABM'
              and call templates to create 'EBMHeader' and 'DataArea' 
 -->
  <xsl:template match="/changeABM:AgileCreateEngineeringChangeOrderListABM" xml:id="id_3">
  
    <!--<xsl:variable name="varCreateEngineeringChangeOrderListEBM_denormalized_ecos" xml:id="id_4">-->
    <changeEBO:CreateEngineeringChangeOrderListEBM xml:id="id_5">
        <xsl:call-template name="createEBMHeader" xml:id="id_6">
          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="." xml:id="id_7"/>
        </xsl:call-template>
        <xsl:call-template name="createDataArea" xml:id="id_8">
          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="." xml:id="id_9"/>
        </xsl:call-template>
        <xsl:variable name="varAgileCreateEngineeringChangeOrderListABM_filtered" xml:id="id_10">
          <xsl:call-template name="prepare_AgileCreateEngineeringChangeOrderListABM_retain_NoSiteSpecificAIOnly" xml:id="id_11">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="." xml:id="id_12"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:if test="(count($varAgileCreateEngineeringChangeOrderListABM_filtered/changeABM:AgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems) > 0) and (count(/changeABM:AgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:Sites[not(string-length(text()) = 0)]) > 0)" xml:id="id_13">
          <xsl:call-template name="createDataArea" xml:id="id_14">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM_filtered/changeABM:AgileCreateEngineeringChangeOrderListABM" xml:id="id_15"/>
          </xsl:call-template>
        </xsl:if>
    </changeEBO:CreateEngineeringChangeOrderListEBM>
    <!--</xsl:variable>-->
    <!--<changeEBO:CreateEngineeringChangeOrderListEBM xml:id="id_16">
      <corecom:EBMHeader xml:id="id_17">
        <xsl:for-each select="/changeEBO:CreateEngineeringChangeOrderListEBM/corecom:EBMHeader/*" xml:id="id_18">
          <xsl:element name="{name()}" xml:id="id_19">
            <xsl:copy-of select="./@*" xml:id="id_20"/>
            <xsl:copy-of select="node()|@*" xml:id="id_21"/>
          </xsl:element>
        </xsl:for-each>
      </corecom:EBMHeader>
      <xsl:for-each select="/changeEBO:CreateEngineeringChangeOrderListEBM/changeEBO:DataArea[not(./changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:BusinessComponentID = preceding-sibling::changeEBO:DataArea/changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:BusinessComponentID)]/changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:BusinessComponentID" xml:id="id_22">
        <xsl:variable name="varBusinessComponentID" select="." xml:id="id_23"/>
        <xsl:for-each select="/changeEBO:CreateEngineeringChangeOrderListEBM/changeEBO:DataArea[./changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:BusinessComponentID = $varBusinessComponentID and not(./changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:ContextID = preceding-sibling::changeEBO:DataArea/changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:ContextID)]/changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:ContextID" xml:id="id_24">
          <xsl:variable name="varContextID" select="." xml:id="id_25"/>
          <changeEBO:DataArea xml:id="id_26">
            <corecom:Create xml:id="id_27"/>
            <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_28">
              <xsl:for-each select="/changeEBO:CreateEngineeringChangeOrderListEBM/changeEBO:DataArea[./changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:BusinessComponentID = $varBusinessComponentID and ./changeEBO:CreateEngineeringChangeOrderList/corecom:Identification/corecom:ContextID = $varContextID]" xml:id="id_29">
                <xsl:choose xml:id="id_30">
                  <xsl:when test="position() = 1" xml:id="id_31">
                    <xsl:for-each select="./changeEBO:CreateEngineeringChangeOrderList/*" xml:id="id_32">
                      <xsl:element name="{name()}" xml:id="id_33">
                        <xsl:copy-of select="./@*" xml:id="id_34"/>
                        <xsl:copy-of select="node()|@*" xml:id="id_35"/>
                      </xsl:element>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:otherwise xml:id="id_36">
                    <xsl:for-each select="./changeEBO:CreateEngineeringChangeOrderList/changeEBO:EngineeringChangeOrderLine" xml:id="id_37">
                      <changeEBO:EngineeringChangeOrderLine actionCode="CREATE" xml:id="id_38">
                        <xsl:copy-of select="node()|@*" xml:id="id_39"/>
                      </changeEBO:EngineeringChangeOrderLine>
                    </xsl:for-each>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </changeEBO:CreateEngineeringChangeOrderList>
          </changeEBO:DataArea>
        </xsl:for-each>
      </xsl:for-each>
    </changeEBO:CreateEngineeringChangeOrderListEBM>-->
  </xsl:template>
  <!-- 
      @Template: createEBMHeader 
      @Purpose: Creates the EBM Header for the 'CreateEngineeringChangeOrderListEBM'
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'    
      @Requires: 
               varUseBSR => Enable/ Disable looking up BSR for Sender system info
         
  -->
  <xsl:template name="createEBMHeader" xml:id="id_40">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_41"/>
    <corecom:EBMHeader languageCode="en-US" xml:id="id_42"/>
  </xsl:template>
  <!-- 
      @Template: createDataArea 
      @Purpose: Creates the 'DataArea' for the 'CreateEngineeringChangeOrderListEBM'
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'
      @Requires: 
                AIA System Module Property: 'Agile', 'MULTISITE_ENABLED'
                DVM: 'AGILE_SITE_TARGET_MAPPING'                
  -->
  <xsl:template name="createDataArea" xml:id="id_43">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_44"/>
    <xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder" xml:id="id_45">
      <xsl:variable name="varEngineeringChangeOrderNumber" xml:id="id_46">
        <xsl:value-of select="./changeABO:CoverPage/changeABO:Number" xml:id="id_47"/>
      </xsl:variable>
      <xsl:variable name="SystemInstanceCode" select="fia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/Agile/Core/ProcessEngineeringChangeOrderAgileReqABCSImpl/V1}ProcessEngineeringChangeOrderAgileReqABCSImpl','Default.SystemID',true())" xml:id="id_48"/>
      <xsl:choose xml:id="id_49">
        <xsl:when test="fia:getSystemModuleProperty('Agile','MULTISITE_ENABLED',false()) = 'TRUE'" xml:id="id_50">
          <!--<xsl:comment>SITES ARE ENABLED VIA AIA CONFIGURATION</xsl:comment>-->
          <xsl:choose xml:id="id_51">
		  <!--Start of Bug 15926135 -->
            <!--xsl:when test="count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow[not(./changeABO:Sites = preceding::changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:Sites)]/changeABO:Sites[not(string-length(text()) = 0)]) > 0" xml:id="id_52"-->
			
			<xsl:when test="count(funct:distinct-values($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:Sites[not(string-length(text()) = 0)])) > 0" xml:id="id_4015">
			
              <!-- Multi site is enabled and there are multiple sites appearing under affected items -->
              <!--xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow[not(./changeABO:Sites = preceding::changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:Sites)]/changeABO:Sites[not(string-length(text()) = 0)]" xml:id="id_53"-->
			  
			<xsl:variable name="varDistinctSites" xml:id="id_4016">
			  <xsl:value-of select="funct:distinct-values($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:Sites[not(string-length(text()) = 0)])" separator=":" xml:id="id_4017"/>
		    </xsl:variable>
			
			<xsl:for-each select="orcl:create-nodeset-from-delimited-string('{http://xmlns.oracle.com/Agile/ABM/EngineeringChangeOrder/V1}Sites',$varDistinctSites,':')" xml:id="id_4018">
			<!--End of Bug 15926135 -->
                <xsl:variable name="varSiteID" xml:id="id_54">
                  <xsl:value-of select="normalize-space(.)" xml:id="id_55"/>
                </xsl:variable>
                <xsl:variable name="varDelmStrOrganizationCodes" xml:id="id_56">
                  <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE',$varSiteID,'TARGET_VALUE',''))"/-->
                  <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_57">
                    <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_58"/>
                    <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_59"/>
                    <xsl:with-param name="varSourceValue" select="$varSiteID" xml:id="id_60"/>
                    <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_61"/>
                    <xsl:with-param name="varDefaultValue" select="''" xml:id="id_62"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:variable name="varOrganizationCodes" xml:id="id_63">
                  <xsl:call-template name="delimitedStringToXML" xml:id="id_64">
                    <xsl:with-param name="varDelimitedString" select="string($varDelmStrOrganizationCodes)" xml:id="id_65"/>
                    <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_66"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose xml:id="id_67">
                  <xsl:when test="not(string-length(string($varOrganizationCodes)) = 0)" xml:id="id_68">
                    <!-- Multi site set up in Agile, there is a site specific affected item row coming in and each site is mapped to multiple organizations -->
                    <xsl:for-each select="$varOrganizationCodes/Token" xml:id="id_69">
                      <changeEBO:DataArea xml:id="id_70">
                        <corecom:Create xml:id="id_71"/>
                        <xsl:call-template name="createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_Available" xml:id="id_72">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_73"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_74"/>
                          <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_75"/>
                          <xsl:with-param name="varOrganizationCode" select="." xml:id="id_76"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_77"/>
                        </xsl:call-template>
                      </changeEBO:DataArea>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:otherwise xml:id="id_78">
                    <!-- Multi site set up in Agile, there is a site specific affected item row coming in but see no site to org mapping in the DVM -->
                    <changeEBO:DataArea xml:id="id_79">
                      <corecom:Create xml:id="id_80"/>
                      <xsl:call-template name="createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_NotAvailable" xml:id="id_81">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_82"/>
                        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_83"/>
                        <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_84"/>
                        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_85"/>
                      </xsl:call-template>
                    </changeEBO:DataArea>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise xml:id="id_86">
              <!--  Multi site is enabled but there are no site specific affected item rows appearing  -->
              <!-- @Custom Transformation: Using Item Page2.MultiList01 for storing Organization Ids -->
              <xsl:variable name="varUniqueOrganizationCodes" select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems/changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value[not(. = ../../../../preceding-sibling::changeABO:AffectedItems/changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value)]" xml:id="id_87"/>
              <xsl:choose xml:id="id_88">
                <xsl:when test="count($varUniqueOrganizationCodes) > 0" xml:id="id_89">
                  <xsl:for-each select="$varUniqueOrganizationCodes" xml:id="id_90">
                    <changeEBO:DataArea xml:id="id_91">
                      <corecom:Create xml:id="id_92"/>
                      <xsl:call-template name="createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_OrgsOnItemFlexPage" xml:id="id_93">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_94"/>
                        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_95"/>
                        <xsl:with-param name="varOrganizationCode" select="." xml:id="id_96"/>
                        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_97"/>
                      </xsl:call-template>
                    </changeEBO:DataArea>
                  </xsl:for-each>
                  <!-- 
                @TO DO: Some Affected Items may not have Orgs assignment on Page2.Multilist01, they have to be put onto an ECO to Default master org 
                But before doing that see if the default master org was already available on page 2 multilist field. If so, don't call this template 
                as rest items are already taken care
             -->
                  <xsl:variable name="varContainsDefaultMasterOrg" xml:id="id_98">
                    <xsl:call-template name="containsDefaultMasterOrg" xml:id="id_99">
                      <xsl:with-param name="varUniqueOrganizationCodes" select="$varUniqueOrganizationCodes" xml:id="id_100"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose xml:id="id_101">
                    <xsl:when test="(count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems[not(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01) or count(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value) = 0 ]) > 0) and not(normalize-space($varContainsDefaultMasterOrg) = 'TRUE')" xml:id="id_102">
                      <changeEBO:DataArea xml:id="id_103">
                        <corecom:Create xml:id="id_104"/>
                        <xsl:call-template name="createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_ToDefaultMasterOrg" xml:id="id_105">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_106"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_107"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_108"/>
                        </xsl:call-template>
                      </changeEBO:DataArea>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise xml:id="id_109">
                  <changeEBO:DataArea xml:id="id_110">
                    <corecom:Create xml:id="id_111"/>
                    <xsl:call-template name="createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_ToDefaultMasterOrg" xml:id="id_112">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_113"/>
                      <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_114"/>
                      <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_115"/>
                    </xsl:call-template>
                  </changeEBO:DataArea>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise xml:id="id_116">
          <!-- @TO DO: No multi-site set-up in Agile -->
          <!-- @Custom Transformation: Using Page2.MultiList01 for storing Organization Ids -->
          <!--<xsl:comment> SITES ARE DISABLED VIA AIA CONFIGURATION </xsl:comment> -->
          <xsl:variable name="varUniqueOrganizationCodes" select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems/changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value[not(. = ../../../../preceding-sibling::changeABO:AffectedItems/changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value)]" xml:id="id_117"/>
          <xsl:choose xml:id="id_118">
            <xsl:when test="count($varUniqueOrganizationCodes) > 0" xml:id="id_119">
              <xsl:for-each select="$varUniqueOrganizationCodes" xml:id="id_120">
                <changeEBO:DataArea xml:id="id_121">
                  <corecom:Create xml:id="id_122"/>
                  <xsl:call-template name="createEngineeringChangeOrderList_SitesNotEnabled_OrgsOnItemFlexPage" xml:id="id_123">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_124"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_125"/>
                    <xsl:with-param name="varOrganizationCode" select="." xml:id="id_126"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_127"/>
                  </xsl:call-template>
                </changeEBO:DataArea>
              </xsl:for-each>
              <!-- 
                @TO DO: Some Affected Items may not have Orgs assignment on Page2.Multilist01, they have to be put onto an ECO to Default master org 
                But before doing that see if the default master org was already available on page 2 multilist field. If so, don't call this template 
                as rest items are already taken care
             -->
              <xsl:variable name="varContainsDefaultMasterOrg" xml:id="id_128">
                <xsl:call-template name="containsDefaultMasterOrg" xml:id="id_129">
                  <xsl:with-param name="varUniqueOrganizationCodes" select="$varUniqueOrganizationCodes" xml:id="id_130"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose xml:id="id_131">
                <xsl:when test="(count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems[not(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01) or count(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value) = 0 ]) > 0) and not(normalize-space($varContainsDefaultMasterOrg) = 'TRUE')" xml:id="id_132">
                  <changeEBO:DataArea xml:id="id_133">
                    <corecom:Create xml:id="id_134"/>
                    <xsl:call-template name="createEngineeringChangeOrderList_SitesNotEnabled_NoOrgsOnItemFlexPage_ToDefaultMasterOrg" xml:id="id_135">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_136"/>
                      <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_137"/>
                      <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_138"/>
                    </xsl:call-template>
                  </changeEBO:DataArea>
                </xsl:when>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise xml:id="id_139">
              <changeEBO:DataArea xml:id="id_140">
                <corecom:Create xml:id="id_141"/>
                <xsl:call-template name="createEngineeringChangeOrderList_SitesNotEnabled_NoOrgsOnItemFlexPage_ToDefaultMasterOrg" xml:id="id_142">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_143"/>
                  <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_144"/>
                  <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_145"/>
                </xsl:call-template>
              </changeEBO:DataArea>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_Available 
  @Requires:
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            DVM: 'AGILE_INTEGRATION_USERS'
            XREF: 'CHANGE_CHANGEID'           
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_Available" xml:id="id_146">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_147"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_148"/>
    <xsl:param name="varSiteID" xml:id="id_149"/>
    <xsl:param name="varOrganizationCode" xml:id="id_150"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_151"/>
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varOrganizationCode)" xml:id="id_152"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_153">
      <corecom:Identification xml:id="id_154">
        <xsl:variable name="varBusinessComponentID" xml:id="id_155">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_156">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_157"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_158"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_159"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_160"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_161">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_162"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_163">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_164"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_165">
          <xsl:value-of select="$varOrganizationCode" xml:id="id_166"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_167">
          <corecom:ID xml:id="id_168">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_169"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_175">
        <changeEBO:Description xml:id="id_176">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_177"/>
        </changeEBO:Description>
      </xsl:if-->    
	<xsl:choose xml:id="id_4109">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4110">
			<changeEBO:Description xml:id="id_4111">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4112"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4113">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4114">
			<changeEBO:Description xml:id="id_4115">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4116"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_178">
        <changeEBO:InitiationDate xml:id="id_179">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_180"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_181">
        <changeEBO:ImplementationDate xml:id="id_182">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_183"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_184">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_185"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode) = '')" xml:id="id_186">
        <changeEBO:ReasonCode xml:id="id_187">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_188">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_189"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_190"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_191"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_192"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_193">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_194"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_195">
        <changeEBO:TypeCode xml:id="id_196">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_197">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_198"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_199"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_200"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_201"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_202">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_203"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_204">
        <changeEBO:ClassificationCode xml:id="id_205">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_206">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_207"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_208"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_209"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_210"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_211">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_212"/>
      </xsl:variable>
      <xsl:if test="not(string($varStatusCode) = '')" xml:id="id_213">
        <corecom:Status xml:id="id_214">
          <corecom:Code xml:id="id_215">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_216">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_217"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_218"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_219"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_220"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_221">
        <corecom:RequesterPartyReference xml:id="id_222">
          <xsl:variable name="varOriginator" xml:id="id_223">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_224"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_225">
            <corecom:Alias xml:id="id_226">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_227"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_228">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_229"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_230">
        <corecom:OwnerPartyReference xml:id="id_231">
          <xsl:variable name="varChangeAnalyst" xml:id="id_232">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_233"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_234">
            <corecom:Alias xml:id="id_235">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_236"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_237">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_238"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
                Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
            -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_SiteData" xml:id="id_239">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_240"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_241"/>
        <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_242"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_243"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_244"/>
      </xsl:call-template>
      <!-- 
                Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
                from the Page 2 and Page3 flexfields of ECO
              -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_245">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_246"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_247"/>
        <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_248"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_249"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_250"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_251">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_252"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_NotAvailable 
  @Requires:
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            XREF: 'CHANGE_CHANGEID'  
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesEnabled_SiteSpecificAI_SiteToOrgMapping_NotAvailable" xml:id="id_253">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_254"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_255"/>
    <xsl:param name="varSiteID" xml:id="id_256"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_257"/>
    <!--    <xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varSiteID"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varSiteID)" xml:id="id_258"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_259">
      <corecom:Identification xml:id="id_260">
        <xsl:variable name="varBusinessComponentID" xml:id="id_261">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_262">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_263"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_264"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_265"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_266"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_267">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_268"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_269">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_270"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_271">
          <xsl:value-of select="$varSiteID" xml:id="id_272"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_273">
          <corecom:ID xml:id="id_274">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_275"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4000">
        <changeEBO:Description xml:id="id_4001">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4002"/>
        </changeEBO:Description>
      </xsl:if-->
	<xsl:choose xml:id="id_4117">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4118">
			<changeEBO:Description xml:id="id_4119">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4120"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4121">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4122">
			<changeEBO:Description xml:id="id_4123">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4124"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_284">
        <changeEBO:InitiationDate xml:id="id_285">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_286"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_287">
        <changeEBO:ImplementationDate xml:id="id_288">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_289"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_290">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_291"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode) = '')" xml:id="id_292">
        <changeEBO:ReasonCode xml:id="id_293">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_294">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_295"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_296"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_297"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_298"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_299">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_300"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_301">
        <changeEBO:TypeCode xml:id="id_302">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_303">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_304"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_305"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_306"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_307"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_308">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_309"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_310">
        <changeEBO:ClassificationCode xml:id="id_311">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_312">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_313"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_314"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_315"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_316"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_317">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_318"/>
      </xsl:variable>
      <xsl:if test="not(string($varStatusCode) = '')" xml:id="id_319">
        <corecom:Status xml:id="id_320">
          <corecom:Code xml:id="id_321">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_322">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_323"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_324"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_325"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_326"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_327">
        <corecom:RequesterPartyReference xml:id="id_328">
          <xsl:variable name="varOriginator" xml:id="id_329">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_330"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_331">
            <corecom:Alias xml:id="id_332">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_333"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_334">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_335"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_336">
        <corecom:OwnerPartyReference xml:id="id_337">
          <xsl:variable name="varChangeAnalyst" xml:id="id_338">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_339"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_340">
            <corecom:Alias xml:id="id_341">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_342"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_343">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_344"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
                Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
            -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_SiteData" xml:id="id_345">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_346"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_347"/>
        <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_348"/>
        <xsl:with-param name="varOrganizationCode" select="$varSiteID" xml:id="id_349"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_350"/>
      </xsl:call-template>
      <!-- 
                Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
                from the Page 2 and Page3 flexfields of ECO
              -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_351">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_352"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_353"/>
        <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_354"/>
        <xsl:with-param name="varOrganizationCode" select="$varSiteID" xml:id="id_355"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_356"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_357">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_358"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_OrgsOnItemFlexPage 
  @Requires:
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            XREF: 'CHANGE_CHANGEID' 
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_OrgsOnItemFlexPage" xml:id="id_359">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_360"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_361"/>
    <xsl:param name="varOrganizationCode" xml:id="id_362"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_363"/>
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varOrganizationCode)" xml:id="id_364"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_365">
      <corecom:Identification xml:id="id_366">
        <xsl:variable name="varBusinessComponentID" xml:id="id_367">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_368">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_369"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_370"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_371"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_372"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_373">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_374"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_375">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_376"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_377">
          <xsl:value-of select="$varOrganizationCode" xml:id="id_378"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_379">
          <corecom:ID xml:id="id_380">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_381"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4003">
        <changeEBO:Description xml:id="id_4004">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4005"/>
        </changeEBO:Description>
      </xsl:if-->
	<xsl:choose xml:id="id_4125">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4126">
			<changeEBO:Description xml:id="id_4127">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4128"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4129">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4130">
			<changeEBO:Description xml:id="id_4131">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4132"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_390">
        <changeEBO:InitiationDate xml:id="id_391">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_392"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_393">
        <changeEBO:ImplementationDate xml:id="id_394">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_395"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_396">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_397"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode) = '')" xml:id="id_398">
        <changeEBO:ReasonCode xml:id="id_399">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_400">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_401"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_402"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_403"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_404"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_405">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_406"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_407">
        <changeEBO:TypeCode xml:id="id_408">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_409">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_410"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_411"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_412"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_413"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_414">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_415"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_416">
        <changeEBO:ClassificationCode xml:id="id_417">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_418">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_419"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_420"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_421"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_422"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_423">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_424"/>
      </xsl:variable>
      <xsl:if test="not(string($varStatusCode) = '')" xml:id="id_425">
        <corecom:Status xml:id="id_426">
          <corecom:Code xml:id="id_427">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_428">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_429"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_430"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_431"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_432"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_433">
        <corecom:RequesterPartyReference xml:id="id_434">
          <xsl:variable name="varOriginator" xml:id="id_435">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_436"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_437">
            <corecom:Alias xml:id="id_438">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_439"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_440">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_441"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_442">
        <corecom:OwnerPartyReference xml:id="id_443">
          <xsl:variable name="varChangeAnalyst" xml:id="id_444">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_445"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_446">
            <corecom:Alias xml:id="id_447">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_448"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_449">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_450"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
                Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
            -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_OrgData" xml:id="id_451">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_452"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_453"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_454"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_455"/>
      </xsl:call-template>
      <xsl:variable name="varIsDefaultMasterOrg" xml:id="id_456">
        <xsl:call-template name="isDefaultMasterOrg" xml:id="id_457">
          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_458"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:choose xml:id="id_459">
        <xsl:when test="normalize-space($varIsDefaultMasterOrg) = 'TRUE'" xml:id="id_460">
          <!--
                            Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
                     -->
          <xsl:call-template name="createEngineeringChangeOrderLines_With_DefaultMasterOrgData" xml:id="id_461">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_462"/>
            <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_463"/>
            <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_464"/>
          </xsl:call-template>
        </xsl:when>
      </xsl:choose>
      <!-- 
                Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
                from the Page 2 and Page3 flexfields of ECO
              -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_465">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_466"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_467"/>
        <xsl:with-param name="varSiteID" select="'NO SITE'" xml:id="id_468"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_469"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_470"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_471">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_472"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_ToDefaultMasterOrg 
  @Requires:
            DVM: 'AGILE_SITE_TARGET_MAPPING'
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            XREF: 'CHANGE_CHANGEID' 
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesEnabled_NoSiteSpecificAI_ToDefaultMasterOrg" xml:id="id_473">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_474"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_475"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_476"/>
    <xsl:variable name="varOrganizationCode" xml:id="id_477">
      <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE','DEFAULT_MASTER_ORG','TARGET_VALUE','NOT_FOUND'))"/-->
      <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_478">
        <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_479"/>
        <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_480"/>
        <xsl:with-param name="varSourceValue" select="'DEFAULT_MASTER_ORG'" xml:id="id_481"/>
        <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_482"/>
        <xsl:with-param name="varDefaultValue" select="'NOT_FOUND'" xml:id="id_483"/>
      </xsl:call-template>
    </xsl:variable>
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varOrganizationCode)" xml:id="id_484"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_485">
      <corecom:Identification xml:id="id_486">
        <xsl:variable name="varBusinessComponentID" xml:id="id_487">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_488">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_489"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_490"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_491"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_492"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_493">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_494"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_495">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_496"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_497">
          <xsl:value-of select="$varOrganizationCode" xml:id="id_498"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_499">
          <corecom:ID xml:id="id_500">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_501"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4006">
        <changeEBO:Description xml:id="id_4007">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4008"/>
        </changeEBO:Description>
      </xsl:if-->
	<xsl:choose xml:id="id_4133">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4134">
			<changeEBO:Description xml:id="id_4135">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4136"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4137">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4138">
			<changeEBO:Description xml:id="id_4139">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4140"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_510">
        <changeEBO:InitiationDate xml:id="id_511">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_512"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_513">
        <changeEBO:ImplementationDate xml:id="id_514">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_515"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_516">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_517"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode) = '')" xml:id="id_518">
        <changeEBO:ReasonCode xml:id="id_519">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_520">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_521"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_522"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_523"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_524"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_525">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_526"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_527">
        <changeEBO:TypeCode xml:id="id_528">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_529">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_530"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_531"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_532"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_533"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_534">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_535"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_536">
        <changeEBO:ClassificationCode xml:id="id_537">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_538">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_539"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_540"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_541"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_542"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_543">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_544"/>
      </xsl:variable>
      <xsl:if test="not(string('varStatusCode') = '')" xml:id="id_545">
        <corecom:Status xml:id="id_546">
          <corecom:Code xml:id="id_547">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_548">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_549"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_550"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_551"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_552"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_553">
        <corecom:RequesterPartyReference xml:id="id_554">
          <xsl:variable name="varOriginator" xml:id="id_555">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_556"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_557">
            <corecom:Alias xml:id="id_558">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_559"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_560">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_561"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_562">
        <corecom:OwnerPartyReference xml:id="id_563">
          <xsl:variable name="varChangeAnalyst" xml:id="id_564">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_565"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_566">
            <corecom:Alias xml:id="id_567">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_568"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_569">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_570"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
                Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
            -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_DefaultMasterOrgData" xml:id="id_571">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_572"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_573"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_574"/>
      </xsl:call-template>
      <!-- 
                Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
                from the Page 2 and Page3 flexfields of ECO
              -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_575">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_576"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_577"/>
        <xsl:with-param name="varSiteID" select="'NO SITE'" xml:id="id_578"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_579"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_580"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_581">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_582"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesNotEnabled_OrgsOnItemFlexPage 
  @Requires:          
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            XREF: 'CHANGE_CHANGEID' 
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesNotEnabled_OrgsOnItemFlexPage" xml:id="id_583">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_584"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_585"/>
    <xsl:param name="varOrganizationCode" xml:id="id_586"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_587"/>
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varOrganizationCode)" xml:id="id_588"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_589">
      <corecom:Identification xml:id="id_590">
        <xsl:variable name="varBusinessComponentID" xml:id="id_591">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_592">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_593"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_594"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_595"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_596"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_597">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_598"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_599">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_600"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_601">
          <xsl:value-of select="$varOrganizationCode" xml:id="id_602"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_603">
          <corecom:ID xml:id="id_604">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_605"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4009">
        <changeEBO:Description xml:id="id_4010">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4011"/>
        </changeEBO:Description>
      </xsl:if-->
	<xsl:choose xml:id="id_4141">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4142">
			<changeEBO:Description xml:id="id_4143">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4144"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4145">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4146">
			<changeEBO:Description xml:id="id_4147">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4148"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_614">
        <changeEBO:InitiationDate xml:id="id_615">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_616"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_617">
        <changeEBO:ImplementationDate xml:id="id_618">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_619"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_620">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_621"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode)= '')" xml:id="id_622">
        <changeEBO:ReasonCode xml:id="id_623">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_624">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_625"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_626"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_627"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_628"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_629">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_630"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_631">
        <changeEBO:TypeCode xml:id="id_632">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_633">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_634"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_635"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_636"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_637"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_638">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_639"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_640">
        <changeEBO:ClassificationCode xml:id="id_641">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_642">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_643"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_644"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_645"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_646"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_647">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_648"/>
      </xsl:variable>
      <xsl:if test="not(string($varStatusCode) = '')" xml:id="id_649">
        <corecom:Status xml:id="id_650">
          <corecom:Code xml:id="id_651">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_652">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_653"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_654"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_655"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_656"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_657">
        <corecom:RequesterPartyReference xml:id="id_658">
          <xsl:variable name="varOriginator" xml:id="id_659">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_660"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_661">
            <corecom:Alias xml:id="id_662">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_663"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_664">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_665"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_666">
        <corecom:OwnerPartyReference xml:id="id_667">
          <xsl:variable name="varChangeAnalyst" xml:id="id_668">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_669"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_670">
            <corecom:Alias xml:id="id_671">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_672"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_673">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_674"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
            Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
        -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_OrgData" xml:id="id_675">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_676"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_677"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_678"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_679"/>
      </xsl:call-template>
      <xsl:variable name="varIsDefaultMasterOrg" xml:id="id_680">
        <xsl:call-template name="isDefaultMasterOrg" xml:id="id_681">
          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_682"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:choose xml:id="id_683">
        <xsl:when test="normalize-space($varIsDefaultMasterOrg) = 'TRUE'" xml:id="id_684">
          <!--
                        Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
                 -->
          <xsl:call-template name="createEngineeringChangeOrderLines_With_DefaultMasterOrgData" xml:id="id_685">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_686"/>
            <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_687"/>
            <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_688"/>
          </xsl:call-template>
        </xsl:when>
      </xsl:choose>
      <!-- 
            Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
            from the Page 2 and Page3 flexfields of ECO
          -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_689">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_690"/>
        <!--<xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM"/>-->
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_691"/>
        <xsl:with-param name="varSiteID" select="'NO SITE'" xml:id="id_692"/>
        <xsl:with-param name="varOrganizationCode" select="." xml:id="id_693"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_694"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_695">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_696"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
  @Template: createEngineeringChangeOrderList_SitesNotEnabled_NoOrgsOnItemFlexPage_ToDefaultMasterOrg 
  @Requires:      
            DVM: 'AGILE_SITE_TARGET_MAPPING'
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            XREF: 'CHANGE_CHANGEID' 
 -->
  <xsl:template name="createEngineeringChangeOrderList_SitesNotEnabled_NoOrgsOnItemFlexPage_ToDefaultMasterOrg" xml:id="id_697">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_698"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_699"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_700"/>
    <xsl:variable name="varOrganizationCode" xml:id="id_701">
      <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE','DEFAULT_MASTER_ORG','TARGET_VALUE','NOT_FOUND'))"/-->
      <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_702">
        <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_703"/>
        <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_704"/>
        <xsl:with-param name="varSourceValue" select="'DEFAULT_MASTER_ORG'" xml:id="id_705"/>
        <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_706"/>
        <xsl:with-param name="varDefaultValue" select="'NOT_FOUND'" xml:id="id_707"/>
      </xsl:call-template>
    </xsl:variable>
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF"><xsl:value-of select="$varEngineeringChangeOrderNumber"/>::COMMON::<xsl:value-of select="$varOrganizationCode"/></xsl:variable>-->
    <!--<xsl:variable name="varEngineeringChangeOrderNumberinXREF">
      <xsl:value-of select="$varEngineeringChangeOrderNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
    </xsl:variable>-->
    <xsl:variable name="varEngineeringChangeOrderNumberinXREF" select="concat($varEngineeringChangeOrderNumber,'::',$varOrganizationCode)" xml:id="id_708"/>
    <changeEBO:CreateEngineeringChangeOrderList actionCode="CREATE" xml:id="id_709">
      <corecom:Identification xml:id="id_710">
        <xsl:variable name="varBusinessComponentID" xml:id="id_711">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_712">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_713"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_714"/>
            <xsl:with-param name="xrefReferenceValue" select="$varEngineeringChangeOrderNumberinXREF" xml:id="id_715"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_716"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:BusinessComponentID xml:id="id_717">
          <xsl:value-of select="$varBusinessComponentID" xml:id="id_718"/>
        </corecom:BusinessComponentID>
        <corecom:ID xml:id="id_719">
          <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_720"/>
        </corecom:ID>
        <corecom:ContextID schemeID="OrganizationCode" xml:id="id_721">
          <xsl:value-of select="$varOrganizationCode" xml:id="id_722"/>
        </corecom:ContextID>
        <corecom:ApplicationObjectKey xml:id="id_723">
          <corecom:ID xml:id="id_724">
            <xsl:value-of select="$varEngineeringChangeOrderNumber" xml:id="id_725"/>
          </corecom:ID>
        </corecom:ApplicationObjectKey>
      </corecom:Identification>
	  <!--Fix for Bug  17449090 Start-->
      <!--xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4012">
        <changeEBO:Description xml:id="id_4013">
              <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4014"/>
        </changeEBO:Description>
      </xsl:if-->
	<xsl:choose xml:id="id_4149">
		<xsl:when test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4150">
			<changeEBO:Description xml:id="id_4151">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DescriptionOfChange" xml:id="id_4152"/>
			</changeEBO:Description>
		</xsl:when>
		<xsl:otherwise xml:id="id_4153">
		<xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4154">
			<changeEBO:Description xml:id="id_4155">
				  <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Description" xml:id="id_4156"/>
			</changeEBO:Description>
		</xsl:if> 
		</xsl:otherwise>
	</xsl:choose>	  
	<!--Fix for Bug  17449090 End-->
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_734">
        <changeEBO:InitiationDate xml:id="id_735">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateOriginated" xml:id="id_736"/>
        </changeEBO:InitiationDate>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_737">
        <changeEBO:ImplementationDate xml:id="id_738">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:DateReleased" xml:id="id_739"/>
        </changeEBO:ImplementationDate>
      </xsl:if>
      <xsl:variable name="varChangeReasonCode" xml:id="id_740">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ReasonCode" xml:id="id_741"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeReasonCode) = '')" xml:id="id_742">
        <changeEBO:ReasonCode xml:id="id_743">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm',$SystemInstanceCode,$varChangeReasonCode,'COMMON',$varChangeReasonCode)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_744">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_REASON_CODE.dvm'" xml:id="id_745"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_746"/>
            <xsl:with-param name="varSourceValue" select="$varChangeReasonCode" xml:id="id_747"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_748"/>
          </xsl:call-template>
        </changeEBO:ReasonCode>
      </xsl:if>
      <xsl:variable name="varChangeType" xml:id="id_749">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_750"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeType) = '')" xml:id="id_751">
        <changeEBO:TypeCode xml:id="id_752">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm',$SystemInstanceCode,$varChangeType,'COMMON',$varChangeType)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_753">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_TYPECODE.dvm'" xml:id="id_754"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_755"/>
            <xsl:with-param name="varSourceValue" select="$varChangeType" xml:id="id_756"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_757"/>
          </xsl:call-template>
        </changeEBO:TypeCode>
      </xsl:if>
      <xsl:variable name="varChangeCategory" xml:id="id_758">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeCategory" xml:id="id_759"/>
      </xsl:variable>
      <xsl:if test="not(string($varChangeCategory) = '')" xml:id="id_760">
        <changeEBO:ClassificationCode xml:id="id_761">
          <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm',$SystemInstanceCode,$varChangeCategory,'COMMON',$varChangeCategory)"/>-->
          <xsl:call-template name="lookupDVM" xml:id="id_762">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_CLASSIFICATION_CODE.dvm'" xml:id="id_763"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_764"/>
            <xsl:with-param name="varSourceValue" select="$varChangeCategory" xml:id="id_765"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_766"/>
          </xsl:call-template>
        </changeEBO:ClassificationCode>
      </xsl:if>
      <!--<changeEBO:ExpirationDate/>-->
      <xsl:variable name="varStatusCode" xml:id="id_767">
        <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Status" xml:id="id_768"/>
      </xsl:variable>
      <xsl:if test="not(string('varStatusCode') = '')" xml:id="id_769">
        <corecom:Status xml:id="id_770">
          <corecom:Code xml:id="id_771">
            <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm',$SystemInstanceCode,$varStatusCode,'COMMON',$varStatusCode)"/>-->
            <xsl:call-template name="lookupDVM" xml:id="id_772">
              <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_STATUS_CODE.dvm'" xml:id="id_773"/>
              <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_774"/>
              <xsl:with-param name="varSourceValue" select="$varStatusCode" xml:id="id_775"/>
              <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_776"/>
            </xsl:call-template>
          </corecom:Code>
        </corecom:Status>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator" xml:id="id_777">
        <corecom:RequesterPartyReference xml:id="id_778">
          <xsl:variable name="varOriginator" xml:id="id_779">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:Originator)" xml:id="id_780"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_781">
            <corecom:Alias xml:id="id_782">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varOriginator,'COMMON',$varOriginator)" xml:id="id_783"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_RequesterPartyReference_Custom" xml:id="id_784">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_785"/>
          </xsl:call-template>
        </corecom:RequesterPartyReference>
      </xsl:if>
      <xsl:if test="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst" xml:id="id_786">
        <corecom:OwnerPartyReference xml:id="id_787">
          <xsl:variable name="varChangeAnalyst" xml:id="id_788">
            <xsl:value-of select="normalize-space($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeAnalyst)" xml:id="id_789"/>
          </xsl:variable>
          <corecom:PersonName xml:id="id_790">
            <corecom:Alias xml:id="id_791">
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_INTEGRATION_USERS.dvm',$SystemInstanceCode,$varChangeAnalyst,'COMMON',$varChangeAnalyst)" xml:id="id_792"/>
            </corecom:Alias>
          </corecom:PersonName>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_OwnerPartyReference_Custom" xml:id="id_793">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_794"/>
          </xsl:call-template>
        </corecom:OwnerPartyReference>
      </xsl:if>
      <!--
                Create multiple 'EngineeringChangeOrderLines' representing individual 'Affected Item' of ECO
            -->
      <xsl:call-template name="createEngineeringChangeOrderLines_With_DefaultMasterOrgData" xml:id="id_795">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_796"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_797"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_798"/>
      </xsl:call-template>
      <!-- 
                Call the temlate 'createEngineeringChangeOrderSpecificationGroup' to create 'EngineeringChangeOrderSpecificationGroup' 
                from the Page 2 and Page3 flexfields of ECO
              -->
      <xsl:call-template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_799">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_800"/>
        <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_801"/>
        <xsl:with-param name="varSiteID" select="'NO SITE'" xml:id="id_802"/>
        <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_803"/>
        <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_804"/>
      </xsl:call-template>
      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_Custom" xml:id="id_805">
        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_806"/>
      </xsl:call-template>
    </changeEBO:CreateEngineeringChangeOrderList>
  </xsl:template>
  <!-- 
      @Template: createEngineeringChangeOrderLines_With_SiteData 
      @Purpose: Creates multiple 'EngineeringChangeOrderLine' with Site data appearing on individual affected item
      @Logic:    
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'
      @Parameter: varEngineeringChangeOrderNumber => Number of the Engineering Change Order, which is in context of this template call      
      @Parameter: varSiteID
      @Parameter: varOrganizationCode
      @Requires:
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR'  
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR'      
                  DVM: 'ITEM_PRIMARYCLASSIFICATIONCODE'
                  DVM: 'ITEM_BOM_ITEMTYPE_CODE'
                  DVM: 'ITEM_WIP_SUPPLY_CODE'
                  DVM: 'ITEM_INDICATOR'  (planned
                  DVM: 'ITEM_UOM_CODE'
                  DVM: 'AGILE_SITE_TO_EBIZ_ORG_MAPPING'
                  XREF: 'ITEM_ITEMID'                 
  -->
  <xsl:template name="createEngineeringChangeOrderLines_With_SiteData" xml:id="id_807">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_808"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_809"/>
    <xsl:param name="varSiteID" xml:id="id_810"/>
    <xsl:param name="varOrganizationCode" xml:id="id_811"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_812"/>
    <xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems[./changeABO:AffectedItemRow/changeABO:Sites = $varSiteID]" xml:id="id_813">
      <changeEBO:EngineeringChangeOrderLine actionCode="CREATE" xml:id="id_814">
        <xsl:variable name="varChangeOrderLineEffDate" xml:id="id_815">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_816"/>
        </xsl:variable>
        <xsl:variable name="varItemNumber" xml:id="id_817">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_818"/>
        </xsl:variable>
        <!--<xsl:variable name="varItemNumberinXREF">
          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
        </xsl:variable>-->
        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_819"/>
        <xsl:variable name="varBusinessComponentID" xml:id="id_820">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_821">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_822"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_823"/>
            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_824"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_825"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:Identification xml:id="id_826">
          <corecom:BusinessComponentID xml:id="id_827">
            <xsl:value-of select="$varBusinessComponentID" xml:id="id_828"/>
          </corecom:BusinessComponentID>
          <corecom:ID xml:id="id_829">
            <xsl:value-of select="$varItemNumber" xml:id="id_830"/>
          </corecom:ID>
          <corecom:ApplicationObjectKey xml:id="id_831">
            <corecom:ID xml:id="id_832">
              <xsl:value-of select="$varItemNumber" xml:id="id_833"/>
            </corecom:ID>
          </corecom:ApplicationObjectKey>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_834">
            <corecom:Revision xml:id="id_835">
              <corecom:Number xml:id="id_836">
                <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_837"/>
              </corecom:Number>
            </corecom:Revision>
          </xsl:if>
        </corecom:Identification>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_838">
          <changeEBO:Description xml:id="id_839">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_840"/>
          </changeEBO:Description>
        </xsl:if>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_841">
          <changeEBO:EffectiveDate xml:id="id_842">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_843"/>
          </changeEBO:EffectiveDate>
        </xsl:if>
        <corecomEBO:CurrentItem xml:id="id_844">
          <xsl:if test="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_845">
            <corecomEBO:Description xml:id="id_846">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_847"/>
            </corecomEBO:Description>
          </xsl:if>
          <corecom:ItemIdentification xml:id="id_848">
            <corecom:BusinessComponentID xml:id="id_849">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_850"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_851">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_852"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_853">
              <corecom:ID xml:id="id_854">
                <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_855"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:choose xml:id="id_856">
              <xsl:when test="./changeABO:AffectedItemRow/changeABO:OldRev and not(substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ') = '')" xml:id="id_857">
                <corecom:Revision xml:id="id_858">
                  <corecom:Number xml:id="id_859">
                    <xsl:value-of select="substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ')" xml:id="id_860"/>
                  </corecom:Number>
                </corecom:Revision>
              </xsl:when>
            </xsl:choose>
          </corecom:ItemIdentification>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_CurrentItem_Custom" xml:id="id_861">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_862"/>
          </xsl:call-template>
        </corecomEBO:CurrentItem>
        <xsl:variable name="varBOMItemType" xml:id="id_863">
          <xsl:choose xml:id="id_864">
            <xsl:when test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_865">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_866"/>
            </xsl:when>
            <xsl:otherwise xml:id="id_867">
              <xsl:value-of select="''" xml:id="id_868"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="varBOMItemTypeCommon" xml:id="id_869">
          <xsl:choose xml:id="id_870">
            <xsl:when test="$varBOMItemType != ''" xml:id="id_871">
              <xsl:call-template name="lookupDVM" xml:id="id_872">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_BOM_ITEMTYPE_CODE.dvm'" xml:id="id_873"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_874"/>
                <xsl:with-param name="varSourceValue" select="$varBOMItemType" xml:id="id_875"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_876"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise xml:id="id_877">
              <xsl:value-of select="''" xml:id="id_878"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <corecomEBO:RevisedItem xml:id="id_879">
          <xsl:if test="not(string($varItemNumber) = '')" xml:id="id_880">
            <corecomEBO:Name xml:id="id_881">
              <xsl:value-of select="$varItemNumber" xml:id="id_882"/>
            </corecomEBO:Name>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_883">
            <corecomEBO:Description xml:id="id_884">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_885"/>
            </corecomEBO:Description>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_886">
            <xsl:variable name="varPartType" xml:id="id_887">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_888"/>
            </xsl:variable>
            <corecomEBO:PrimaryClassificationCode xml:id="id_889">
              <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm',$SystemInstanceCode,$varPartType,'COMMON',$varPartType)"/>-->
              <xsl:call-template name="lookupDVM" xml:id="id_890">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm'" xml:id="id_891"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_892"/>
                <xsl:with-param name="varSourceValue" select="$varPartType" xml:id="id_893"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_894"/>
              </xsl:call-template>
            </corecomEBO:PrimaryClassificationCode>
          </xsl:if>
          <!-- BUG 10637226  -->
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_895">
            <corecomEBO:ShortDescription xml:id="id_896">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_897"/>
            </corecomEBO:ShortDescription>
          </xsl:if>
          <!-- BUG 10637226  -->          
          <corecom:ItemIdentification xml:id="id_898">
            <corecom:BusinessComponentID xml:id="id_899">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_900"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_901">
              <xsl:value-of select="$varItemNumber" xml:id="id_902"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_903">
              <corecom:ID xml:id="id_904">
                <xsl:value-of select="$varItemNumber" xml:id="id_905"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_906">
              <corecom:Revision xml:id="id_907">
                <corecom:Number xml:id="id_908">
                  <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_909"/>
                </corecom:Number>
              </corecom:Revision>
            </xsl:if>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_910">
              <corecom:Description xml:id="id_911">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_912"/>
              </corecom:Description>
            </xsl:if>
          </corecom:ItemIdentification>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_913">
            <xsl:variable name="varItemLifeCyclePhase" xml:id="id_914">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_915"/>
            </xsl:variable>
            <corecom:Status xml:id="id_916">
              <corecom:Code xml:id="id_917">
                <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm',$SystemInstanceCode,$varItemLifeCyclePhase,'COMMON',$varItemLifeCyclePhase)"/>-->
                <xsl:call-template name="lookupDVM" xml:id="id_918">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm'" xml:id="id_919"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_920"/>
                  <xsl:with-param name="varSourceValue" select="$varItemLifeCyclePhase" xml:id="id_921"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_922"/>
                </xsl:call-template>
              </corecom:Code>
            </corecom:Status>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass" xml:id="id_923">
            <corecomEBO:ItemPhysicalCharacteristics xml:id="id_924">
              <xsl:variable name="varWeightMeasureUOM" xml:id="id_925">
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass/@UOM)" xml:id="id_926"/>
              </xsl:variable>
              <corecomEBO:WeightMeasure xml:id="id_927">
                <xsl:attribute name="unitCode" xml:id="id_928">
                  <!--<xsl:value-of select="lookupDVM('ITEM_UOM_CODE',$SystemInstanceCode,$varWeightMeasureUOM,'COMMON',$varWeightMeasureUOM)"/>-->
                  <xsl:call-template name="lookupDVM" xml:id="id_929">
                    <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_UOM_CODE.dvm'" xml:id="id_930"/>
                    <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_931"/>
                    <xsl:with-param name="varSourceValue" select="$varWeightMeasureUOM" xml:id="id_932"/>
                    <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_933"/>
                  </xsl:call-template>
                </xsl:attribute>
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass)" xml:id="id_934"/>
              </corecomEBO:WeightMeasure>
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemPhysicalCharacteristics_Custom" xml:id="id_935">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_936"/>
              </xsl:call-template>
            </corecomEBO:ItemPhysicalCharacteristics>
          </xsl:if>
		  <!--@Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Starts
	    <corecomEBO:InventoryCharacteristics xml:id="IC_1">
            <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List07" xml:id="LOT_1">
                <corecomEBO:LotControlCode xml:id="LOT_2">
                    <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_LOTEXPIRATION_ON_RECEIPT_INDICATOR.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07)" xml:id="LOT_3"/>
                </corecomEBO:LotControlCode >
            </xsl:if>
             <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List08" xml:id="SER_1">
                 <corecomEBO:SerializationEventCode xml:id="SER_2">
                    <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_SERIALIZATION_EVENT_CODE.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08)" xml:id="SER_3"/>
                    </corecomEBO:SerializationEventCode>
            </xsl:if>
        </corecomEBO:InventoryCharacteristics>
	  @Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Ends-->
	  
          <corecomEBO:ItemManufacturingCharacteristics xml:id="id_937">
            <corecomEBO:StructureAllowedIndicator xml:id="id_938">YES</corecomEBO:StructureAllowedIndicator>
            <xsl:if test="$varBOMItemTypeCommon != ''" xml:id="id_939">
              <corecomEBO:BOMItemTypeCode xml:id="id_940">
                <xsl:value-of select="$varBOMItemTypeCommon" xml:id="id_941"/>
              </corecomEBO:BOMItemTypeCode>
            </xsl:if>
            <xsl:if test="($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_942">
              <!--
    <corecomEBO:WIPSupplyTypeCode>REFERENCE_UNPLANNED_UNCOSTED</corecomEBO:WIPSupplyTypeCode>
	 -->
              <xsl:variable name="varWIPSupplyTypeCode" select="'Phantom'" xml:id="id_943"/>
              <corecomEBO:WIPSupplyTypeCode xml:id="id_944">
                <xsl:call-template name="lookupDVM" xml:id="id_945">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_WIP_SUPPLY_CODE.dvm'" xml:id="id_946"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_947"/>
                  <xsl:with-param name="varSourceValue" select="$varWIPSupplyTypeCode" xml:id="id_948"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_949"/>
                </xsl:call-template>
              </corecomEBO:WIPSupplyTypeCode>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturingCharacteristics_Custom" xml:id="id_950">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_951"/>
            </xsl:call-template>
          </corecomEBO:ItemManufacturingCharacteristics>
          <xsl:if test="($varBOMItemTypeCommon = 'MODEL') or ($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_952">
            <corecomEBO:ItemOrderManagementCharacteristics xml:id="id_953">
              <corecomEBO:AssembleToOrderIndicator xml:id="id_954">Y</corecomEBO:AssembleToOrderIndicator>
              <!--
      <xsl:variable name="varAssembleToOrderIndicator" select="'Y'"/>
      <corecomEBO:AssembleToOrderIndicator>
        <xsl:call-template name="lookupDVM">
          <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_INDICATOR.dvm'"/>
          <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode"/>
          <xsl:with-param name="varSourceValue" select="$varAssembleToOrderIndicator"/>
          <xsl:with-param name="varTargetValueColumnName" select="'COMMON'"/>
        </xsl:call-template>
      </corecomEBO:AssembleToOrderIndicator>
	 -->
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemOrderManagementCharacteristics_Custom" xml:id="id_955">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_956"/>
              </xsl:call-template>
            </corecomEBO:ItemOrderManagementCharacteristics>
          </xsl:if>
          <xsl:choose xml:id="id_957">
            <xsl:when test="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow" xml:id="id_958">
              <xsl:variable name="varManufacturers" xml:id="id_959">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name" xml:id="id_960">
                  <xsl:variable name="varTemp1" xml:id="id_961">
                    <xsl:value-of select="." xml:id="id_962"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp1),'|')" xml:id="id_963"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLManufacturers" xml:id="id_964">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_965">
                  <xsl:with-param name="varDelimitedString" select="string($varManufacturers)" xml:id="id_966"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_967"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="varUniqueManufacturers" xml:id="id_968">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]" xml:id="id_969">
                  <xsl:variable name="varTemp2" xml:id="id_970">
                    <xsl:value-of select="." xml:id="id_971"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp2),'|')" xml:id="id_972"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLUniqueManufacturers" xml:id="id_973">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_974">
                  <xsl:with-param name="varDelimitedString" select="string($varUniqueManufacturers)" xml:id="id_975"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_976"/>
                </xsl:call-template>
              </xsl:variable>
              <!--Bug 9888990 - change how the variable varIsFirstTimeRelease is populated for delta BOM issue. 
              Now look into XREF table to populate this variable. If XREF value found assign boolean false() 
              otherwise assign boolean true() -->
              <!--xsl:variable name="varIsFirstTimeRelease" select="boolean(not(./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase) or ./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase = 'Preliminary')"/-->
              <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_977"/>
              <!-- BUG 10210260 -->
              <!--<xsl:variable name="varIsFirstTimeRelease"
                     select="not(string($xrefValue) != '')"/>-->
              <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_978"/>
              <xsl:variable name="varIsFirstTimeRelease" select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_979"/>
              <!-- BUG 10210260 -->
              <!--Bug 9888990-->
              <xsl:variable name="varAI" select="." xml:id="id_980"/>
              <xsl:for-each select="$varXMLUniqueManufacturers/Token" xml:id="id_981">
                <xsl:variable name="varMfrName" select="." xml:id="id_982"/>
                <corecomEBO:ItemManufacturer xml:id="id_983">
                  <xsl:for-each select="$varAI/changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow[./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName]" xml:id="id_984">
                    <xsl:variable name="varposition" select="position()" xml:id="id_985"/>
                    <xsl:if test="($varposition = 1) and not(./@RedlineAction = 'Unchanged' and not($varIsFirstTimeRelease)) and not(./@RedlineAction = 'Deleted' and $varIsFirstTimeRelease)" xml:id="id_986">
                      <corecom:ManufacturerPartyReference xml:id="id_987">
                        <corecom:OrganizationName xml:id="id_988">
                          <xsl:value-of select="$varMfrName" xml:id="id_989"/>
                        </corecom:OrganizationName>
                      </corecom:ManufacturerPartyReference>
                    </xsl:if>
                    <xsl:choose xml:id="id_990">
                      <xsl:when test="./@RedlineAction = 'Unchanged' and not($varIsFirstTimeRelease)" xml:id="id_991"/>
                      <xsl:when test="./@RedlineAction = 'Deleted' and $varIsFirstTimeRelease" xml:id="id_992"/>
                      <xsl:otherwise xml:id="id_993">
                        <xsl:variable name="varActionCode" xml:id="id_994">
                          <xsl:if test="./@RedlineAction = 'Unchanged'" xml:id="id_995">CREATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Added'" xml:id="id_996">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                          <!--xsl:if test="./@RedlineAction = 'Changed'">UPDATE</xsl:if-->
                          <xsl:if test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_997">UPDATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease" xml:id="id_998">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                          <xsl:if test="./@RedlineAction = 'Deleted'" xml:id="id_999">DELETE</xsl:if>
                        </xsl:variable>
                        <xsl:choose xml:id="id_1000">
                          <xsl:when test="./@RedlineAction != 'Changed'" xml:id="id_1001">
                            <corecomEBO:RelatedManufacturerItem xml:id="id_1002">
                              <xsl:attribute name="actionCode" xml:id="id_1003">
                                <xsl:value-of select="$varActionCode" xml:id="id_1004"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_1005">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_1006">
                                  <xsl:value-of select="$varMfrName" xml:id="id_1007"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_1008">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1009">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1010"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1011">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1012"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <xsl:if test="./@RedlineAction != 'Deleted'" xml:id="id_1013">
                                <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1014">
                                  <xsl:choose xml:id="id_1015">
                                    <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1016">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1017"/>
                                    </xsl:when>
                                    <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1018">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1019"/>
                                    </xsl:when>
                                  </xsl:choose>
                                </corecom:PriorityCode>
                              </xsl:if>
                            </corecomEBO:RelatedManufacturerItem>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!--xsl:when test="./@RedlineAction = 'Changed'"-->
                          <xsl:when test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_1020">
                            <!-- BUG 9888995 -->
                            <xsl:choose xml:id="id_1021">
                              <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name" xml:id="id_1022">
                                <xsl:choose xml:id="id_1023">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1024">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_1025">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1026">
                                        <corecom:ManufacturerItemID xml:id="id_1027">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1028">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1029"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1030"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_1031">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1032">
                                        <corecom:ManufacturerItemID xml:id="id_1033">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1034">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1035"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1036"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1037">
                                          <xsl:choose xml:id="id_1038">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1039">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1040"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1041">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1042"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:when>
                                  <xsl:otherwise xml:id="id_1043">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_1044">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1045">
                                        <corecom:ManufacturerItemID xml:id="id_1046">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1047">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1048"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1049"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_1050">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1051">
                                        <corecom:ManufacturerItemID xml:id="id_1052">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1053">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1054"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1055"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1056">
                                          <xsl:choose xml:id="id_1057">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1058">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1059"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1060">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1061"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:otherwise xml:id="id_1062">
                                <xsl:choose xml:id="id_1063">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1064">
                                    <xsl:if test="not($varIsFirstTimeRelease)" xml:id="id_1065">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1066">
                                        <corecom:ManufacturerItemID xml:id="id_1067">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1068">
                                            <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1069"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1070"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1071">
                                      <corecom:ManufacturerItemID xml:id="id_1072">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_1073">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1074"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1075"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1076">
                                        <xsl:choose xml:id="id_1077">
                                          <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1078">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1079"/>
                                          </xsl:when>
                                          <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1080">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1081"/>
                                          </xsl:when>
                                        </xsl:choose>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus and ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus and not(./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus = ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus) " xml:id="id_1082">
                                    <corecomEBO:RelatedManufacturerItem actionCode="UPDATE" xml:id="id_1083">
                                      <corecom:ManufacturerItemID xml:id="id_1084">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_1085">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1086"/>
                                        </xsl:attribute>
                                        <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1087"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1088">
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1089"/>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                </xsl:choose>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!-- BUG 10242945 and 10261198 -->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease">-->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName">-->
                          <xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and (./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName)" xml:id="id_1090">
                            <!-- BUG 10242945 and 10261198 -->
                            <!-- BUG 10190393 -->
                            <corecomEBO:RelatedManufacturerItem xml:id="id_1091">
                              <xsl:attribute name="actionCode" xml:id="id_1092">
                                <xsl:value-of select="$varActionCode" xml:id="id_1093"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_1094">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_1095">
                                  <xsl:value-of select="$varMfrName" xml:id="id_1096"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_1097">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1098">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1099"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1100">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1101"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1102">
                                <xsl:choose xml:id="id_1103">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1104">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1105"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1106">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1107"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:PriorityCode>
                            </corecomEBO:RelatedManufacturerItem>
                            <!-- BUG 10190393 -->
                          </xsl:when>
                          <!-- BUG 9888995 -->
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturer_Custom" xml:id="id_1108">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1109"/>
                  </xsl:call-template>
                </corecomEBO:ItemManufacturer>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_Custom" xml:id="id_1110">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1111"/>
          </xsl:call-template>
        </corecomEBO:RevisedItem>
        <!--Bug 9888990 - change how the variable varIsFirstTimeRelease is populated for delta BOM issue. 
        Now look into XREF table to populate this variable. If XREF value found assign boolean false() 
        otherwise assign boolean true() -->
        <!--xsl:variable name="varIsFirstTimeRelease" select="boolean(not(./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase) or ./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase = 'Preliminary')"/-->
        <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_1112"/>
        <!-- BUG 10210260 -->
        <!--<xsl:variable name="varIsFirstTimeRelease"
                     select="not(string($xrefValue) != '')"/>-->
        <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_1113"/>
        <xsl:variable name="varIsFirstTimeRelease" select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_1114"/>
        <!-- BUG 10210260 -->
        <!--Bug 9888990-->
        <!-- fixing for boolean() function issue (BUG# 7622579) -->
        <!--
			<xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean($varIsFirstTimeRelease))">
			-->
        <xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_1115">
          <corecomEBO:RevisedBillOfMaterials xml:id="id_1116">
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added']" xml:id="id_1117">
              <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1118">
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1119">
                  <corecom:Identification xml:id="id_1120">
                    <corecom:ID xml:id="id_1121">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1122"/>
                    </corecom:ID>
                  </corecom:Identification>
                </xsl:if>
                <xsl:choose xml:id="id_1123">
                  <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1124">
                    <corecom:Quantity xml:id="id_1125">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1126"/>
                    </corecom:Quantity>
                  </xsl:when>
                  <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1127">
                    <corecom:Quantity xml:id="id_1128">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1129"/>
                    </corecom:Quantity>
                  </xsl:when>
                </xsl:choose>
                <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1130">
                  <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1131"/>
                  <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1132"/>
                  <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1133"/>
                </xsl:call-template>
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1134">
                  <corecom:ToRevisionNumber xml:id="id_1135">
                    <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1136"/>
                  </corecom:ToRevisionNumber>
                </xsl:if>
                <!-- @IMPORTANT - sending the change order lines effective date -->
                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1137">
                  <corecom:EffectiveTimePeriod xml:id="id_1138">
                    <corecom:StartDateTime xml:id="id_1139">
                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1140"/>
                    </corecom:StartDateTime>
                  </corecom:EffectiveTimePeriod>
                </xsl:if>
                <corecom:ItemReference xml:id="id_1141">
                  <corecom:ItemIdentification xml:id="id_1142">
                    <xsl:variable name="varItemNumber" xml:id="id_1143">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1144"/>
                    </xsl:variable>
                    <!--<xsl:variable name="varItemNumberinXREF">
                      <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                    </xsl:variable>-->
                    <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1145"/>
                    <xsl:variable name="varBusinessComponentID" xml:id="id_1146">
                      <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1147">
                        <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1148"/>
                        <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1149"/>
                        <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1150"/>
                        <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1151"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <corecom:BusinessComponentID xml:id="id_1152">
                      <xsl:value-of select="$varBusinessComponentID" xml:id="id_1153"/>
                    </corecom:BusinessComponentID>
                    <corecom:ID xml:id="id_1154">
                      <xsl:value-of select="$varItemNumber" xml:id="id_1155"/>
                    </corecom:ID>
                    <corecom:ApplicationObjectKey xml:id="id_1156">
                      <corecom:ID xml:id="id_1157">
                        <xsl:value-of select="$varItemNumber" xml:id="id_1158"/>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                    <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1159">
                      <corecom:Revision xml:id="id_1160">
                        <corecom:Number xml:id="id_1161">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1162"/>
                        </corecom:Number>
                      </corecom:Revision>
                    </xsl:if>
                  </corecom:ItemIdentification>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1163">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1164"/>
                  </xsl:call-template>
                </corecom:ItemReference>
                <corecomEBO:ChangeTypeCode xml:id="id_1165">ADD</corecomEBO:ChangeTypeCode>
                <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1166">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1167"/>
                  <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1168"/>
                  <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1169"/>
                  <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1170"/>
                </xsl:call-template>
                <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1171">
                  <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1172">
                    <corecom:Identification xml:id="id_1173">
                      <corecom:ID xml:id="id_1174">
                        <xsl:value-of select="." xml:id="id_1175"/>
                      </corecom:ID>
                      <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1176">
                        <corecom:Revision xml:id="id_1177">
                          <corecom:EffectiveDate xml:id="id_1178">
                            <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1179"/>
                          </corecom:EffectiveDate>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:Identification>
                    <corecomEBO:ChangeTypeCode xml:id="id_1180">ADD</corecomEBO:ChangeTypeCode>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1181">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1182"/>
                    </xsl:call-template>
                  </corecomEBO:ComponentItemProcessingInstruction>
                </xsl:for-each>
                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1183">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1184"/>
                </xsl:call-template>
              </corecomEBO:BillOfMaterialsComponentItem>
            </xsl:for-each>
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Changed']" xml:id="id_1185">
              <xsl:choose xml:id="id_1186">
                <!-- BUG 10197575 -->
                <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_1187">
                  <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1188">
                    <xsl:choose xml:id="id_1189">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1190">
                        <corecom:Identification xml:id="id_1191">
                          <corecom:ID xml:id="id_1192">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1193"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1194">
                        <corecom:Identification xml:id="id_1195">
                          <corecom:ID xml:id="id_1196">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1197"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:choose xml:id="id_1198">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1199">
                        <corecom:Quantity xml:id="id_1200">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1201"/>
                        </corecom:Quantity>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1202">
                        <corecom:Quantity xml:id="id_1203">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1204"/>
                        </corecom:Quantity>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1205">
                      <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1206"/>
                      <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1207"/>
                      <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1208"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_1209">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1210">
                        <corecom:ToRevisionNumber xml:id="id_1211">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1212"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1213">
                        <corecom:ToRevisionNumber xml:id="id_1214">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1215"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                    </xsl:choose>
                    <!-- @IMPORTANT - sending the change order lines effective date -->
                    <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1216">
                      <corecom:EffectiveTimePeriod xml:id="id_1217">
                        <corecom:StartDateTime xml:id="id_1218">
                          <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1219"/>
                        </corecom:StartDateTime>
                      </corecom:EffectiveTimePeriod>
                    </xsl:if>
                    <corecom:ItemReference xml:id="id_1220">
                      <corecom:ItemIdentification xml:id="id_1221">
                        <xsl:variable name="varItemNumber" xml:id="id_1222">
                          <xsl:choose xml:id="id_1223">
                            <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1224">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1225"/>
                            </xsl:when>
                            <xsl:otherwise xml:id="id_1226">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_1227"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1228"/>
                        <xsl:variable name="varBusinessComponentID" xml:id="id_1229">
                          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1230">
                            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1231"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1232"/>
                            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1233"/>
                            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1234"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <corecom:BusinessComponentID xml:id="id_1235">
                          <xsl:value-of select="$varBusinessComponentID" xml:id="id_1236"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID xml:id="id_1237">
                          <xsl:value-of select="$varItemNumber" xml:id="id_1238"/>
                        </corecom:ID>
                        <corecom:ApplicationObjectKey xml:id="id_1239">
                          <corecom:ID xml:id="id_1240">
                            <xsl:value-of select="$varItemNumber" xml:id="id_1241"/>
                          </corecom:ID>
                        </corecom:ApplicationObjectKey>
                        <xsl:choose xml:id="id_1242">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1243">
                            <corecom:Revision xml:id="id_1244">
                              <corecom:Number xml:id="id_1245">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1246"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1247">
                            <corecom:Revision xml:id="id_1248">
                              <corecom:Number xml:id="id_1249">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1250"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                        </xsl:choose>
                      </corecom:ItemIdentification>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1251">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1252"/>
                      </xsl:call-template>
                    </corecom:ItemReference>
                    <corecomEBO:ChangeTypeCode xml:id="id_1253">ADD</corecomEBO:ChangeTypeCode>
                    <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1254">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1255"/>
                      <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1256"/>
                      <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1257"/>
                      <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1258"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_1259">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_1260">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1261">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1262">
                            <corecom:Identification xml:id="id_1263">
                              <corecom:ID xml:id="id_1264">
                                <xsl:value-of select="." xml:id="id_1265"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1266">
                                <corecom:Revision xml:id="id_1267">
                                  <corecom:EffectiveDate xml:id="id_1268">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1269"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_1270">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1271">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1272"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_1273">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1274">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1275">
                            <corecom:Identification xml:id="id_1276">
                              <corecom:ID xml:id="id_1277">
                                <xsl:value-of select="." xml:id="id_1278"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1279">
                                <corecom:Revision xml:id="id_1280">
                                  <corecom:EffectiveDate xml:id="id_1281">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1282"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_1283">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1284">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1285"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>                    
                    </xsl:choose>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1286">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1287"/>
                      </xsl:call-template>
                  </corecomEBO:BillOfMaterialsComponentItem>
                </xsl:when>
                <xsl:otherwise xml:id="id_1288">
                  <xsl:choose xml:id="id_1289">
                    <!-- BUG 10197575 -->
                    <xsl:when test="(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber) and not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber = ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber)" xml:id="id_1290">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1291">
                        <xsl:choose xml:id="id_1292">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1293">
                            <corecom:Identification xml:id="id_1294">
                              <corecom:ID xml:id="id_1295">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1296"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1297">
                            <corecom:Identification xml:id="id_1298">
                              <corecom:ID xml:id="id_1299">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1300"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:choose xml:id="id_1301">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1302">
                            <corecom:Quantity xml:id="id_1303">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1304"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1305">
                            <corecom:Quantity xml:id="id_1306">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1307"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1308">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1309"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1310"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1311"/>
                        </xsl:call-template>
                        <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1312">
                          <corecom:ToRevisionNumber xml:id="id_1313">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1314"/>
                          </corecom:ToRevisionNumber>
                        </xsl:if>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1315">
                          <corecom:EffectiveTimePeriod xml:id="id_1316">
                            <corecom:StartDateTime xml:id="id_1317">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1318"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if>
                        <corecom:ItemReference xml:id="id_1319">
                          <corecom:ItemIdentification xml:id="id_1320">
                            <xsl:variable name="varItemNumber" select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1321"/>
                            <!--<xsl:variable name="varItemNumberinXREF"><xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varSiteID"/>::<xsl:value-of select="$varOrganizationCode"/></xsl:variable>-->
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1322"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_1323">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1324">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1325"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1326"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1327"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1328"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_1329">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_1330"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_1331">
                              <xsl:value-of select="$varItemNumber" xml:id="id_1332"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_1333">
                              <corecom:ID xml:id="id_1334">
                                <xsl:value-of select="$varItemNumber" xml:id="id_1335"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1336">
                              <corecom:Revision xml:id="id_1337">
                                <corecom:Number xml:id="id_1338">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1339"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1340">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1341"/>
                          </xsl:call-template>
                        </corecom:ItemReference>
                        <corecomEBO:ChangeTypeCode xml:id="id_1342">ADD</corecomEBO:ChangeTypeCode>
                        <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1343">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1344"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1345"/>
                          <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1346"/>
                          <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1347"/>
                        </xsl:call-template>
						<!-- Bug 16517599-->
                        <!--xsl:if test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator) > 0" xml:id="id_1348">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1349">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1350">
                              <corecom:Identification xml:id="id_1351">
                                <corecom:ID xml:id="id_1352">
                                  <xsl:value-of select="." xml:id="id_1353"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1354">
                                  <corecom:Revision xml:id="id_1355">
                                    <corecom:EffectiveDate xml:id="id_1356">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1357"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_1358">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1359">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1360"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if-->
					<xsl:choose xml:id="id_4028">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_4029">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4030">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4031">
                            <corecom:Identification xml:id="id_4032">
                              <corecom:ID xml:id="id_4033">
                                <xsl:value-of select="." xml:id="id_4034"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4035">
                                <corecom:Revision xml:id="id_4036">
                                  <corecom:EffectiveDate xml:id="id_4037">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4038"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4039">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4040">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4041"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_4042">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4043">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4044">
                            <corecom:Identification xml:id="id_4045">
                              <corecom:ID xml:id="id_4046">
                                <xsl:value-of select="." xml:id="id_4047"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4048">
                                <corecom:Revision xml:id="id_4049">
                                  <corecom:EffectiveDate xml:id="id_4050">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4051"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4052">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4053">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4054"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>                    
                    </xsl:choose>		
					<!-- Bug 16517599-->					
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1361">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1362"/>
                        </xsl:call-template>
                      </corecomEBO:BillOfMaterialsComponentItem>
                      <!-- fixing for boolean() function issue (BUG# 7622579) -->
                      <!--<xsl:if test="not(boolean($varIsFirstTimeRelease))">-->
                      <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_1363">
                        <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1364">
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1365">
                            <corecom:Identification xml:id="id_1366">
                              <corecom:ID xml:id="id_1367">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1368"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:if>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1369">
                            <corecom:Quantity xml:id="id_1370">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1371"/>
                            </corecom:Quantity>
                          </xsl:if>
                          <xsl:call-template name="BOMComponentData_Previous" xml:id="id_1372">
                            <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1373"/>
                            <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1374"/>
                            <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1375"/>
                          </xsl:call-template>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1376">
                            <corecom:ToRevisionNumber xml:id="id_1377">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1378"/>
                            </corecom:ToRevisionNumber>
                          </xsl:if>
                          <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1379">
                            <corecom:EffectiveTimePeriod xml:id="id_1380">
                              <corecom:StartDateTime xml:id="id_1381">
                                <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1382"/>
                              </corecom:StartDateTime>
                            </corecom:EffectiveTimePeriod>
                          </xsl:if>
                          <corecom:ItemReference xml:id="id_1383">
                            <corecom:ItemIdentification xml:id="id_1384">
                              <xsl:variable name="varItemNumber" xml:id="id_1385">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_1386"/>
                              </xsl:variable>
                              <!--<xsl:variable name="varItemNumberinXREF">
                            <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                          </xsl:variable>-->
                              <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1387"/>
                              <xsl:variable name="varBusinessComponentID" xml:id="id_1388">
                                <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1389">
                                  <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1390"/>
                                  <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1391"/>
                                  <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1392"/>
                                  <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1393"/>
                                </xsl:call-template>
                              </xsl:variable>
                              <corecom:BusinessComponentID xml:id="id_1394">
                                <xsl:value-of select="$varBusinessComponentID" xml:id="id_1395"/>
                              </corecom:BusinessComponentID>
                              <corecom:ID xml:id="id_1396">
                                <xsl:value-of select="$varItemNumber" xml:id="id_1397"/>
                              </corecom:ID>
                              <corecom:ApplicationObjectKey xml:id="id_1398">
                                <corecom:ID xml:id="id_1399">
                                  <xsl:value-of select="$varItemNumber" xml:id="id_1400"/>
                                </corecom:ID>
                              </corecom:ApplicationObjectKey>
                              <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1401">
                                <corecom:Revision xml:id="id_1402">
                                  <corecom:Number xml:id="id_1403">
                                    <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1404"/>
                                  </corecom:Number>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:ItemIdentification>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1405">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1406"/>
                            </xsl:call-template>
                          </corecom:ItemReference>
                          <corecomEBO:ChangeTypeCode xml:id="id_1407">DISABLE</corecomEBO:ChangeTypeCode>
                          <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1408">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1409"/>
                            <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1410"/>
                            <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1411"/>
                            <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1412"/>
                          </xsl:call-template>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1413">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1414"/>
                          </xsl:call-template>
                        </corecomEBO:BillOfMaterialsComponentItem>
                      </xsl:if>
                    </xsl:when>
                    <xsl:otherwise xml:id="id_1415">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1416">
                        <xsl:choose xml:id="id_1417">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1418">
                            <corecom:Identification xml:id="id_1419">
                              <corecom:ID xml:id="id_1420">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1421"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1422">
                            <corecom:Identification xml:id="id_1423">
                              <corecom:ID xml:id="id_1424">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1425"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:choose xml:id="id_1426">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1427">
                            <corecom:Quantity xml:id="id_1428">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1429"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1430">
                            <corecom:Quantity xml:id="id_1431">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1432"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1433">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1434"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1435"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1436"/>
                        </xsl:call-template>
                        <xsl:choose xml:id="id_1437">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1438">
                            <corecom:ToRevisionNumber xml:id="id_1439">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1440"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                          <xsl:when test="not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1441">
                            <corecom:ToRevisionNumber xml:id="id_1442">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1443"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1444">
                          <corecom:EffectiveTimePeriod xml:id="id_1445">
                            <corecom:StartDateTime xml:id="id_1446">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1447"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if>
                        <corecom:ItemReference xml:id="id_1448">
                          <corecom:ItemIdentification xml:id="id_1449">
                            <xsl:variable name="varItemNumber" xml:id="id_1450">
                              <xsl:choose xml:id="id_1451">
                                <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and not(string(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber) = '')" xml:id="id_1452">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1453"/>
                                </xsl:when>
                                <xsl:otherwise xml:id="id_1454">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_1455"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1456"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_1457">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1458">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1459"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1460"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1461"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1462"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_1463">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_1464"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_1465">
                              <xsl:value-of select="$varItemNumber" xml:id="id_1466"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_1467">
                              <corecom:ID xml:id="id_1468">
                                <xsl:value-of select="$varItemNumber" xml:id="id_1469"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1470">
                              <corecom:Revision xml:id="id_1471">
                                <corecom:Number xml:id="id_1472">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1473"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1474">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1475"/>
                          </xsl:call-template>
                        </corecom:ItemReference>
                        <xsl:choose xml:id="id_1476">
                          <!-- fixing for boolean() function issue (BUG# 7622579) -->
                          <!-- <xsl:when test="boolean($varIsFirstTimeRelease)"> -->
                          <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_1477">
                            <corecomEBO:ChangeTypeCode xml:id="id_1478">ADD</corecomEBO:ChangeTypeCode>
                          </xsl:when>
                          <xsl:otherwise xml:id="id_1479">
                            <corecomEBO:ChangeTypeCode xml:id="id_1480">CHANGE</corecomEBO:ChangeTypeCode>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1481">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1482"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1483"/>
                          <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1484"/>
                          <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1485"/>
                        </xsl:call-template>
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_1486">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1487">
                            <corecom:Identification xml:id="id_1488">
                              <corecom:ID xml:id="id_1489">
                                <xsl:value-of select="." xml:id="id_1490"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1491">
                                <corecom:Revision xml:id="id_1492">
                                  <corecom:EffectiveDate xml:id="id_1493">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1494"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_1495">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1496">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1497"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                        <!-- fixing for boolean() function issue (BUG# 7622579) -->
                        <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
                        <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_1498">
                          <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators" xml:id="id_1499">
                            <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_1500">
                              <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1501">
                                <corecom:Identification xml:id="id_1502">
                                  <corecom:ID xml:id="id_1503">
                                    <xsl:value-of select="." xml:id="id_1504"/>
                                  </corecom:ID>
                                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1505">
                                    <corecom:Revision xml:id="id_1506">
                                      <corecom:EffectiveDate xml:id="id_1507">
                                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1508"/>
                                      </corecom:EffectiveDate>
                                    </corecom:Revision>
                                  </xsl:if>
                                </corecom:Identification>
                                <corecomEBO:ChangeTypeCode xml:id="id_1509">DISABLE</corecomEBO:ChangeTypeCode>
                                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1510">
                                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1511"/>
                                </xsl:call-template>
                              </corecomEBO:ComponentItemProcessingInstruction>
                            </xsl:for-each>
                          </xsl:if>
                        </xsl:if>
                        <!-- <xsl:if test="boolean($varIsFirstTimeRelease) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)"> -->
                        <!-- fixing for boolean() function issue (BUG# 7622579) -->
                        <xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true') and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)" xml:id="id_1512">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1513">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1514">
                              <corecom:Identification xml:id="id_1515">
                                <corecom:ID xml:id="id_1516">
                                  <xsl:value-of select="." xml:id="id_1517"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1518">
                                  <corecom:Revision xml:id="id_1519">
                                    <corecom:EffectiveDate xml:id="id_1520">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1521"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_1522">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1523">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1524"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if>
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1525">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1526"/>
                        </xsl:call-template>
                      </corecomEBO:BillOfMaterialsComponentItem>
                    </xsl:otherwise>
                    <!-- BUG 10197575 -->
                  </xsl:choose>
                </xsl:otherwise>
                <!-- BUG 10197575 -->
              </xsl:choose>
            </xsl:for-each>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
            <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_1527">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Deleted']" xml:id="id_1528">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1529">
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1530">
                    <corecom:Identification xml:id="id_1531">
                      <corecom:ID xml:id="id_1532">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_1533"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1534">
                    <corecom:Quantity xml:id="id_1535">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1536"/>
                    </corecom:Quantity>
                  </xsl:if>
                  <xsl:call-template name="BOMComponentData_Previous" xml:id="id_1537">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1538"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1539"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1540"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1541">
                    <corecom:ToRevisionNumber xml:id="id_1542">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1543"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1544">
                    <corecom:EffectiveTimePeriod xml:id="id_1545">
                      <corecom:StartDateTime xml:id="id_1546">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1547"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_1548">
                    <corecom:ItemIdentification xml:id="id_1549">
                      <xsl:variable name="varItemNumber" xml:id="id_1550">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_1551"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1552"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_1553">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1554">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1555"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1556"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1557"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1558"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_1559">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_1560"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_1561">
                        <xsl:value-of select="$varItemNumber" xml:id="id_1562"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_1563">
                        <corecom:ID xml:id="id_1564">
                          <xsl:value-of select="$varItemNumber" xml:id="id_1565"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1566">
                        <corecom:Revision xml:id="id_1567">
                          <corecom:Number xml:id="id_1568">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_1569"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1570">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1571"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_1572">DISABLE</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1573">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1574"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1575"/>
                    <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1576"/>
                    <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1577"/>
                  </xsl:call-template>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1578">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1579"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="boolean($varIsFirstTimeRelease)"> -->
            <xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_1580">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']" xml:id="id_1581">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1582">
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1583">
                    <corecom:Identification xml:id="id_1584">
                      <corecom:ID xml:id="id_1585">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1586"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:choose xml:id="id_1587">
                    <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1588">
                      <corecom:Quantity xml:id="id_1589">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1590"/>
                      </corecom:Quantity>
                    </xsl:when>
                    <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1591">
                      <corecom:Quantity xml:id="id_1592">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1593"/>
                      </corecom:Quantity>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1594">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1595"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1596"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1597"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1598">
                    <corecom:ToRevisionNumber xml:id="id_1599">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1600"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <!-- @IMPORTANT - sending the change order lines effective date -->
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1601">
                    <corecom:EffectiveTimePeriod xml:id="id_1602">
                      <corecom:StartDateTime xml:id="id_1603">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1604"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_1605">
                    <corecom:ItemIdentification xml:id="id_1606">
                      <xsl:variable name="varItemNumber" xml:id="id_1607">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1608"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1609"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_1610">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1611">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1612"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1613"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1614"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1615"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_1616">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_1617"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_1618">
                        <xsl:value-of select="$varItemNumber" xml:id="id_1619"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_1620">
                        <corecom:ID xml:id="id_1621">
                          <xsl:value-of select="$varItemNumber" xml:id="id_1622"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1623">
                        <corecom:Revision xml:id="id_1624">
                          <corecom:Number xml:id="id_1625">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1626"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_1627">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1628"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_1629">ADD</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_1630">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1631"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_1632"/>
                    <xsl:with-param name="varSiteID" select="$varSiteID" xml:id="id_1633"/>
                    <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_1634"/>
                  </xsl:call-template>
                  <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_1635">
                    <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_1636">
                      <corecom:Identification xml:id="id_1637">
                        <corecom:ID xml:id="id_1638">
                          <xsl:value-of select="." xml:id="id_1639"/>
                        </corecom:ID>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1640">
                          <corecom:Revision xml:id="id_1641">
                            <corecom:EffectiveDate xml:id="id_1642">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1643"/>
                            </corecom:EffectiveDate>
                          </corecom:Revision>
                        </xsl:if>
                      </corecom:Identification>
                      <corecomEBO:ChangeTypeCode xml:id="id_1644">ADD</corecomEBO:ChangeTypeCode>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_1645">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1646"/>
                      </xsl:call-template>
                    </corecomEBO:ComponentItemProcessingInstruction>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_1647">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1648"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_Custom" xml:id="id_1649">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1650"/>
            </xsl:call-template>
          </corecomEBO:RevisedBillOfMaterials>
        </xsl:if>
        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_Custom" xml:id="id_1651">
          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1652"/>
        </xsl:call-template>
      </changeEBO:EngineeringChangeOrderLine>
    </xsl:for-each>
  </xsl:template>
  <!-- 
      @Template: createEngineeringChangeOrderLines_With_OrgData 
      @Purpose: Creates multiple 'EngineeringChangeOrderLine' with Organization data appearing on Item PageTwo.Multilist01
      @Logic:    
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'
      @Parameter: varEngineeringChangeOrderNumber => Number of the Engineering Change Order, which is in context of this template call      
      @Parameter: varOrganizationCode => Organization code, which is in context of this template call 
      @Requires:
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR'  
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR'      
                  DVM: 'ITEM_PRIMARYCLASSIFICATIONCODE'
                  DVM: 'ITEM_BOM_ITEMTYPE_CODE'
                  DVM: 'ITEM_WIP_SUPPLY_CODE'
                  DVM: 'ITEM_INDICATOR'  (planned
                  DVM: 'ITEM_UOM_CODE'
                  XREF: 'ITEM_ITEMID'                 
  -->
  <xsl:template name="createEngineeringChangeOrderLines_With_OrgData" xml:id="id_1653">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1654"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_1655"/>
    <xsl:param name="varOrganizationCode" xml:id="id_1656"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_1657"/>
    <xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems[./changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value = $varOrganizationCode]" xml:id="id_1658">
      <changeEBO:EngineeringChangeOrderLine actionCode="CREATE" xml:id="id_1659">
        <xsl:variable name="varChangeOrderLineEffDate" xml:id="id_1660">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_1661"/>
        </xsl:variable>
        <xsl:variable name="varItemNumber" xml:id="id_1662">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_1663"/>
        </xsl:variable>
        <!--<xsl:variable name="varItemNumberinXREF">
          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
        </xsl:variable>-->
        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1664"/>
        <xsl:variable name="varBusinessComponentID" xml:id="id_1665">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1666">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1667"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1668"/>
            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1669"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1670"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:Identification xml:id="id_1671">
          <corecom:BusinessComponentID xml:id="id_1672">
            <xsl:value-of select="$varBusinessComponentID" xml:id="id_1673"/>
          </corecom:BusinessComponentID>
          <corecom:ID xml:id="id_1674">
            <xsl:value-of select="$varItemNumber" xml:id="id_1675"/>
          </corecom:ID>
          <corecom:ApplicationObjectKey xml:id="id_1676">
            <corecom:ID xml:id="id_1677">
              <xsl:value-of select="$varItemNumber" xml:id="id_1678"/>
            </corecom:ID>
          </corecom:ApplicationObjectKey>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_1679">
            <corecom:Revision xml:id="id_1680">
              <corecom:Number xml:id="id_1681">
                <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_1682"/>
              </corecom:Number>
            </corecom:Revision>
          </xsl:if>
        </corecom:Identification>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_1683">
          <changeEBO:Description xml:id="id_1684">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_1685"/>
          </changeEBO:Description>
        </xsl:if>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_1686">
          <changeEBO:EffectiveDate xml:id="id_1687">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_1688"/>
          </changeEBO:EffectiveDate>
        </xsl:if>
        <corecomEBO:CurrentItem xml:id="id_1689">
          <xsl:if test="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_1690">
            <corecomEBO:Description xml:id="id_1691">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_1692"/>
            </corecomEBO:Description>
          </xsl:if>
          <corecom:ItemIdentification xml:id="id_1693">
            <corecom:BusinessComponentID xml:id="id_1694">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_1695"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_1696">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_1697"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_1698">
              <corecom:ID xml:id="id_1699">
                <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_1700"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:choose xml:id="id_1701">
              <xsl:when test="./changeABO:AffectedItemRow/changeABO:OldRev and not(substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ') = '')" xml:id="id_1702">
                <corecom:Revision xml:id="id_1703">
                  <corecom:Number xml:id="id_1704">
                    <xsl:value-of select="substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ')" xml:id="id_1705"/>
                  </corecom:Number>
                </corecom:Revision>
              </xsl:when>
            </xsl:choose>
          </corecom:ItemIdentification>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_CurrentItem_Custom" xml:id="id_1706">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1707"/>
          </xsl:call-template>
        </corecomEBO:CurrentItem>
        <xsl:variable name="varBOMItemType" xml:id="id_1708">
          <xsl:choose xml:id="id_1709">
            <xsl:when test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_1710">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_1711"/>
            </xsl:when>
            <xsl:otherwise xml:id="id_1712">
              <xsl:value-of select="''" xml:id="id_1713"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="varBOMItemTypeCommon" xml:id="id_1714">
          <xsl:choose xml:id="id_1715">
            <xsl:when test="$varBOMItemType != ''" xml:id="id_1716">
              <xsl:call-template name="lookupDVM" xml:id="id_1717">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_BOM_ITEMTYPE_CODE.dvm'" xml:id="id_1718"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_1719"/>
                <xsl:with-param name="varSourceValue" select="$varBOMItemType" xml:id="id_1720"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_1721"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise xml:id="id_1722">
              <xsl:value-of select="''" xml:id="id_1723"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <corecomEBO:RevisedItem xml:id="id_1724">
          <xsl:if test="not(string($varItemNumber) = '')" xml:id="id_1725">
            <corecomEBO:Name xml:id="id_1726">
              <xsl:value-of select="$varItemNumber" xml:id="id_1727"/>
            </corecomEBO:Name>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1728">
            <corecomEBO:Description xml:id="id_1729">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1730"/>
            </corecomEBO:Description>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_1731">
            <xsl:variable name="varPartType" xml:id="id_1732">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_1733"/>
            </xsl:variable>
            <corecomEBO:PrimaryClassificationCode xml:id="id_1734">
              <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm',$SystemInstanceCode,$varPartType,'COMMON',$varPartType)"/>-->
              <xsl:call-template name="lookupDVM" xml:id="id_1735">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm'" xml:id="id_1736"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_1737"/>
                <xsl:with-param name="varSourceValue" select="$varPartType" xml:id="id_1738"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_1739"/>
              </xsl:call-template>
            </corecomEBO:PrimaryClassificationCode>
          </xsl:if>
          <!-- BUG 10637226  -->
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1740">
            <corecomEBO:ShortDescription xml:id="id_1741">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1742"/>
            </corecomEBO:ShortDescription>
          </xsl:if>
          <!-- BUG 10637226  -->          
          <corecom:ItemIdentification xml:id="id_1743">
            <corecom:BusinessComponentID xml:id="id_1744">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_1745"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_1746">
              <xsl:value-of select="$varItemNumber" xml:id="id_1747"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_1748">
              <corecom:ID xml:id="id_1749">
                <xsl:value-of select="$varItemNumber" xml:id="id_1750"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_1751">
              <corecom:Revision xml:id="id_1752">
                <corecom:Number xml:id="id_1753">
                  <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_1754"/>
                </corecom:Number>
              </corecom:Revision>
            </xsl:if>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1755">
              <corecom:Description xml:id="id_1756">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_1757"/>
              </corecom:Description>
            </xsl:if>
          </corecom:ItemIdentification>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_1758">
            <xsl:variable name="varItemLifeCyclePhase" xml:id="id_1759">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_1760"/>
            </xsl:variable>
            <corecom:Status xml:id="id_1761">
              <corecom:Code xml:id="id_1762">
                <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm',$SystemInstanceCode,$varItemLifeCyclePhase,'COMMON',$varItemLifeCyclePhase)"/>-->
                <xsl:call-template name="lookupDVM" xml:id="id_1763">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm'" xml:id="id_1764"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_1765"/>
                  <xsl:with-param name="varSourceValue" select="$varItemLifeCyclePhase" xml:id="id_1766"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_1767"/>
                </xsl:call-template>
              </corecom:Code>
            </corecom:Status>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass" xml:id="id_1768">
            <corecomEBO:ItemPhysicalCharacteristics xml:id="id_1769">
              <xsl:variable name="varWeightMeasureUOM" xml:id="id_1770">
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass/@UOM)" xml:id="id_1771"/>
              </xsl:variable>
              <corecomEBO:WeightMeasure xml:id="id_1772">
                <xsl:attribute name="unitCode" xml:id="id_1773">
                  <!--<xsl:value-of select="lookupDVM('ITEM_UOM_CODE',$SystemInstanceCode,$varWeightMeasureUOM,'COMMON',$varWeightMeasureUOM)"/>-->
                  <xsl:call-template name="lookupDVM" xml:id="id_1774">
                    <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_UOM_CODE.dvm'" xml:id="id_1775"/>
                    <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_1776"/>
                    <xsl:with-param name="varSourceValue" select="$varWeightMeasureUOM" xml:id="id_1777"/>
                    <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_1778"/>
                  </xsl:call-template>
                </xsl:attribute>
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass)" xml:id="id_1779"/>
              </corecomEBO:WeightMeasure>
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemPhysicalCharacteristics_Custom" xml:id="id_1780">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1781"/>
              </xsl:call-template>
            </corecomEBO:ItemPhysicalCharacteristics>
          </xsl:if>
		  <!--@Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Starts
	 <corecomEBO:InventoryCharacteristics xml:id="IC_2">
             <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List07" xml:id="LOT_4">
                 <corecomEBO:LotControlCode xml:id="LOT_5">
                       <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_LOTEXPIRATION_ON_RECEIPT_INDICATOR.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07)" xml:id="LOT_6"/>
                  </corecomEBO:LotControlCode >
              </xsl:if>

               <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List08" xml:id="SER_4">
                     <corecomEBO:SerializationEventCode xml:id="SER_5">
                       <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_SERIALIZATION_EVENT_CODE.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08)" xml:id="SER_6"/>
                      </corecomEBO:SerializationEventCode>
                </xsl:if>
</corecomEBO:InventoryCharacteristics>
             @Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Ends-->

          <corecomEBO:ItemManufacturingCharacteristics xml:id="id_1782">
            <corecomEBO:StructureAllowedIndicator xml:id="id_1783">YES</corecomEBO:StructureAllowedIndicator>
            <xsl:if test="$varBOMItemTypeCommon != ''" xml:id="id_1784">
              <corecomEBO:BOMItemTypeCode xml:id="id_1785">
                <xsl:value-of select="$varBOMItemTypeCommon" xml:id="id_1786"/>
              </corecomEBO:BOMItemTypeCode>
            </xsl:if>
            <xsl:if test="($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_1787">
              <!--
    <corecomEBO:WIPSupplyTypeCode>REFERENCE_UNPLANNED_UNCOSTED</corecomEBO:WIPSupplyTypeCode>
	 -->
              <xsl:variable name="varWIPSupplyTypeCode" select="'Phantom'" xml:id="id_1788"/>
              <corecomEBO:WIPSupplyTypeCode xml:id="id_1789">
                <xsl:call-template name="lookupDVM" xml:id="id_1790">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_WIP_SUPPLY_CODE.dvm'" xml:id="id_1791"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_1792"/>
                  <xsl:with-param name="varSourceValue" select="$varWIPSupplyTypeCode" xml:id="id_1793"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_1794"/>
                </xsl:call-template>
              </corecomEBO:WIPSupplyTypeCode>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturingCharacteristics_Custom" xml:id="id_1795">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1796"/>
            </xsl:call-template>
          </corecomEBO:ItemManufacturingCharacteristics>
          <xsl:if test="($varBOMItemTypeCommon = 'MODEL') or ($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_1797">
            <corecomEBO:ItemOrderManagementCharacteristics xml:id="id_1798">
              <corecomEBO:AssembleToOrderIndicator xml:id="id_1799">Y</corecomEBO:AssembleToOrderIndicator>
              <!--
      <xsl:variable name="varAssembleToOrderIndicator" select="'Y'"/>
      <corecomEBO:AssembleToOrderIndicator>
        <xsl:call-template name="lookupDVM">
          <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_INDICATOR.dvm'"/>
          <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode"/>
          <xsl:with-param name="varSourceValue" select="$varAssembleToOrderIndicator"/>
          <xsl:with-param name="varTargetValueColumnName" select="'COMMON'"/>
        </xsl:call-template>
      </corecomEBO:AssembleToOrderIndicator>
	 -->
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemOrderManagementCharacteristics_Custom" xml:id="id_1800">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1801"/>
              </xsl:call-template>
            </corecomEBO:ItemOrderManagementCharacteristics>
          </xsl:if>
          <xsl:choose xml:id="id_1802">
            <xsl:when test="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow" xml:id="id_1803">
              <xsl:variable name="varManufacturers" xml:id="id_1804">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name" xml:id="id_1805">
                  <xsl:variable name="varTemp1" xml:id="id_1806">
                    <xsl:value-of select="." xml:id="id_1807"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp1),'|')" xml:id="id_1808"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLManufacturers" xml:id="id_1809">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_1810">
                  <xsl:with-param name="varDelimitedString" select="string($varManufacturers)" xml:id="id_1811"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_1812"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="varUniqueManufacturers" xml:id="id_1813">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]" xml:id="id_1814">
                  <xsl:variable name="varTemp2" xml:id="id_1815">
                    <xsl:value-of select="." xml:id="id_1816"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp2),'|')" xml:id="id_1817"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLUniqueManufacturers" xml:id="id_1818">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_1819">
                  <xsl:with-param name="varDelimitedString" select="string($varUniqueManufacturers)" xml:id="id_1820"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_1821"/>
                </xsl:call-template>
              </xsl:variable>
              <!--Bug 9888990 - change how the variable varIsFirstTimeRelease is populated for delta BOM issue. 
              Now look into XREF table to populate this variable. If XREF value found assign boolean false() 
              otherwise assign boolean true() -->
              <!--xsl:variable name="varIsFirstTimeRelease" select="boolean(not(./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase) or ./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase = 'Preliminary')"/-->
              <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_1822"/>
              <!-- BUG 10210260 -->
              <!--<xsl:variable name="varIsFirstTimeRelease"
                     select="not(string($xrefValue) != '')"/>-->
              <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_1823"/>
              <xsl:variable name="varIsFirstTimeRelease" select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_1824"/>
              <!-- BUG 10210260 -->
              <!--Bug 9888990-->
              <xsl:variable name="varAI" select="." xml:id="id_1825"/>
              <xsl:for-each select="$varXMLUniqueManufacturers/Token" xml:id="id_1826">
                <xsl:variable name="varMfrName" select="." xml:id="id_1827"/>
                <corecomEBO:ItemManufacturer xml:id="id_1828">
                  <xsl:for-each select="$varAI/changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow[./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName]" xml:id="id_1829">
                    <xsl:variable name="varposition" select="position()" xml:id="id_1830"/>
                    <xsl:choose xml:id="id_1831">
                      <xsl:when test="./@RedlineAction = 'Unchanged' and not($varIsFirstTimeRelease)" xml:id="id_1832"/>
                      <xsl:when test="./@RedlineAction = 'Deleted' and $varIsFirstTimeRelease" xml:id="id_1833"/>
                      <xsl:otherwise xml:id="id_1834">
                        <xsl:if test="$varposition = 1" xml:id="id_1835">
                          <corecom:ManufacturerPartyReference xml:id="id_1836">
                            <corecom:OrganizationName xml:id="id_1837">
                              <xsl:value-of select="$varMfrName" xml:id="id_1838"/>
                            </corecom:OrganizationName>
                          </corecom:ManufacturerPartyReference>
                        </xsl:if>
                        <xsl:variable name="varActionCode" xml:id="id_1839">
                          <xsl:if test="./@RedlineAction = 'Unchanged'" xml:id="id_1840">CREATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Added'" xml:id="id_1841">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                          <!--xsl:if test="./@RedlineAction = 'Changed'">UPDATE</xsl:if-->
                          <xsl:if test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_1842">UPDATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease" xml:id="id_1843">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                          <xsl:if test="./@RedlineAction = 'Deleted'" xml:id="id_1844">DELETE</xsl:if>
                        </xsl:variable>
                        <xsl:choose xml:id="id_1845">
                          <xsl:when test="./@RedlineAction != 'Changed'" xml:id="id_1846">
                            <corecomEBO:RelatedManufacturerItem xml:id="id_1847">
                              <xsl:attribute name="actionCode" xml:id="id_1848">
                                <xsl:value-of select="$varActionCode" xml:id="id_1849"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_1850">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_1851">
                                  <xsl:value-of select="$varMfrName" xml:id="id_1852"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_1853">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1854">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1855"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1856">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1857"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <xsl:if test="./@RedlineAction != 'Deleted'" xml:id="id_1858">
                                <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1859">
                                  <xsl:choose xml:id="id_1860">
                                    <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1861">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1862"/>
                                    </xsl:when>
                                    <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1863">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1864"/>
                                    </xsl:when>
                                  </xsl:choose>
                                </corecom:PriorityCode>
                              </xsl:if>
                            </corecomEBO:RelatedManufacturerItem>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!--xsl:when test="./@RedlineAction = 'Changed'"-->
                          <xsl:when test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_1865">
                            <!-- BUG 9888995 -->
                            <xsl:choose xml:id="id_1866">
                              <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name" xml:id="id_1867">
                                <xsl:choose xml:id="id_1868">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1869">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_1870">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1871">
                                        <corecom:ManufacturerItemID xml:id="id_1872">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1873">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1874"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1875"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_1876">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1877">
                                        <corecom:ManufacturerItemID xml:id="id_1878">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1879">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1880"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1881"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1882">
                                          <xsl:choose xml:id="id_1883">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1884">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1885"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1886">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1887"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:when>
                                  <xsl:otherwise xml:id="id_1888">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_1889">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1890">
                                        <corecom:ManufacturerItemID xml:id="id_1891">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1892">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1893"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1894"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_1895">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1896">
                                        <corecom:ManufacturerItemID xml:id="id_1897">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1898">
                                            <xsl:value-of select="$varMfrName" xml:id="id_1899"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1900"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1901">
                                          <xsl:choose xml:id="id_1902">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1903">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1904"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1905">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1906"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:otherwise xml:id="id_1907">
                                <xsl:choose xml:id="id_1908">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1909">
                                    <xsl:if test="not($varIsFirstTimeRelease)" xml:id="id_1910">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_1911">
                                        <corecom:ManufacturerItemID xml:id="id_1912">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_1913">
                                            <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1914"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1915"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_1916">
                                      <corecom:ManufacturerItemID xml:id="id_1917">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_1918">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1919"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1920"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1921">
                                        <xsl:choose xml:id="id_1922">
                                          <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1923">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1924"/>
                                          </xsl:when>
                                          <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1925">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1926"/>
                                          </xsl:when>
                                        </xsl:choose>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus and ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus and not(./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus = ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus) " xml:id="id_1927">
                                    <corecomEBO:RelatedManufacturerItem actionCode="UPDATE" xml:id="id_1928">
                                      <corecom:ManufacturerItemID xml:id="id_1929">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_1930">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_1931"/>
                                        </xsl:attribute>
                                        <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_1932"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1933">
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1934"/>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                </xsl:choose>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!-- BUG 10242945 and 10261198 -->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease">-->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName">-->
                          <xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and (./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName)" xml:id="id_1935">
                            <!-- BUG 10242945 and 10261198 -->
                            <!-- BUG 10190393 -->
                            <corecomEBO:RelatedManufacturerItem xml:id="id_1936">
                              <xsl:attribute name="actionCode" xml:id="id_1937">
                                <xsl:value-of select="$varActionCode" xml:id="id_1938"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_1939">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_1940">
                                  <xsl:value-of select="$varMfrName" xml:id="id_1941"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_1942">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1943">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_1944"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1945">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_1946"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_1947">
                                <xsl:choose xml:id="id_1948">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1949">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_1950"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1951">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_1952"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:PriorityCode>
                            </corecomEBO:RelatedManufacturerItem>
                            <!-- BUG 10190393 -->
                          </xsl:when>
                          <!-- BUG 9888995 -->
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturer_Custom" xml:id="id_1953">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1954"/>
                  </xsl:call-template>
                </corecomEBO:ItemManufacturer>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_Custom" xml:id="id_1955">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_1956"/>
          </xsl:call-template>
        </corecomEBO:RevisedItem>
        <!--Bug 9888990 - change how the variable varIsFirstTimeRelease is populated for delta BOM issue. 
        Now look into XREF table to populate this variable. If XREF value found assign boolean false() 
        otherwise assign boolean true() -->
        <!--xsl:variable name="varIsFirstTimeRelease" select="boolean(not(./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase) or ./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase = 'Preliminary')"/-->
        <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_1957"/>
        <!-- BUG 10210260 -->
        <!--<xsl:variable name="varIsFirstTimeRelease"
                     select="not(string($xrefValue) != '')"/>-->
        <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_1958"/>
        <xsl:variable name="varIsFirstTimeRelease" select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_1959"/>
        <!-- BUG 10210260 -->
        <!--Bug 9888990-->
        <!-- fixing for boolean() function issue (BUG# 7622579) -->
        <!-- <xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean($varIsFirstTimeRelease))"> -->
        <xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_1960">
          <corecomEBO:RevisedBillOfMaterials xml:id="id_1961">
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added']" xml:id="id_1962">
              <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_1963">
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1964">
                  <corecom:Identification xml:id="id_1965">
                    <corecom:ID xml:id="id_1966">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_1967"/>
                    </corecom:ID>
                  </corecom:Identification>
                </xsl:if>
                <xsl:choose xml:id="id_1968">
                  <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1969">
                    <corecom:Quantity xml:id="id_1970">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_1971"/>
                    </corecom:Quantity>
                  </xsl:when>
                  <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1972">
                    <corecom:Quantity xml:id="id_1973">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_1974"/>
                    </corecom:Quantity>
                  </xsl:when>
                </xsl:choose>
                <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_1975">
                  <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_1976"/>
                  <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_1977"/>
                  <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_1978"/>
                </xsl:call-template>
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1979">
                  <corecom:ToRevisionNumber xml:id="id_1980">
                    <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_1981"/>
                  </corecom:ToRevisionNumber>
                </xsl:if>
                <!-- @IMPORTANT - sending the change order lines effective date -->
                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_1982">
                  <corecom:EffectiveTimePeriod xml:id="id_1983">
                    <corecom:StartDateTime xml:id="id_1984">
                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_1985"/>
                    </corecom:StartDateTime>
                  </corecom:EffectiveTimePeriod>
                </xsl:if>
                <corecom:ItemReference xml:id="id_1986">
                  <corecom:ItemIdentification xml:id="id_1987">
                    <xsl:variable name="varItemNumber" xml:id="id_1988">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_1989"/>
                    </xsl:variable>
                    <!--<xsl:variable name="varItemNumberinXREF">
                      <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                    </xsl:variable>-->
                    <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_1990"/>
                    <xsl:variable name="varBusinessComponentID" xml:id="id_1991">
                      <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_1992">
                        <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_1993"/>
                        <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_1994"/>
                        <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_1995"/>
                        <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_1996"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <corecom:BusinessComponentID xml:id="id_1997">
                      <xsl:value-of select="$varBusinessComponentID" xml:id="id_1998"/>
                    </corecom:BusinessComponentID>
                    <corecom:ID xml:id="id_1999">
                      <xsl:value-of select="$varItemNumber" xml:id="id_2000"/>
                    </corecom:ID>
                    <corecom:ApplicationObjectKey xml:id="id_2001">
                      <corecom:ID xml:id="id_2002">
                        <xsl:value-of select="$varItemNumber" xml:id="id_2003"/>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                    <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2004">
                      <corecom:Revision xml:id="id_2005">
                        <corecom:Number xml:id="id_2006">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2007"/>
                        </corecom:Number>
                      </corecom:Revision>
                    </xsl:if>
                  </corecom:ItemIdentification>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2008">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2009"/>
                  </xsl:call-template>
                </corecom:ItemReference>
                <corecomEBO:ChangeTypeCode xml:id="id_2010">ADD</corecomEBO:ChangeTypeCode>
                <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2011">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2012"/>
                  <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2013"/>
                  <xsl:with-param name="varSiteID" select="''" xml:id="id_2014"/>
                  <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2015"/>
                </xsl:call-template>
                <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2016">
                  <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2017">
                    <corecom:Identification xml:id="id_2018">
                      <corecom:ID xml:id="id_2019">
                        <xsl:value-of select="." xml:id="id_2020"/>
                      </corecom:ID>
                      <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2021">
                        <corecom:Revision xml:id="id_2022">
                          <corecom:EffectiveDate xml:id="id_2023">
                            <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2024"/>
                          </corecom:EffectiveDate>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:Identification>
                    <corecomEBO:ChangeTypeCode xml:id="id_2025">ADD</corecomEBO:ChangeTypeCode>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2026">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2027"/>
                    </xsl:call-template>
                  </corecomEBO:ComponentItemProcessingInstruction>
                </xsl:for-each>
                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2028">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2029"/>
                </xsl:call-template>
              </corecomEBO:BillOfMaterialsComponentItem>
            </xsl:for-each>
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Changed']" xml:id="id_2030">
              <xsl:choose xml:id="id_2031">
                <!-- BUG 10197575 -->
                <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_2032">
                  <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2033">
                    <xsl:choose xml:id="id_2034">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2035">
                        <corecom:Identification xml:id="id_2036">
                          <corecom:ID xml:id="id_2037">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2038"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2039">
                        <corecom:Identification xml:id="id_2040">
                          <corecom:ID xml:id="id_2041">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2042"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:choose xml:id="id_2043">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2044">
                        <corecom:Quantity xml:id="id_2045">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2046"/>
                        </corecom:Quantity>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2047">
                        <corecom:Quantity xml:id="id_2048">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2049"/>
                        </corecom:Quantity>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2050">
                      <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2051"/>
                      <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2052"/>
                      <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2053"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_2054">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2055">
                        <corecom:ToRevisionNumber xml:id="id_2056">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2057"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2058">
                        <corecom:ToRevisionNumber xml:id="id_2059">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2060"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                    </xsl:choose>
                    <!-- @IMPORTANT - sending the change order lines effective date -->
                    <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2061">
                      <corecom:EffectiveTimePeriod xml:id="id_2062">
                        <corecom:StartDateTime xml:id="id_2063">
                          <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2064"/>
                        </corecom:StartDateTime>
                      </corecom:EffectiveTimePeriod>
                    </xsl:if>
                    <corecom:ItemReference xml:id="id_2065">
                      <corecom:ItemIdentification xml:id="id_2066">
                        <xsl:variable name="varItemNumber" xml:id="id_2067">
                          <xsl:choose xml:id="id_2068">
                            <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2069">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2070"/>
                            </xsl:when>
                            <xsl:otherwise xml:id="id_2071">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_2072"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2073"/>
                        <xsl:variable name="varBusinessComponentID" xml:id="id_2074">
                          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2075">
                            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2076"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2077"/>
                            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2078"/>
                            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2079"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <corecom:BusinessComponentID xml:id="id_2080">
                          <xsl:value-of select="$varBusinessComponentID" xml:id="id_2081"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID xml:id="id_2082">
                          <xsl:value-of select="$varItemNumber" xml:id="id_2083"/>
                        </corecom:ID>
                        <corecom:ApplicationObjectKey xml:id="id_2084">
                          <corecom:ID xml:id="id_2085">
                            <xsl:value-of select="$varItemNumber" xml:id="id_2086"/>
                          </corecom:ID>
                        </corecom:ApplicationObjectKey>
                        <xsl:choose xml:id="id_2087">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2088">
                            <corecom:Revision xml:id="id_2089">
                              <corecom:Number xml:id="id_2090">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2091"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2092">
                            <corecom:Revision xml:id="id_2093">
                              <corecom:Number xml:id="id_2094">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2095"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                        </xsl:choose>
                      </corecom:ItemIdentification>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2096">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2097"/>
                      </xsl:call-template>
                    </corecom:ItemReference>
                    <corecomEBO:ChangeTypeCode xml:id="id_2098">ADD</corecomEBO:ChangeTypeCode>
                    <!-- BUG 12549382 Change the param varsiteId with select "''" -->                    
                    <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2099">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2100"/>
                      <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2101"/>
                      <xsl:with-param name="varSiteID" select="''" xml:id="id_2102"/>
                      <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2103"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_2104">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_2105">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2106">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2107">
                            <corecom:Identification xml:id="id_2108">
                              <corecom:ID xml:id="id_2109">
                                <xsl:value-of select="." xml:id="id_2110"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2111">
                                <corecom:Revision xml:id="id_2112">
                                  <corecom:EffectiveDate xml:id="id_2113">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2114"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_2115">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2116">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2117"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_2118">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2119">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2120">
                            <corecom:Identification xml:id="id_2121">
                              <corecom:ID xml:id="id_2122">
                                <xsl:value-of select="." xml:id="id_2123"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2124">
                                <corecom:Revision xml:id="id_2125">
                                  <corecom:EffectiveDate xml:id="id_2126">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2127"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_2128">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2129">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2130"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2131">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2132"/>
                      </xsl:call-template>
                  </corecomEBO:BillOfMaterialsComponentItem>
                </xsl:when>
                <xsl:otherwise xml:id="id_2133">
                  <xsl:choose xml:id="id_2134">
                    <!-- BUG 10197575 -->
                    <xsl:when test="(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber) and not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber = ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber)" xml:id="id_2135">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2136">
                        <xsl:choose xml:id="id_2137">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2138">
                            <corecom:Identification xml:id="id_2139">
                              <corecom:ID xml:id="id_2140">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2141"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2142">
                            <corecom:Identification xml:id="id_2143">
                              <corecom:ID xml:id="id_2144">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2145"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:choose xml:id="id_2146">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2147">
                            <corecom:Quantity xml:id="id_2148">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2149"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2150">
                            <corecom:Quantity xml:id="id_2151">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2152"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2153">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2154"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2155"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2156"/>
                        </xsl:call-template>
                        <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2157">
                          <corecom:ToRevisionNumber xml:id="id_2158">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2159"/>
                          </corecom:ToRevisionNumber>
                        </xsl:if>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2160">
                          <corecom:EffectiveTimePeriod xml:id="id_2161">
                            <corecom:StartDateTime xml:id="id_2162">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2163"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if>
                        <corecom:ItemReference xml:id="id_2164">
                          <corecom:ItemIdentification xml:id="id_2165">
                            <xsl:variable name="varItemNumber" select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2166"/>
                            <!--<xsl:variable name="varItemNumberinXREF"><xsl:value-of select="$varItemNumber"/>::COMMON::<xsl:value-of select="$varOrganizationCode"/></xsl:variable>-->
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2167"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_2168">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2169">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2170"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2171"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2172"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2173"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_2174">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_2175"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_2176">
                              <xsl:value-of select="$varItemNumber" xml:id="id_2177"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_2178">
                              <corecom:ID xml:id="id_2179">
                                <xsl:value-of select="$varItemNumber" xml:id="id_2180"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2181">
                              <corecom:Revision xml:id="id_2182">
                                <corecom:Number xml:id="id_2183">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2184"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2185">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2186"/>
                          </xsl:call-template>
                        </corecom:ItemReference>
                        <corecomEBO:ChangeTypeCode xml:id="id_2187">ADD</corecomEBO:ChangeTypeCode>
                        <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2188">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2189"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2190"/>
                          <xsl:with-param name="varSiteID" select="''" xml:id="id_2191"/>
                          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2192"/>
                        </xsl:call-template>
						<!-- Bug 16517599-->
                        <!--xsl:if test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator) > 0" xml:id="id_2193">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2194">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2195">
                              <corecom:Identification xml:id="id_2196">
                                <corecom:ID xml:id="id_2197">
                                  <xsl:value-of select="." xml:id="id_2198"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2199">
                                  <corecom:Revision xml:id="id_2200">
                                    <corecom:EffectiveDate xml:id="id_2201">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2202"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_2203">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2204">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2205"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if-->
					<xsl:choose xml:id="id_4055">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_4056">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4057">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4058">
                            <corecom:Identification xml:id="id_4059">
                              <corecom:ID xml:id="id_4060">
                                <xsl:value-of select="." xml:id="id_4061"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4062">
                                <corecom:Revision xml:id="id_4063">
                                  <corecom:EffectiveDate xml:id="id_4064">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4065"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4066">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4067">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4068"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_4069">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4070">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4071">
                            <corecom:Identification xml:id="id_4072">
                              <corecom:ID xml:id="id_4073">
                                <xsl:value-of select="." xml:id="id_4074"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4075">
                                <corecom:Revision xml:id="id_4076">
                                  <corecom:EffectiveDate xml:id="id_4077">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4078"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4079">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4080">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4081"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>                    
                    </xsl:choose>						
						<!-- Bug 16517599-->
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2206">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2207"/>
                        </xsl:call-template>
                      </corecomEBO:BillOfMaterialsComponentItem>
                      <!-- fixing for boolean() function issue (BUG# 7622579) -->
                      <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
                      <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_2208">
                        <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2209">
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2210">
                            <corecom:Identification xml:id="id_2211">
                              <corecom:ID xml:id="id_2212">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2213"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:if>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2214">
                            <corecom:Quantity xml:id="id_2215">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2216"/>
                            </corecom:Quantity>
                          </xsl:if>
                          <xsl:call-template name="BOMComponentData_Previous" xml:id="id_2217">
                            <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2218"/>
                            <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2219"/>
                            <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2220"/>
                          </xsl:call-template>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2221">
                            <corecom:ToRevisionNumber xml:id="id_2222">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2223"/>
                            </corecom:ToRevisionNumber>
                          </xsl:if>
                          <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2224">
                            <corecom:EffectiveTimePeriod xml:id="id_2225">
                              <corecom:StartDateTime xml:id="id_2226">
                                <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2227"/>
                              </corecom:StartDateTime>
                            </corecom:EffectiveTimePeriod>
                          </xsl:if>
                          <corecom:ItemReference xml:id="id_2228">
                            <corecom:ItemIdentification xml:id="id_2229">
                              <xsl:variable name="varItemNumber" xml:id="id_2230">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_2231"/>
                              </xsl:variable>
                              <!--<xsl:variable name="varItemNumberinXREF">
                            <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                          </xsl:variable>-->
                              <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2232"/>
                              <xsl:variable name="varBusinessComponentID" xml:id="id_2233">
                                <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2234">
                                  <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2235"/>
                                  <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2236"/>
                                  <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2237"/>
                                  <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2238"/>
                                </xsl:call-template>
                              </xsl:variable>
                              <corecom:BusinessComponentID xml:id="id_2239">
                                <xsl:value-of select="$varBusinessComponentID" xml:id="id_2240"/>
                              </corecom:BusinessComponentID>
                              <corecom:ID xml:id="id_2241">
                                <xsl:value-of select="$varItemNumber" xml:id="id_2242"/>
                              </corecom:ID>
                              <corecom:ApplicationObjectKey xml:id="id_2243">
                                <corecom:ID xml:id="id_2244">
                                  <xsl:value-of select="$varItemNumber" xml:id="id_2245"/>
                                </corecom:ID>
                              </corecom:ApplicationObjectKey>
                              <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2246">
                                <corecom:Revision xml:id="id_2247">
                                  <corecom:Number xml:id="id_2248">
                                    <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2249"/>
                                  </corecom:Number>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:ItemIdentification>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2250">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2251"/>
                            </xsl:call-template>
                          </corecom:ItemReference>
                          <corecomEBO:ChangeTypeCode xml:id="id_2252">DISABLE</corecomEBO:ChangeTypeCode>
                          <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2253">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2254"/>
                            <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2255"/>
                            <xsl:with-param name="varSiteID" select="''" xml:id="id_2256"/>
                            <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2257"/>
                          </xsl:call-template>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2258">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2259"/>
                          </xsl:call-template>
                        </corecomEBO:BillOfMaterialsComponentItem>
                      </xsl:if>
                    </xsl:when>
                    <xsl:otherwise xml:id="id_2260">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2261"><xsl:choose xml:id="id_2262">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2263">
                            <corecom:Identification xml:id="id_2264">
                              <corecom:ID xml:id="id_2265">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2266"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2267">
                            <corecom:Identification xml:id="id_2268">
                              <corecom:ID xml:id="id_2269">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2270"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose><xsl:choose xml:id="id_2271">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2272">
                            <corecom:Quantity xml:id="id_2273">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2274"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2275">
                            <corecom:Quantity xml:id="id_2276">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2277"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose><xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2278">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2279"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2280"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2281"/>
                        </xsl:call-template><xsl:choose xml:id="id_2282">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2283">
                            <corecom:ToRevisionNumber xml:id="id_2284">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2285"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                          <xsl:when test="not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2286">
                            <corecom:ToRevisionNumber xml:id="id_2287">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2288"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                        </xsl:choose><xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2289">
                          <corecom:EffectiveTimePeriod xml:id="id_2290">
                            <corecom:StartDateTime xml:id="id_2291">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2292"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if><corecom:ItemReference xml:id="id_2293">
                          <corecom:ItemIdentification xml:id="id_2294">
                            <xsl:variable name="varItemNumber" xml:id="id_2295">
                              <xsl:choose xml:id="id_2296">
                                <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and not(string(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber) = '')" xml:id="id_2297">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2298"/>
                                </xsl:when>
                                <xsl:otherwise xml:id="id_2299">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_2300"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2301"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_2302">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2303">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2304"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2305"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2306"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2307"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_2308">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_2309"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_2310">
                              <xsl:value-of select="$varItemNumber" xml:id="id_2311"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_2312">
                              <corecom:ID xml:id="id_2313">
                                <xsl:value-of select="$varItemNumber" xml:id="id_2314"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2315">
                              <corecom:Revision xml:id="id_2316">
                                <corecom:Number xml:id="id_2317">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2318"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2319">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2320"/>
                          </xsl:call-template>
                        </corecom:ItemReference>`<xsl:choose xml:id="id_2321">
                          <!-- fixing for boolean() function issue (BUG# 7622579) -->
                          <!-- <xsl:when test="boolean($varIsFirstTimeRelease)"> -->
                          <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_2322">
                            <corecomEBO:ChangeTypeCode xml:id="id_2323">ADD</corecomEBO:ChangeTypeCode>
                          </xsl:when>
                          <xsl:otherwise xml:id="id_2324">
                            <corecomEBO:ChangeTypeCode xml:id="id_2325">CHANGE</corecomEBO:ChangeTypeCode>
                          </xsl:otherwise>
                        </xsl:choose><xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2326">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2327"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2328"/>
                          <xsl:with-param name="varSiteID" select="''" xml:id="id_2329"/>
                          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2330"/>
                        </xsl:call-template><xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_2331">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2332">
                            <corecom:Identification xml:id="id_2333">
                              <corecom:ID xml:id="id_2334">
                                <xsl:value-of select="." xml:id="id_2335"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2336">
                                <corecom:Revision xml:id="id_2337">
                                  <corecom:EffectiveDate xml:id="id_2338">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2339"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_2340">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2341">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2342"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each><!-- fixing for boolean() function issue (BUG# 7622579) --><!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))">  --><xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_2343">
                          <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators" xml:id="id_2344">
                            <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_2345">
                              <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2346">
                                <corecom:Identification xml:id="id_2347">
                                  <corecom:ID xml:id="id_2348">
                                    <xsl:value-of select="." xml:id="id_2349"/>
                                  </corecom:ID>
                                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2350">
                                    <corecom:Revision xml:id="id_2351">
                                      <corecom:EffectiveDate xml:id="id_2352">
                                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2353"/>
                                      </corecom:EffectiveDate>
                                    </corecom:Revision>
                                  </xsl:if>
                                </corecom:Identification>
                                <corecomEBO:ChangeTypeCode xml:id="id_2354">DISABLE</corecomEBO:ChangeTypeCode>
                                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2355">
                                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2356"/>
                                </xsl:call-template>
                              </corecomEBO:ComponentItemProcessingInstruction>
                            </xsl:for-each>
                          </xsl:if>
                        </xsl:if><!-- fixing for boolean() function issue (BUG# 7622579) --><!-- <xsl:if test="boolean($varIsFirstTimeRelease) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)"> --><xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true') and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)" xml:id="id_2357">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2358">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2359">
                              <corecom:Identification xml:id="id_2360">
                                <corecom:ID xml:id="id_2361">
                                  <xsl:value-of select="." xml:id="id_2362"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2363">
                                  <corecom:Revision xml:id="id_2364">
                                    <corecom:EffectiveDate xml:id="id_2365">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2366"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_2367">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2368">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2369"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if><xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2370">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2371"/>
                        </xsl:call-template></corecomEBO:BillOfMaterialsComponentItem>
                    </xsl:otherwise>
                    <!-- BUG 10197575 -->
                  </xsl:choose>
                </xsl:otherwise>
                <!-- BUG 10197575 -->
              </xsl:choose>
            </xsl:for-each>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
            <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_2372">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Deleted']" xml:id="id_2373">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2374">
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2375">
                    <corecom:Identification xml:id="id_2376">
                      <corecom:ID xml:id="id_2377">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2378"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2379">
                    <corecom:Quantity xml:id="id_2380">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2381"/>
                    </corecom:Quantity>
                  </xsl:if>
                  <xsl:call-template name="BOMComponentData_Previous" xml:id="id_2382">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2383"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2384"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2385"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2386">
                    <corecom:ToRevisionNumber xml:id="id_2387">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2388"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2389">
                    <corecom:EffectiveTimePeriod xml:id="id_2390">
                      <corecom:StartDateTime xml:id="id_2391">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2392"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_2393">
                    <corecom:ItemIdentification xml:id="id_2394">
                      <xsl:variable name="varItemNumber" xml:id="id_2395">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_2396"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2397"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_2398">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2399">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2400"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2401"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2402"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2403"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_2404">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_2405"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_2406">
                        <xsl:value-of select="$varItemNumber" xml:id="id_2407"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_2408">
                        <corecom:ID xml:id="id_2409">
                          <xsl:value-of select="$varItemNumber" xml:id="id_2410"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2411">
                        <corecom:Revision xml:id="id_2412">
                          <corecom:Number xml:id="id_2413">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2414"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2415">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2416"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_2417">DISABLE</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2418">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2419"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2420"/>
                    <xsl:with-param name="varSiteID" select="''" xml:id="id_2421"/>
                    <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2422"/>
                  </xsl:call-template>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2423">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2424"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="boolean($varIsFirstTimeRelease)"> -->
            <xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_2425">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']" xml:id="id_2426">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2427">
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2428">
                    <corecom:Identification xml:id="id_2429">
                      <corecom:ID xml:id="id_2430">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2431"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:choose xml:id="id_2432">
                    <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2433">
                      <corecom:Quantity xml:id="id_2434">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2435"/>
                      </corecom:Quantity>
                    </xsl:when>
                    <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2436">
                      <corecom:Quantity xml:id="id_2437">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2438"/>
                      </corecom:Quantity>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2439">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2440"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2441"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2442"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2443">
                    <corecom:ToRevisionNumber xml:id="id_2444">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2445"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <!-- @IMPORTANT - sending the change order lines effective date -->
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2446">
                    <corecom:EffectiveTimePeriod xml:id="id_2447">
                      <corecom:StartDateTime xml:id="id_2448">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2449"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_2450">
                    <corecom:ItemIdentification xml:id="id_2451">
                      <xsl:variable name="varItemNumber" xml:id="id_2452">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2453"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2454"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_2455">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2456">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2457"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2458"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2459"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2460"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_2461">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_2462"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_2463">
                        <xsl:value-of select="$varItemNumber" xml:id="id_2464"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_2465">
                        <corecom:ID xml:id="id_2466">
                          <xsl:value-of select="$varItemNumber" xml:id="id_2467"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2468">
                        <corecom:Revision xml:id="id_2469">
                          <corecom:Number xml:id="id_2470">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2471"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2472">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2473"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_2474">ADD</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2475">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2476"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2477"/>
                    <xsl:with-param name="varSiteID" select="''" xml:id="id_2478"/>
                    <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2479"/>
                  </xsl:call-template>
                  <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2480">
                    <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2481">
                      <corecom:Identification xml:id="id_2482">
                        <corecom:ID xml:id="id_2483">
                          <xsl:value-of select="." xml:id="id_2484"/>
                        </corecom:ID>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2485">
                          <corecom:Revision xml:id="id_2486">
                            <corecom:EffectiveDate xml:id="id_2487">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2488"/>
                            </corecom:EffectiveDate>
                          </corecom:Revision>
                        </xsl:if>
                      </corecom:Identification>
                      <corecomEBO:ChangeTypeCode xml:id="id_2489">ADD</corecomEBO:ChangeTypeCode>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2490">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2491"/>
                      </xsl:call-template>
                    </corecomEBO:ComponentItemProcessingInstruction>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2492">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2493"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_Custom" xml:id="id_2494">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2495"/>
            </xsl:call-template>
          </corecomEBO:RevisedBillOfMaterials>
        </xsl:if>
        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_Custom" xml:id="id_2496">
          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2497"/>
        </xsl:call-template>
      </changeEBO:EngineeringChangeOrderLine>
    </xsl:for-each>
  </xsl:template>
  <!-- 
      @Template: createEngineeringChangeOrderLines_With_DefaultMasterOrgData 
      @Purpose: Creates multiple 'EngineeringChangeOrderLine' to go across Default master organization
      @Logic:    
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'
      @Parameter: varEngineeringChangeOrderNumber => Number of the Engineering Change Order, which is in context of this template call            
      @Requires:
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR'  
                  DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR'      
                  DVM: 'ITEM_PRIMARYCLASSIFICATIONCODE'
                  DVM: 'ITEM_BOM_ITEMTYPE_CODE'
                  DVM: 'ITEM_WIP_SUPPLY_CODE'
                  DVM: 'ITEM_INDICATOR'  (planned
                  DVM: 'ITEM_UOM_CODE'
                  DVM: 'AGILE_SITE_TO_EBIZ_ORG_MAPPING'
                  XREF: 'ITEM_ITEMID'                 
  -->
  <xsl:template name="createEngineeringChangeOrderLines_With_DefaultMasterOrgData" xml:id="id_2498">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2499"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_2500"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_2501"/>
    <xsl:variable name="varOrganizationCode" xml:id="id_2502">
      <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE','DEFAULT_MASTER_ORG','TARGET_VALUE','NOT_FOUND'))"/-->
      <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_2503">
        <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_2504"/>
        <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_2505"/>
        <xsl:with-param name="varSourceValue" select="'DEFAULT_MASTER_ORG'" xml:id="id_2506"/>
        <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_2507"/>
        <xsl:with-param name="varDefaultValue" select="'NOT_FOUND'" xml:id="id_2508"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:AffectedItems[not(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01) or count(./changeABO:AffectedItem/changeABO:PageTwo/Multilist01/Value) = 0]" xml:id="id_2509">
      <changeEBO:EngineeringChangeOrderLine actionCode="CREATE" xml:id="id_2510">
        <xsl:variable name="varChangeOrderLineEffDate" xml:id="id_2511">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_2512"/>
        </xsl:variable>
        <xsl:variable name="varItemNumber" xml:id="id_2513">
          <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_2514"/>
        </xsl:variable>
        <!--<xsl:variable name="varItemNumberinXREF">
          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
        </xsl:variable>-->
        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2515"/>
        <xsl:variable name="varBusinessComponentID" xml:id="id_2516">
          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2517">
            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2518"/>
            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2519"/>
            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2520"/>
            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2521"/>
          </xsl:call-template>
        </xsl:variable>
        <corecom:Identification xml:id="id_2522">
          <corecom:BusinessComponentID xml:id="id_2523">
            <xsl:value-of select="$varBusinessComponentID" xml:id="id_2524"/>
          </corecom:BusinessComponentID>
          <corecom:ID xml:id="id_2525">
            <xsl:value-of select="$varItemNumber" xml:id="id_2526"/>
          </corecom:ID>
          <corecom:ApplicationObjectKey xml:id="id_2527">
            <corecom:ID xml:id="id_2528">
              <xsl:value-of select="$varItemNumber" xml:id="id_2529"/>
            </corecom:ID>
          </corecom:ApplicationObjectKey>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_2530">
            <corecom:Revision xml:id="id_2531">
              <corecom:Number xml:id="id_2532">
                <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_2533"/>
              </corecom:Number>
            </corecom:Revision>
          </xsl:if>
        </corecom:Identification>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_2534">
          <changeEBO:Description xml:id="id_2535">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemDescription" xml:id="id_2536"/>
          </changeEBO:Description>
        </xsl:if>
        <xsl:if test="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_2537">
          <changeEBO:EffectiveDate xml:id="id_2538">
            <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:EffectiveDate" xml:id="id_2539"/>
          </changeEBO:EffectiveDate>
        </xsl:if>
        <corecomEBO:CurrentItem xml:id="id_2540">
          <xsl:if test="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_2541">
            <corecomEBO:Description xml:id="id_2542">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:OldItemDescription" xml:id="id_2543"/>
            </corecomEBO:Description>
          </xsl:if>
          <corecom:ItemIdentification xml:id="id_2544">
            <corecom:BusinessComponentID xml:id="id_2545">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_2546"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_2547">
              <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_2548"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_2549">
              <corecom:ID xml:id="id_2550">
                <xsl:value-of select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_2551"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:choose xml:id="id_2552">
              <xsl:when test="./changeABO:AffectedItemRow/changeABO:OldRev and not(substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ') = '')" xml:id="id_2553">
                <corecom:Revision xml:id="id_2554">
                  <corecom:Number xml:id="id_2555">
                    <xsl:value-of select="substring-before(./changeABO:AffectedItemRow/changeABO:OldRev,' ')" xml:id="id_2556"/>
                  </corecom:Number>
                </corecom:Revision>
              </xsl:when>
            </xsl:choose>
          </corecom:ItemIdentification>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_CurrentItem_Custom" xml:id="id_2557">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2558"/>
          </xsl:call-template>
        </corecomEBO:CurrentItem>
        <xsl:variable name="varBOMItemType" xml:id="id_2559">
          <xsl:choose xml:id="id_2560">
            <xsl:when test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_2561">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_2562"/>
            </xsl:when>
            <xsl:otherwise xml:id="id_2563">
              <xsl:value-of select="''" xml:id="id_2564"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="varBOMItemTypeCommon" xml:id="id_2565">
          <xsl:choose xml:id="id_2566">
            <xsl:when test="$varBOMItemType != ''" xml:id="id_2567">
              <xsl:call-template name="lookupDVM" xml:id="id_2568">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_BOM_ITEMTYPE_CODE.dvm'" xml:id="id_2569"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_2570"/>
                <xsl:with-param name="varSourceValue" select="$varBOMItemType" xml:id="id_2571"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_2572"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise xml:id="id_2573">
              <xsl:value-of select="''" xml:id="id_2574"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <corecomEBO:RevisedItem xml:id="id_2575">
          <xsl:if test="not(string($varItemNumber) = '')" xml:id="id_2576">
            <corecomEBO:Name xml:id="id_2577">
              <xsl:value-of select="$varItemNumber" xml:id="id_2578"/>
            </corecomEBO:Name>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2579">
            <corecomEBO:Description xml:id="id_2580">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2581"/>
            </corecomEBO:Description>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_2582">
            <xsl:variable name="varPartType" xml:id="id_2583">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:PartType" xml:id="id_2584"/>
            </xsl:variable>
            <corecomEBO:PrimaryClassificationCode xml:id="id_2585">
              <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm',$SystemInstanceCode,$varPartType,'COMMON',$varPartType)"/>-->
              <xsl:call-template name="lookupDVM" xml:id="id_2586">
                <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_PRIMARYCLASSIFICATIONCODE.dvm'" xml:id="id_2587"/>
                <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_2588"/>
                <xsl:with-param name="varSourceValue" select="$varPartType" xml:id="id_2589"/>
                <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_2590"/>
              </xsl:call-template>
            </corecomEBO:PrimaryClassificationCode>
          </xsl:if>
          <!-- BUG 10637226  -->
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2591">
            <corecomEBO:ShortDescription xml:id="id_2592">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2593"/>
            </corecomEBO:ShortDescription>
          </xsl:if>
          <!-- BUG 10637226  -->          
          <corecom:ItemIdentification xml:id="id_2594">
            <corecom:BusinessComponentID xml:id="id_2595">
              <xsl:value-of select="$varBusinessComponentID" xml:id="id_2596"/>
            </corecom:BusinessComponentID>
            <corecom:ID xml:id="id_2597">
              <xsl:value-of select="$varItemNumber" xml:id="id_2598"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey xml:id="id_2599">
              <corecom:ID xml:id="id_2600">
                <xsl:value-of select="$varItemNumber" xml:id="id_2601"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev and not(substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ') = '')" xml:id="id_2602">
              <corecom:Revision xml:id="id_2603">
                <corecom:Number xml:id="id_2604">
                  <xsl:value-of select="substring-before(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Rev,' ')" xml:id="id_2605"/>
                </corecom:Number>
              </corecom:Revision>
            </xsl:if>
            <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2606">
              <corecom:Description xml:id="id_2607">
                <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Description" xml:id="id_2608"/>
              </corecom:Description>
            </xsl:if>
          </corecom:ItemIdentification>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_2609">
            <xsl:variable name="varItemLifeCyclePhase" xml:id="id_2610">
              <xsl:value-of select="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:LifecyclePhase" xml:id="id_2611"/>
            </xsl:variable>
            <corecom:Status xml:id="id_2612">
              <corecom:Code xml:id="id_2613">
                <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm',$SystemInstanceCode,$varItemLifeCyclePhase,'COMMON',$varItemLifeCyclePhase)"/>-->
                <xsl:call-template name="lookupDVM" xml:id="id_2614">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm'" xml:id="id_2615"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_2616"/>
                  <xsl:with-param name="varSourceValue" select="$varItemLifeCyclePhase" xml:id="id_2617"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_2618"/>
                </xsl:call-template>
              </corecom:Code>
            </corecom:Status>
          </xsl:if>
          <xsl:if test="./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass" xml:id="id_2619">
            <corecomEBO:ItemPhysicalCharacteristics xml:id="id_2620">
              <xsl:variable name="varWeightMeasureUOM" xml:id="id_2621">
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass/@UOM)" xml:id="id_2622"/>
              </xsl:variable>
              <corecomEBO:WeightMeasure xml:id="id_2623">
                <xsl:attribute name="unitCode" xml:id="id_2624">
                  <!--<xsl:value-of select="lookupDVM('ITEM_UOM_CODE',$SystemInstanceCode,$varWeightMeasureUOM,'COMMON',$varWeightMeasureUOM)"/>-->
                  <xsl:call-template name="lookupDVM" xml:id="id_2625">
                    <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_UOM_CODE.dvm'" xml:id="id_2626"/>
                    <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_2627"/>
                    <xsl:with-param name="varSourceValue" select="$varWeightMeasureUOM" xml:id="id_2628"/>
                    <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_2629"/>
                  </xsl:call-template>
                </xsl:attribute>
                <xsl:value-of select="normalize-space(./changeABO:AffectedItem/changeABO:TitleBlock/itemABO:Mass)" xml:id="id_2630"/>
              </corecomEBO:WeightMeasure>
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemPhysicalCharacteristics_Custom" xml:id="id_2631">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2632"/>
              </xsl:call-template>
            </corecomEBO:ItemPhysicalCharacteristics>
          </xsl:if>
		  <!--@Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Start
		  
		  <corecomEBO:InventoryCharacteristics xml:id="IC_3">
                <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List07" xml:id="LOT_7">
                     <corecomEBO:LotControlCode xml:id="LOT_8">
                        <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_LOTEXPIRATION_ON_RECEIPT_INDICATOR.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List07)" xml:id="LOT_9"/>
                      </corecomEBO:LotControlCode >
                                </xsl:if>
                <xsl:if test="./changeABO:AffectedItem/changeABO:PageTwo/List08" xml:id="SER_7">
                      <corecomEBO:SerializationEventCode xml:id="SER_8">
                           <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_SERIALIZATION_EVENT_CODE.dvm&quot;,&quot;AGILE_01&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08,&quot;COMMON&quot;,./changeABO:AffectedItem/changeABO:PageTwo/List08)" xml:id="SER_9"/>
                      </corecomEBO:SerializationEventCode>
                            </xsl:if>
          </corecomEBO:InventoryCharacteristics>

         @Orthofix Custom: Updated by HCC 07-01-2015 : Lot and Serial control Ends-->
	 
	 
          <corecomEBO:ItemManufacturingCharacteristics xml:id="id_2633">
            <corecomEBO:StructureAllowedIndicator xml:id="id_2634">YES</corecomEBO:StructureAllowedIndicator>
            <xsl:if test="$varBOMItemTypeCommon != ''" xml:id="id_2635">
              <corecomEBO:BOMItemTypeCode xml:id="id_2636">
                <xsl:value-of select="$varBOMItemTypeCommon" xml:id="id_2637"/>
              </corecomEBO:BOMItemTypeCode>
            </xsl:if>
            <xsl:if test="($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_2638">
              <!--
    <corecomEBO:WIPSupplyTypeCode>REFERENCE_UNPLANNED_UNCOSTED</corecomEBO:WIPSupplyTypeCode>
	 -->
              <xsl:variable name="varWIPSupplyTypeCode" select="'Phantom'" xml:id="id_2639"/>
              <corecomEBO:WIPSupplyTypeCode xml:id="id_2640">
                <xsl:call-template name="lookupDVM" xml:id="id_2641">
                  <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_WIP_SUPPLY_CODE.dvm'" xml:id="id_2642"/>
                  <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_2643"/>
                  <xsl:with-param name="varSourceValue" select="$varWIPSupplyTypeCode" xml:id="id_2644"/>
                  <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_2645"/>
                </xsl:call-template>
              </corecomEBO:WIPSupplyTypeCode>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturingCharacteristics_Custom" xml:id="id_2646">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2647"/>
            </xsl:call-template>
          </corecomEBO:ItemManufacturingCharacteristics>
          <xsl:if test="($varBOMItemTypeCommon = 'MODEL') or ($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_2648">
            <corecomEBO:ItemOrderManagementCharacteristics xml:id="id_2649">
              <corecomEBO:AssembleToOrderIndicator xml:id="id_2650">Y</corecomEBO:AssembleToOrderIndicator>
              <!--
      <xsl:variable name="varAssembleToOrderIndicator" select="'Y'"/>
      <corecomEBO:AssembleToOrderIndicator>
        <xsl:call-template name="lookupDVM">
          <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ITEM_INDICATOR.dvm'"/>
          <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode"/>
          <xsl:with-param name="varSourceValue" select="$varAssembleToOrderIndicator"/>
          <xsl:with-param name="varTargetValueColumnName" select="'COMMON'"/>
        </xsl:call-template>
      </corecomEBO:AssembleToOrderIndicator>
	 -->
              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemOrderManagementCharacteristics_Custom" xml:id="id_2651">
                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2652"/>
              </xsl:call-template>
            </corecomEBO:ItemOrderManagementCharacteristics>
          </xsl:if>
          <xsl:choose xml:id="id_2653">
            <xsl:when test="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow" xml:id="id_2654">
              <xsl:variable name="varManufacturers" xml:id="id_2655">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow//itemABO:Mfr.Name" xml:id="id_2656">
                  <xsl:variable name="varTemp1" xml:id="id_2657">
                    <xsl:value-of select="." xml:id="id_2658"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp1),'|')" xml:id="id_2659"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLManufacturers" xml:id="id_2660">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_2661">
                  <xsl:with-param name="varDelimitedString" select="string($varManufacturers)" xml:id="id_2662"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_2663"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="varUniqueManufacturers" xml:id="id_2664">
                <!-- BUG 10158892 -->
                <!--<xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]"><xsl:value-of select="."/>|</xsl:for-each>-->
                <xsl:for-each select="$varXMLManufacturers/Token[not(. = preceding::*)]" xml:id="id_2665">
                  <xsl:variable name="varTemp2" xml:id="id_2666">
                    <xsl:value-of select="." xml:id="id_2667"/>
                  </xsl:variable>
                  <xsl:value-of select="concat(string($varTemp2),'|')" xml:id="id_2668"/>
                </xsl:for-each>
                <!-- BUG 10158892 -->
              </xsl:variable>
              <xsl:variable name="varXMLUniqueManufacturers" xml:id="id_2669">
                <xsl:call-template name="delimitedStringToXML" xml:id="id_2670">
                  <xsl:with-param name="varDelimitedString" select="string($varUniqueManufacturers)" xml:id="id_2671"/>
                  <xsl:with-param name="varDelimiter" select="'|'" xml:id="id_2672"/>
                </xsl:call-template>
              </xsl:variable>
              <!--Bug 9888990 - change the way variable varIsFirstTimeRelease is populated for delta BOM issue. 
              Now look into XREF table to populate this variable. If XREF value found assign boolean false() 
              otherwise assign boolean true() -->
              <!--xsl:variable name="varIsFirstTimeRelease" select="boolean(not(./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase) or ./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase = 'Preliminary')"/-->
              <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_2673"/>
              <!-- BUG 10210260 -->
              <!--<xsl:variable name="varIsFirstTimeRelease"
                     select="not(string($xrefValue) != '')"/>-->
              <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_2674"/>
              <xsl:variable name="varIsFirstTimeRelease" select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_2675"/>
              <!-- BUG 10210260 -->
              <!--Bug 9888990-->
              <xsl:variable name="varAI" select="." xml:id="id_2676"/>
              <xsl:for-each select="$varXMLUniqueManufacturers/Token" xml:id="id_2677">
                <xsl:variable name="varMfrName" select="." xml:id="id_2678"/>
                <corecomEBO:ItemManufacturer xml:id="id_2679">
                  <xsl:for-each select="$varAI/changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow[./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName]" xml:id="id_2680">
                    <xsl:variable name="varposition" select="position()" xml:id="id_2681"/>
                    <xsl:variable name="RedlineActions" select="../changeABO:RedlinedAMLRow[./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName]//@RedlineAction" xml:id="id_2682"/>
                    <xsl:variable name="varRedlineActions" xml:id="id_2683">
                      <xsl:value-of select="$RedlineActions" xml:id="id_2684"/>
                    </xsl:variable>
                    <xsl:if test="$varposition = 1 and ((contains($varRedlineActions, 'Deleted') and not($varIsFirstTimeRelease)) or contains($varRedlineActions, 'Added') or contains($varRedlineActions, 'Changed') or (contains($varRedlineActions, 'Unchanged') and $varIsFirstTimeRelease))" xml:id="id_2685">
                      <corecom:ManufacturerPartyReference xml:id="id_2686">
                        <corecom:OrganizationName xml:id="id_2687">
                          <xsl:value-of select="$varMfrName" xml:id="id_2688"/>
                        </corecom:OrganizationName>
                      </corecom:ManufacturerPartyReference>
                      <xsl:for-each select="$varAI/changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedAMLRow[(./@RedlineAction = 'Deleted' and not($varIsFirstTimeRelease)) and (./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName)]" xml:id="id_2689">
                        <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_2690">
                          <corecom:ManufacturerItemID xml:id="id_2691">
                            <xsl:attribute name="schemeAgencyID" xml:id="id_2692">
                              <xsl:value-of select="$varMfrName" xml:id="id_2693"/>
                            </xsl:attribute>
                            <xsl:if test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2694">
                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2695"/>
                            </xsl:if>
                          </corecom:ManufacturerItemID>
                        </corecomEBO:RelatedManufacturerItem>
                      </xsl:for-each>
                    </xsl:if>
                    <xsl:choose xml:id="id_2696">
                      <xsl:when test="./@RedlineAction = 'Unchanged' and not($varIsFirstTimeRelease)" xml:id="id_2697"/>
                      <xsl:when test="./@RedlineAction = 'Deleted' and $varIsFirstTimeRelease" xml:id="id_2698"/>
                      <xsl:otherwise xml:id="id_2699">
                        <xsl:variable name="varActionCode" xml:id="id_2700">
                          <xsl:if test="./@RedlineAction = 'Unchanged'" xml:id="id_2701">CREATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Added'" xml:id="id_2702">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                          <!--xsl:if test="./@RedlineAction = 'Changed'">UPDATE</xsl:if-->
                          <xsl:if test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_2703">UPDATE</xsl:if>
                          <xsl:if test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease" xml:id="id_2704">CREATE</xsl:if>
                          <!-- BUG 9888995 -->
                        </xsl:variable>
                        <xsl:choose xml:id="id_2705">
                          <xsl:when test="./@RedlineAction != 'Changed' and ./@RedlineAction != 'Deleted'" xml:id="id_2706">
                            <corecomEBO:RelatedManufacturerItem xml:id="id_2707">
                              <xsl:attribute name="actionCode" xml:id="id_2708">
                                <xsl:value-of select="$varActionCode" xml:id="id_2709"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_2710">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_2711">
                                  <xsl:value-of select="$varMfrName" xml:id="id_2712"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_2713">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2714">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2715"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2716">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2717"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <xsl:if test="./@RedlineAction != 'Deleted'" xml:id="id_2718">
                                <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2719">
                                  <xsl:choose xml:id="id_2720">
                                    <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2721">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2722"/>
                                    </xsl:when>
                                    <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2723">
                                      <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2724"/>
                                    </xsl:when>
                                  </xsl:choose>
                                </corecom:PriorityCode>
                              </xsl:if>
                            </corecomEBO:RelatedManufacturerItem>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!--xsl:when test="./@RedlineAction = 'Changed'"-->
                          <xsl:when test="./@RedlineAction = 'Changed' and not($varIsFirstTimeRelease)" xml:id="id_2725">
                            <!-- BUG 9888995 -->
                            <xsl:choose xml:id="id_2726">
                              <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name" xml:id="id_2727">
                                <xsl:choose xml:id="id_2728">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2729">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_2730">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_2731">
                                        <corecom:ManufacturerItemID xml:id="id_2732">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_2733">
                                            <xsl:value-of select="$varMfrName" xml:id="id_2734"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2735"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_2736">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_2737">
                                        <corecom:ManufacturerItemID xml:id="id_2738">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_2739">
                                            <xsl:value-of select="$varMfrName" xml:id="id_2740"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2741"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2742">
                                          <xsl:choose xml:id="id_2743">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2744">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2745"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2746">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2747"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:when>
                                  <xsl:otherwise xml:id="id_2748">
                                    <xsl:if test="not($varIsFirstTimeRelease) and ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName" xml:id="id_2749">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_2750">
                                        <corecom:ManufacturerItemID xml:id="id_2751">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_2752">
                                            <xsl:value-of select="$varMfrName" xml:id="id_2753"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_2754"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <xsl:if test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName" xml:id="id_2755">
                                      <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_2756">
                                        <corecom:ManufacturerItemID xml:id="id_2757">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_2758">
                                            <xsl:value-of select="$varMfrName" xml:id="id_2759"/>
                                          </xsl:attribute>
                                          <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_2760"/>
                                        </corecom:ManufacturerItemID>
                                        <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2761">
                                          <xsl:choose xml:id="id_2762">
                                            <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2763">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2764"/>
                                            </xsl:when>
                                            <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2765">
                                              <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2766"/>
                                            </xsl:when>
                                          </xsl:choose>
                                        </corecom:PriorityCode>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:otherwise xml:id="id_2767">
                                <xsl:choose xml:id="id_2768">
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2769">
                                    <xsl:if test="not($varIsFirstTimeRelease)" xml:id="id_2770">
                                      <corecomEBO:RelatedManufacturerItem actionCode="DELETE" xml:id="id_2771">
                                        <corecom:ManufacturerItemID xml:id="id_2772">
                                          <xsl:attribute name="schemeAgencyID" xml:id="id_2773">
                                            <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_2774"/>
                                          </xsl:attribute>
                                          <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2775"/>
                                        </corecom:ManufacturerItemID>
                                      </corecomEBO:RelatedManufacturerItem>
                                    </xsl:if>
                                    <corecomEBO:RelatedManufacturerItem actionCode="CREATE" xml:id="id_2776">
                                      <corecom:ManufacturerItemID xml:id="id_2777">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_2778">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_2779"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2780"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2781">
                                        <xsl:choose xml:id="id_2782">
                                          <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2783">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2784"/>
                                          </xsl:when>
                                          <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2785">
                                            <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2786"/>
                                          </xsl:when>
                                        </xsl:choose>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus and ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus and not(./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus = ./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus) " xml:id="id_2787">
                                    <corecomEBO:RelatedManufacturerItem actionCode="UPDATE" xml:id="id_2788">
                                      <corecom:ManufacturerItemID xml:id="id_2789">
                                        <xsl:attribute name="schemeAgencyID" xml:id="id_2790">
                                          <xsl:value-of select=".//itemABO:Mfr.Name" xml:id="id_2791"/>
                                        </xsl:attribute>
                                        <xsl:value-of select=".//itemABO:Mfr.PartNumber" xml:id="id_2792"/>
                                      </corecom:ManufacturerItemID>
                                      <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2793">
                                        <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2794"/>
                                      </corecom:PriorityCode>
                                    </corecomEBO:RelatedManufacturerItem>
                                  </xsl:when>
                                </xsl:choose>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <!-- BUG 9888995 -->
                          <!-- BUG 10242945 and 10261198 -->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease">-->
                          <!--<xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and ./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName">-->
                          <xsl:when test="./@RedlineAction = 'Changed' and $varIsFirstTimeRelease and (./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.Name = $varMfrName or ./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.Name = $varMfrName)" xml:id="id_2795">
                            <!-- BUG 10242945 and 10261198 -->
                            <!-- BUG 10190393 -->
                            <corecomEBO:RelatedManufacturerItem xml:id="id_2796">
                              <xsl:attribute name="actionCode" xml:id="id_2797">
                                <xsl:value-of select="$varActionCode" xml:id="id_2798"/>
                              </xsl:attribute>
                              <corecom:ManufacturerItemID xml:id="id_2799">
                                <xsl:attribute name="schemeAgencyID" xml:id="id_2800">
                                  <xsl:value-of select="$varMfrName" xml:id="id_2801"/>
                                </xsl:attribute>
                                <xsl:choose xml:id="id_2802">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2803">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:Mfr.PartNumber" xml:id="id_2804"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2805">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:Mfr.PartNumber" xml:id="id_2806"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:ManufacturerItemID>
                              <corecom:PriorityCode listAgencyID="AGILE" xml:id="id_2807">
                                <xsl:choose xml:id="id_2808">
                                  <xsl:when test="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2809">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowCurrent/itemABO:PreferredStatus" xml:id="id_2810"/>
                                  </xsl:when>
                                  <xsl:when test="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2811">
                                    <xsl:value-of select="./changeABO:RedlinedAMLRowPrevious/itemABO:PreferredStatus" xml:id="id_2812"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:PriorityCode>
                            </corecomEBO:RelatedManufacturerItem>
                            <!-- BUG 10190393 -->
                          </xsl:when>
                          <!-- BUG 9888995 -->
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_ItemManufacturer_Custom" xml:id="id_2813">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2814"/>
                  </xsl:call-template>
                </corecomEBO:ItemManufacturer>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedItem_Custom" xml:id="id_2815">
            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2816"/>
          </xsl:call-template>
        </corecomEBO:RevisedItem>
        <xsl:variable name="varChangeType" xml:id="id_2817">
          <xsl:value-of select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder[./changeABO:CoverPage/changeABO:Number = $varEngineeringChangeOrderNumber]/changeABO:CoverPage/changeABO:ChangeType" xml:id="id_2818"/>
        </xsl:variable>
        <!-- BUG 10210260 -->
        <xsl:variable name="varObjectNumber" select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_2819"/>
        <xsl:variable name="xrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref',$SystemInstanceCode,$varItemNumberinXREF,'COMMON',false())" xml:id="id_2820"/>
        <!-- <xsl:value-of select="not(string($xrefValue) !='')"/>-->
        <xsl:variable name="varItemLifeCyclePhase" select="./changeABO:AffectedItemRow/changeABO:OldLifecyclePhase" xml:id="id_2821"/>
        <xsl:variable name="varIsFirstTimeRelease" xml:id="id_2822">
          <xsl:value-of select="not(string($xrefValue) != '') or (string($varItemLifeCyclePhase) = 'Preliminary' or string($varItemLifeCyclePhase) = '')" xml:id="id_2823"/>
        </xsl:variable>
        <!-- BUG 10210260 -->
        <!-- fixing for boolean() function issue (BUG# 7622579) -->
        <!-- <xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean($varIsFirstTimeRelease))"> -->
        <xsl:if test="(count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added' or @RedlineAction = 'Deleted' or @RedlineAction = 'Changed']) > 0) or (count(./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']) > 0 and boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_2824">
          <corecomEBO:RevisedBillOfMaterials xml:id="id_2825">
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Added']" xml:id="id_2826">
              <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2827">
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2828">
                  <corecom:Identification xml:id="id_2829">
                    <corecom:ID xml:id="id_2830">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2831"/>
                    </corecom:ID>
                  </corecom:Identification>
                </xsl:if>
                <xsl:choose xml:id="id_2832">
                  <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2833">
                    <corecom:Quantity xml:id="id_2834">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2835"/>
                    </corecom:Quantity>
                  </xsl:when>
                  <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2836">
                    <corecom:Quantity xml:id="id_2837">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2838"/>
                    </corecom:Quantity>
                  </xsl:when>
                </xsl:choose>
                <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2839">
                  <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2840"/>
                  <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2841"/>
                  <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2842"/>
                </xsl:call-template>
                <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2843">
                  <corecom:ToRevisionNumber xml:id="id_2844">
                    <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2845"/>
                  </corecom:ToRevisionNumber>
                </xsl:if>
                <!-- @IMPORTANT - sending the change order lines effective date -->
                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2846">
                  <corecom:EffectiveTimePeriod xml:id="id_2847">
                    <corecom:StartDateTime xml:id="id_2848">
                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2849"/>
                    </corecom:StartDateTime>
                  </corecom:EffectiveTimePeriod>
                </xsl:if>
                <corecom:ItemReference xml:id="id_2850">
                  <corecom:ItemIdentification xml:id="id_2851">
                    <xsl:variable name="varItemNumber" xml:id="id_2852">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2853"/>
                    </xsl:variable>
                    <!--<xsl:variable name="varItemNumberinXREF">
                      <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                    </xsl:variable>-->
                    <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2854"/>
                    <xsl:variable name="varBusinessComponentID" xml:id="id_2855">
                      <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2856">
                        <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2857"/>
                        <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2858"/>
                        <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2859"/>
                        <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2860"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <corecom:BusinessComponentID xml:id="id_2861">
                      <xsl:value-of select="$varBusinessComponentID" xml:id="id_2862"/>
                    </corecom:BusinessComponentID>
                    <corecom:ID xml:id="id_2863">
                      <xsl:value-of select="$varItemNumber" xml:id="id_2864"/>
                    </corecom:ID>
                    <corecom:ApplicationObjectKey xml:id="id_2865">
                      <corecom:ID xml:id="id_2866">
                        <xsl:value-of select="$varItemNumber" xml:id="id_2867"/>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                    <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2868">
                      <corecom:Revision xml:id="id_2869">
                        <corecom:Number xml:id="id_2870">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2871"/>
                        </corecom:Number>
                      </corecom:Revision>
                    </xsl:if>
                  </corecom:ItemIdentification>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2872">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2873"/>
                  </xsl:call-template>
                </corecom:ItemReference>
                <corecomEBO:ChangeTypeCode xml:id="id_2874">ADD</corecomEBO:ChangeTypeCode>
                <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2875">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2876"/>
                  <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2877"/>
                  <xsl:with-param name="varSiteID" select="''" xml:id="id_2878"/>
                  <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_2879"/>
                </xsl:call-template>
                <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2880">
                  <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2881">
                    <corecom:Identification xml:id="id_2882">
                      <corecom:ID xml:id="id_2883">
                        <xsl:value-of select="." xml:id="id_2884"/>
                      </corecom:ID>
                      <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2885">
                        <corecom:Revision xml:id="id_2886">
                          <corecom:EffectiveDate xml:id="id_2887">
                            <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2888"/>
                          </corecom:EffectiveDate>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:Identification>
                    <corecomEBO:ChangeTypeCode xml:id="id_2889">ADD</corecomEBO:ChangeTypeCode>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2890">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2891"/>
                    </xsl:call-template>
                  </corecomEBO:ComponentItemProcessingInstruction>
                </xsl:for-each>
                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2892">
                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2893"/>
                </xsl:call-template>
              </corecomEBO:BillOfMaterialsComponentItem>
            </xsl:for-each>
            <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Changed']" xml:id="id_2894">
              <xsl:choose xml:id="id_2895">
                <!-- BUG 10197575 -->
                <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_2896">
                  <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_2897">
                    <xsl:choose xml:id="id_2898">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2899">
                        <corecom:Identification xml:id="id_2900">
                          <corecom:ID xml:id="id_2901">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_2902"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2903">
                        <corecom:Identification xml:id="id_2904">
                          <corecom:ID xml:id="id_2905">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_2906"/>
                          </corecom:ID>
                        </corecom:Identification>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:choose xml:id="id_2907">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2908">
                        <corecom:Quantity xml:id="id_2909">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_2910"/>
                        </corecom:Quantity>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2911">
                        <corecom:Quantity xml:id="id_2912">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_2913"/>
                        </corecom:Quantity>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_2914">
                      <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_2915"/>
                      <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_2916"/>
                      <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_2917"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_2918">
                      <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2919">
                        <corecom:ToRevisionNumber xml:id="id_2920">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2921"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                      <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2922">
                        <corecom:ToRevisionNumber xml:id="id_2923">
                          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2924"/>
                        </corecom:ToRevisionNumber>
                      </xsl:when>
                    </xsl:choose>
                    <!-- @IMPORTANT - sending the change order lines effective date -->
                    <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2925">
                      <corecom:EffectiveTimePeriod xml:id="id_2926">
                        <corecom:StartDateTime xml:id="id_2927">
                          <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2928"/>
                        </corecom:StartDateTime>
                      </corecom:EffectiveTimePeriod>
                    </xsl:if>
                    <corecom:ItemReference xml:id="id_2929">
                      <corecom:ItemIdentification xml:id="id_2930">
                        <xsl:variable name="varItemNumber" xml:id="id_2931">
                          <xsl:choose xml:id="id_2932">
                            <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2933">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_2934"/>
                            </xsl:when>
                            <xsl:otherwise xml:id="id_2935">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_2936"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_2937"/>
                        <xsl:variable name="varBusinessComponentID" xml:id="id_2938">
                          <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_2939">
                            <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_2940"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_2941"/>
                            <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_2942"/>
                            <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_2943"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <corecom:BusinessComponentID xml:id="id_2944">
                          <xsl:value-of select="$varBusinessComponentID" xml:id="id_2945"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID xml:id="id_2946">
                          <xsl:value-of select="$varItemNumber" xml:id="id_2947"/>
                        </corecom:ID>
                        <corecom:ApplicationObjectKey xml:id="id_2948">
                          <corecom:ID xml:id="id_2949">
                            <xsl:value-of select="$varItemNumber" xml:id="id_2950"/>
                          </corecom:ID>
                        </corecom:ApplicationObjectKey>
                        <xsl:choose xml:id="id_2951">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2952">
                            <corecom:Revision xml:id="id_2953">
                              <corecom:Number xml:id="id_2954">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_2955"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2956">
                            <corecom:Revision xml:id="id_2957">
                              <corecom:Number xml:id="id_2958">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_2959"/>
                              </corecom:Number>
                            </corecom:Revision>
                          </xsl:when>
                        </xsl:choose>
                      </corecom:ItemIdentification>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_2960">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2961"/>
                      </xsl:call-template>
                    </corecom:ItemReference>
                    <corecomEBO:ChangeTypeCode xml:id="id_2962">ADD</corecomEBO:ChangeTypeCode>
                    <!-- BUG 12549382 Change the param varsiteId with select "''" -->                     
                    <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_2963">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2964"/>
                      <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_2965"/>
                      <xsl:with-param name="varSiteID" select="''" xml:id="id_2966"/>
                      <xsl:with-param name="varOrganizationCode" select="''" xml:id="id_2967"/>
                    </xsl:call-template>
                    <xsl:choose xml:id="id_2968">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_2969">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2970">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2971">
                            <corecom:Identification xml:id="id_2972">
                              <corecom:ID xml:id="id_2973">
                                <xsl:value-of select="." xml:id="id_2974"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2975">
                                <corecom:Revision xml:id="id_2976">
                                  <corecom:EffectiveDate xml:id="id_2977">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2978"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_2979">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2980">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2981"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_2982">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_2983">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_2984">
                            <corecom:Identification xml:id="id_2985">
                              <corecom:ID xml:id="id_2986">
                                <xsl:value-of select="." xml:id="id_2987"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_2988">
                                <corecom:Revision xml:id="id_2989">
                                  <corecom:EffectiveDate xml:id="id_2990">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_2991"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_2992">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_2993">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2994"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_2995">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_2996"/>
                      </xsl:call-template>
                  </corecomEBO:BillOfMaterialsComponentItem>
                </xsl:when>
                <xsl:otherwise xml:id="id_2997">
                  <xsl:choose xml:id="id_2998">
                    <!-- BUG 10197575 -->
                    <xsl:when test="(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber) and not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber = ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber)" xml:id="id_2999">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_3000">
                        <xsl:choose xml:id="id_3001">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3002">
                            <corecom:Identification xml:id="id_3003">
                              <corecom:ID xml:id="id_3004">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3005"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3006">
                            <corecom:Identification xml:id="id_3007">
                              <corecom:ID xml:id="id_3008">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3009"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:choose xml:id="id_3010">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3011">
                            <corecom:Quantity xml:id="id_3012">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3013"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3014">
                            <corecom:Quantity xml:id="id_3015">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3016"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_3017">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_3018"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_3019"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_3020"/>
                        </xsl:call-template>
                        <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3021">
                          <corecom:ToRevisionNumber xml:id="id_3022">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3023"/>
                          </corecom:ToRevisionNumber>
                        </xsl:if>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3024">
                          <corecom:EffectiveTimePeriod xml:id="id_3025">
                            <corecom:StartDateTime xml:id="id_3026">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3027"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if>
                        <corecom:ItemReference xml:id="id_3028">
                          <corecom:ItemIdentification xml:id="id_3029">
                            <xsl:variable name="varItemNumber" select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_3030"/>
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_3031"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_3032">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_3033">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3034"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_3035"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_3036"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_3037"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_3038">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_3039"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_3040">
                              <xsl:value-of select="$varItemNumber" xml:id="id_3041"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_3042">
                              <corecom:ID xml:id="id_3043">
                                <xsl:value-of select="$varItemNumber" xml:id="id_3044"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3045">
                              <corecom:Revision xml:id="id_3046">
                                <corecom:Number xml:id="id_3047">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3048"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_3049">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3050"/>
                          </xsl:call-template>
                        </corecom:ItemReference>
                        <corecomEBO:ChangeTypeCode xml:id="id_3051">ADD</corecomEBO:ChangeTypeCode>
                        <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_3052">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3053"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_3054"/>
                          <xsl:with-param name="varSiteID" select="''" xml:id="id_3055"/>
                          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_3056"/>
                        </xsl:call-template>
						<!-- Bug 16517599-->
                        <!--xsl:if test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator) > 0" xml:id="id_3057">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_3058">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3059">
                              <corecom:Identification xml:id="id_3060">
                                <corecom:ID xml:id="id_3061">
                                  <xsl:value-of select="." xml:id="id_3062"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3063">
                                  <corecom:Revision xml:id="id_3064">
                                    <corecom:EffectiveDate xml:id="id_3065">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3066"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_3067">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3068">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3069"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if-->
					<xsl:choose xml:id="id_4082">
                      <xsl:when test="count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0" xml:id="id_4083">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4084">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4085">
                            <corecom:Identification xml:id="id_4086">
                              <corecom:ID xml:id="id_4087">
                                <xsl:value-of select="." xml:id="id_4088"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4089">
                                <corecom:Revision xml:id="id_4090">
                                  <corecom:EffectiveDate xml:id="id_4091">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4092"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4093">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4094">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4095"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise xml:id="id_4096">
                        <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_4097">
                          <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_4098">
                            <corecom:Identification xml:id="id_4099">
                              <corecom:ID xml:id="id_4100">
                                <xsl:value-of select="." xml:id="id_4101"/>
                              </corecom:ID>
                              <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_4102">
                                <corecom:Revision xml:id="id_4103">
                                  <corecom:EffectiveDate xml:id="id_4104">
                                    <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_4105"/>
                                  </corecom:EffectiveDate>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:Identification>
                            <corecomEBO:ChangeTypeCode xml:id="id_4106">ADD</corecomEBO:ChangeTypeCode>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_4107">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_4108"/>
                            </xsl:call-template>
                          </corecomEBO:ComponentItemProcessingInstruction>
                        </xsl:for-each>
                      </xsl:otherwise>                    
                    </xsl:choose>						
						<!-- Bug 16517599-->
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_3070">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3071"/>
                        </xsl:call-template>
                      </corecomEBO:BillOfMaterialsComponentItem>
                      <!-- fixing for boolean() function issue (BUG# 7622579) -->
                      <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
                      <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_3072">
                        <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_3073">
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3074">
                            <corecom:Identification xml:id="id_3075">
                              <corecom:ID xml:id="id_3076">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3077"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:if>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3078">
                            <corecom:Quantity xml:id="id_3079">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3080"/>
                            </corecom:Quantity>
                          </xsl:if>
                          <xsl:call-template name="BOMComponentData_Previous" xml:id="id_3081">
                            <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_3082"/>
                            <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_3083"/>
                            <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_3084"/>
                          </xsl:call-template>
                          <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3085">
                            <corecom:ToRevisionNumber xml:id="id_3086">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3087"/>
                            </corecom:ToRevisionNumber>
                          </xsl:if>
                          <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3088">
                            <corecom:EffectiveTimePeriod xml:id="id_3089">
                              <corecom:StartDateTime xml:id="id_3090">
                                <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3091"/>
                              </corecom:StartDateTime>
                            </corecom:EffectiveTimePeriod>
                          </xsl:if>
                          <corecom:ItemReference xml:id="id_3092">
                            <corecom:ItemIdentification xml:id="id_3093">
                              <xsl:variable name="varItemNumber" xml:id="id_3094">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_3095"/>
                              </xsl:variable>
                              <!--<xsl:variable name="varItemNumberinXREF">
                            <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                          </xsl:variable>-->
                              <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_3096"/>
                              <xsl:variable name="varBusinessComponentID" xml:id="id_3097">
                                <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_3098">
                                  <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3099"/>
                                  <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_3100"/>
                                  <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_3101"/>
                                  <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_3102"/>
                                </xsl:call-template>
                              </xsl:variable>
                              <corecom:BusinessComponentID xml:id="id_3103">
                                <xsl:value-of select="$varBusinessComponentID" xml:id="id_3104"/>
                              </corecom:BusinessComponentID>
                              <corecom:ID xml:id="id_3105">
                                <xsl:value-of select="$varItemNumber" xml:id="id_3106"/>
                              </corecom:ID>
                              <corecom:ApplicationObjectKey xml:id="id_3107">
                                <corecom:ID xml:id="id_3108">
                                  <xsl:value-of select="$varItemNumber" xml:id="id_3109"/>
                                </corecom:ID>
                              </corecom:ApplicationObjectKey>
                              <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3110">
                                <corecom:Revision xml:id="id_3111">
                                  <corecom:Number xml:id="id_3112">
                                    <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3113"/>
                                  </corecom:Number>
                                </corecom:Revision>
                              </xsl:if>
                            </corecom:ItemIdentification>
                            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_3114">
                              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3115"/>
                            </xsl:call-template>
                          </corecom:ItemReference>
                          <corecomEBO:ChangeTypeCode xml:id="id_3116">DISABLE</corecomEBO:ChangeTypeCode>
                          <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_3117">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3118"/>
                            <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_3119"/>
                            <xsl:with-param name="varSiteID" select="''" xml:id="id_3120"/>
                            <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_3121"/>
                          </xsl:call-template>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_3122">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3123"/>
                          </xsl:call-template>
                        </corecomEBO:BillOfMaterialsComponentItem>
                      </xsl:if>
                    </xsl:when>
                    <xsl:otherwise xml:id="id_3124">
                      <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_3125">
                        <xsl:choose xml:id="id_3126">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3127">
                            <corecom:Identification xml:id="id_3128">
                              <corecom:ID xml:id="id_3129">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3130"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3131">
                            <corecom:Identification xml:id="id_3132">
                              <corecom:ID xml:id="id_3133">
                                <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3134"/>
                              </corecom:ID>
                            </corecom:Identification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:choose xml:id="id_3135">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3136">
                            <corecom:Quantity xml:id="id_3137">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3138"/>
                            </corecom:Quantity>
                          </xsl:when>
                          <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3139">
                            <corecom:Quantity xml:id="id_3140">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3141"/>
                            </corecom:Quantity>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_3142">
                          <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_3143"/>
                          <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_3144"/>
                          <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_3145"/>
                        </xsl:call-template>
                        <xsl:choose xml:id="id_3146">
                          <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3147">
                            <corecom:ToRevisionNumber xml:id="id_3148">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3149"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                          <xsl:when test="not(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3150">
                            <corecom:ToRevisionNumber xml:id="id_3151">
                              <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3152"/>
                            </corecom:ToRevisionNumber>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3153">
                          <corecom:EffectiveTimePeriod xml:id="id_3154">
                            <corecom:StartDateTime xml:id="id_3155">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3156"/>
                            </corecom:StartDateTime>
                          </corecom:EffectiveTimePeriod>
                        </xsl:if>
                        <corecom:ItemReference xml:id="id_3157">
                          <corecom:ItemIdentification xml:id="id_3158">
                            <xsl:variable name="varItemNumber" xml:id="id_3159">
                              <xsl:choose xml:id="id_3160">
                                <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber and not(string(./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber) = '')" xml:id="id_3161">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_3162"/>
                                </xsl:when>
                                <xsl:otherwise xml:id="id_3163">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_3164"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <!--<xsl:variable name="varItemNumberinXREF">
                          <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                        </xsl:variable>-->
                            <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_3165"/>
                            <xsl:variable name="varBusinessComponentID" xml:id="id_3166">
                              <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_3167">
                                <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3168"/>
                                <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_3169"/>
                                <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_3170"/>
                                <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_3171"/>
                              </xsl:call-template>
                            </xsl:variable>
                            <corecom:BusinessComponentID xml:id="id_3172">
                              <xsl:value-of select="$varBusinessComponentID" xml:id="id_3173"/>
                            </corecom:BusinessComponentID>
                            <corecom:ID xml:id="id_3174">
                              <xsl:value-of select="$varItemNumber" xml:id="id_3175"/>
                            </corecom:ID>
                            <corecom:ApplicationObjectKey xml:id="id_3176">
                              <corecom:ID xml:id="id_3177">
                                <xsl:value-of select="$varItemNumber" xml:id="id_3178"/>
                              </corecom:ID>
                            </corecom:ApplicationObjectKey>
                            <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3179">
                              <corecom:Revision xml:id="id_3180">
                                <corecom:Number xml:id="id_3181">
                                  <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3182"/>
                                </corecom:Number>
                              </corecom:Revision>
                            </xsl:if>
                          </corecom:ItemIdentification>
                          <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_3183">
                            <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3184"/>
                          </xsl:call-template>
                        </corecom:ItemReference>
                        <xsl:choose xml:id="id_3185">
                          <!-- fixing for boolean() function issue (BUG# 7622579) -->
                          <!--<xsl:when test="boolean($varIsFirstTimeRelease)"> -->
                          <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_3186">
                            <corecomEBO:ChangeTypeCode xml:id="id_3187">ADD</corecomEBO:ChangeTypeCode>
                          </xsl:when>
                          <xsl:otherwise xml:id="id_3188">
                            <corecomEBO:ChangeTypeCode xml:id="id_3189">CHANGE</corecomEBO:ChangeTypeCode>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_3190">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3191"/>
                          <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_3192"/>
                          <xsl:with-param name="varSiteID" select="''" xml:id="id_3193"/>
                          <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_3194"/>
                        </xsl:call-template>
                        <xsl:choose xml:id="id_3195">
                          <xsl:when test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_3196">
                            <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_3197">
                              <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3198">
                                <corecom:Identification xml:id="id_3199">
                                  <corecom:ID xml:id="id_3200">
                                    <xsl:value-of select="." xml:id="id_3201"/>
                                  </corecom:ID>
                                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3202">
                                    <corecom:Revision xml:id="id_3203">
                                      <corecom:EffectiveDate xml:id="id_3204">
                                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3205"/>
                                      </corecom:EffectiveDate>
                                    </corecom:Revision>
                                  </xsl:if>
                                </corecom:Identification>
                                <corecomEBO:ChangeTypeCode xml:id="id_3206">ADD</corecomEBO:ChangeTypeCode>
                                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3207">
                                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3208"/>
                                </xsl:call-template>
                              </corecomEBO:ComponentItemProcessingInstruction>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise xml:id="id_3209">
                            <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_3210">
                              <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3211">
                                <corecom:Identification xml:id="id_3212">
                                  <corecom:ID xml:id="id_3213">
                                    <xsl:value-of select="." xml:id="id_3214"/>
                                  </corecom:ID>
                                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3215">
                                    <corecom:Revision xml:id="id_3216">
                                      <corecom:EffectiveDate xml:id="id_3217">
                                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3218"/>
                                      </corecom:EffectiveDate>
                                    </corecom:Revision>
                                  </xsl:if>
                                </corecom:Identification>
                                <corecomEBO:ChangeTypeCode xml:id="id_3219">ADD</corecomEBO:ChangeTypeCode>
                                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3220">
                                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3221"/>
                                </xsl:call-template>
                              </corecomEBO:ComponentItemProcessingInstruction>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3222">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3223"/>
                        </xsl:call-template>
                        <!-- fixing for boolean() function issue (BUG# 7622579) -->
                        <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
                        <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_3224">
                          <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators" xml:id="id_3225">
                            <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator[not(. = ../../../changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator)]" xml:id="id_3226">
                              <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3227">
                                <corecom:Identification xml:id="id_3228">
                                  <corecom:ID xml:id="id_3229">
                                    <xsl:value-of select="." xml:id="id_3230"/>
                                  </corecom:ID>
                                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3231">
                                    <corecom:Revision xml:id="id_3232">
                                      <corecom:EffectiveDate xml:id="id_3233">
                                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3234"/>
                                      </corecom:EffectiveDate>
                                    </corecom:Revision>
                                  </xsl:if>
                                </corecom:Identification>
                                <corecomEBO:ChangeTypeCode xml:id="id_3235">DISABLE</corecomEBO:ChangeTypeCode>
                                <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3236">
                                  <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3237"/>
                                </xsl:call-template>
                              </corecomEBO:ComponentItemProcessingInstruction>
                            </xsl:for-each>
                          </xsl:if>
                        </xsl:if>
                        <!-- fixing for boolean() function issue (BUG# 7622579) -->
                        <!-- <xsl:if test="boolean($varIsFirstTimeRelease) and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)"> -->
                        <xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true') and ./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators and not(count(./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators) > 0)" xml:id="id_3238">
                          <xsl:for-each select="./changeABO:RedlinedBOMRowPrevious/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_3239">
                            <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3240">
                              <corecom:Identification xml:id="id_3241">
                                <corecom:ID xml:id="id_3242">
                                  <xsl:value-of select="." xml:id="id_3243"/>
                                </corecom:ID>
                                <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3244">
                                  <corecom:Revision xml:id="id_3245">
                                    <corecom:EffectiveDate xml:id="id_3246">
                                      <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3247"/>
                                    </corecom:EffectiveDate>
                                  </corecom:Revision>
                                </xsl:if>
                              </corecom:Identification>
                              <corecomEBO:ChangeTypeCode xml:id="id_3248">ADD</corecomEBO:ChangeTypeCode>
                              <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3249">
                                <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3250"/>
                              </xsl:call-template>
                            </corecomEBO:ComponentItemProcessingInstruction>
                          </xsl:for-each>
                        </xsl:if>
                        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_3251">
                          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3252"/>
                        </xsl:call-template>
                      </corecomEBO:BillOfMaterialsComponentItem>
                    </xsl:otherwise>
                    <!-- BUG 10197575 -->
                  </xsl:choose>
                </xsl:otherwise>
                <!-- BUG 10197575 -->
              </xsl:choose>
            </xsl:for-each>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="not(boolean($varIsFirstTimeRelease))"> -->
            <xsl:if test="not(boolean(string($varIsFirstTimeRelease) = 'true'))" xml:id="id_3253">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Deleted']" xml:id="id_3254">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_3255">
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3256">
                    <corecom:Identification xml:id="id_3257">
                      <corecom:ID xml:id="id_3258">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:FindNum" xml:id="id_3259"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3260">
                    <corecom:Quantity xml:id="id_3261">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3262"/>
                    </corecom:Quantity>
                  </xsl:if>
                  <xsl:call-template name="BOMComponentData_Previous" xml:id="id_3263">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_3264"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_3265"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_3266"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3267">
                    <corecom:ToRevisionNumber xml:id="id_3268">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3269"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3270">
                    <corecom:EffectiveTimePeriod xml:id="id_3271">
                      <corecom:StartDateTime xml:id="id_3272">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3273"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_3274">
                    <corecom:ItemIdentification xml:id="id_3275">
                      <xsl:variable name="varItemNumber" xml:id="id_3276">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemNumber" xml:id="id_3277"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_3278"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_3279">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_3280">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3281"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_3282"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_3283"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_3284"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_3285">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_3286"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_3287">
                        <xsl:value-of select="$varItemNumber" xml:id="id_3288"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_3289">
                        <corecom:ID xml:id="id_3290">
                          <xsl:value-of select="$varItemNumber" xml:id="id_3291"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3292">
                        <corecom:Revision xml:id="id_3293">
                          <corecom:Number xml:id="id_3294">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:ItemRev" xml:id="id_3295"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_3296">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3297"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_3298">DISABLE</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_3299">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3300"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_3301"/>
                    <xsl:with-param name="varSiteID" select="''" xml:id="id_3302"/>
                    <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_3303"/>
                  </xsl:call-template>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_3304">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3305"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <!-- fixing for boolean() function issue (BUG# 7622579) -->
            <!-- <xsl:if test="boolean($varIsFirstTimeRelease)"> -->
            <xsl:if test="boolean(string($varIsFirstTimeRelease) = 'true')" xml:id="id_3306">
              <xsl:for-each select="./changeABO:AffectedItemRow/changeABO:Redlines/changeABO:RedlinedBOMRow[@RedlineAction = 'Unchanged']" xml:id="id_3307">
                <corecomEBO:BillOfMaterialsComponentItem actionCode="CREATE" xml:id="id_3308">
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3309">
                    <corecom:Identification xml:id="id_3310">
                      <corecom:ID xml:id="id_3311">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:FindNum" xml:id="id_3312"/>
                      </corecom:ID>
                    </corecom:Identification>
                  </xsl:if>
                  <xsl:choose xml:id="id_3313">
                    <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3314">
                      <corecom:Quantity xml:id="id_3315">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Qty" xml:id="id_3316"/>
                      </corecom:Quantity>
                    </xsl:when>
                    <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3317">
                      <corecom:Quantity xml:id="id_3318">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Qty" xml:id="id_3319"/>
                      </corecom:Quantity>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:call-template name="BOMComponentData_CurrentOrPrevious" xml:id="id_3320">
                    <xsl:with-param name="varRedlinedBOMRow" select="." xml:id="id_3321"/>
                    <xsl:with-param name="varBOMItemTypeCommon" select="$varBOMItemTypeCommon" xml:id="id_3322"/>
                    <xsl:with-param name="SystemInstanceCode" select="$SystemInstanceCode" xml:id="id_3323"/>
                  </xsl:call-template>
                  <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3324">
                    <corecom:ToRevisionNumber xml:id="id_3325">
                      <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3326"/>
                    </corecom:ToRevisionNumber>
                  </xsl:if>
                  <!-- @IMPORTANT - sending the change order lines effective date -->
                  <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3327">
                    <corecom:EffectiveTimePeriod xml:id="id_3328">
                      <corecom:StartDateTime xml:id="id_3329">
                        <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3330"/>
                      </corecom:StartDateTime>
                    </corecom:EffectiveTimePeriod>
                  </xsl:if>
                  <corecom:ItemReference xml:id="id_3331">
                    <corecom:ItemIdentification xml:id="id_3332">
                      <xsl:variable name="varItemNumber" xml:id="id_3333">
                        <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemNumber" xml:id="id_3334"/>
                      </xsl:variable>
                      <!--<xsl:variable name="varItemNumberinXREF">
                        <xsl:value-of select="$varItemNumber"/>::<xsl:value-of select="$varOrganizationCode"/>
                      </xsl:variable>-->
                      <xsl:variable name="varItemNumberinXREF" select="concat($varItemNumber,'::',$varOrganizationCode)" xml:id="id_3335"/>
                      <xsl:variable name="varBusinessComponentID" xml:id="id_3336">
                        <xsl:call-template name="lookupOrPopulateXRef" xml:id="id_3337">
                          <xsl:with-param name="xrefTableName" select="'oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3338"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$SystemInstanceCode" xml:id="id_3339"/>
                          <xsl:with-param name="xrefReferenceValue" select="$varItemNumberinXREF" xml:id="id_3340"/>
                          <xsl:with-param name="xrefColumnName" select="'COMMON'" xml:id="id_3341"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID xml:id="id_3342">
                        <xsl:value-of select="$varBusinessComponentID" xml:id="id_3343"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID xml:id="id_3344">
                        <xsl:value-of select="$varItemNumber" xml:id="id_3345"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey xml:id="id_3346">
                        <corecom:ID xml:id="id_3347">
                          <xsl:value-of select="$varItemNumber" xml:id="id_3348"/>
                        </corecom:ID>
                      </corecom:ApplicationObjectKey>
                      <xsl:if test="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3349">
                        <corecom:Revision xml:id="id_3350">
                          <corecom:Number xml:id="id_3351">
                            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:ItemRev" xml:id="id_3352"/>
                          </corecom:Number>
                        </corecom:Revision>
                      </xsl:if>
                    </corecom:ItemIdentification>
                    <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ItemReference_Custom" xml:id="id_3353">
                      <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3354"/>
                    </xsl:call-template>
                  </corecom:ItemReference>
                  <corecomEBO:ChangeTypeCode xml:id="id_3355">ADD</corecomEBO:ChangeTypeCode>
                  <xsl:call-template name="createComponentItemSpecificationGroup" xml:id="id_3356">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3357"/>
                    <xsl:with-param name="varEngineeringChangeOrderNumber" select="$varEngineeringChangeOrderNumber" xml:id="id_3358"/>
                    <xsl:with-param name="varSiteID" select="''" xml:id="id_3359"/>
                    <xsl:with-param name="varOrganizationCode" select="$varOrganizationCode" xml:id="id_3360"/>
                  </xsl:call-template>
                  <xsl:for-each select="./changeABO:RedlinedBOMRowCurrent/itemABO:ReferenceDesignators/ReferenceDesignator" xml:id="id_3361">
                    <corecomEBO:ComponentItemProcessingInstruction actionCode="CREATE" xml:id="id_3362">
                      <corecom:Identification xml:id="id_3363">
                        <corecom:ID xml:id="id_3364">
                          <xsl:value-of select="." xml:id="id_3365"/>
                        </corecom:ID>
                        <xsl:if test="not(string($varChangeOrderLineEffDate)='')" xml:id="id_3366">
                          <corecom:Revision xml:id="id_3367">
                            <corecom:EffectiveDate xml:id="id_3368">
                              <xsl:value-of select="$varChangeOrderLineEffDate" xml:id="id_3369"/>
                            </corecom:EffectiveDate>
                          </corecom:Revision>
                        </xsl:if>
                      </corecom:Identification>
                      <corecomEBO:ChangeTypeCode xml:id="id_3370">ADD</corecomEBO:ChangeTypeCode>
                      <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_ComponentItemProcessingInstruction_Custom" xml:id="id_3371">
                        <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3372"/>
                      </xsl:call-template>
                    </corecomEBO:ComponentItemProcessingInstruction>
                  </xsl:for-each>
                  <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_BillOfMaterialsComponentItem_Custom" xml:id="id_3373">
                    <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3374"/>
                  </xsl:call-template>
                </corecomEBO:BillOfMaterialsComponentItem>
              </xsl:for-each>
            </xsl:if>
            <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_RevisedBillOfMaterials_Custom" xml:id="id_3375">
              <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3376"/>
            </xsl:call-template>
          </corecomEBO:RevisedBillOfMaterials>
        </xsl:if>
        <xsl:call-template name="CreateEngineeringChangeOrderListEBM_DataArea_CreateEngineeringChangeOrderList_EngineeringChangeOrderLine_Custom" xml:id="id_3377">
          <xsl:with-param name="varAgileCreateEngineeringChangeOrderListABM" select="$varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3378"/>
        </xsl:call-template>
      </changeEBO:EngineeringChangeOrderLine>
    </xsl:for-each>
  </xsl:template>
  <!--
 @Template: lookupOrPopulateXRef 
 @Purpose:  Look for a value in XREF table. If value not present, populate and return the value
 @Parameter:  xrefTableName => name of the XREF table
 @Parameter:  xrefReferenceColumnName => column value to be referenced
 @Parameter: xrefReferenceValue => Reference value
 @Parameter: xrefColumnName => Column name to be referenced
 -->
  <xsl:template name="lookupOrPopulateXRef" xml:id="id_3379">
    <xsl:param name="xrefTableName" xml:id="id_3380"/>
    <xsl:param name="xrefReferenceColumnName" xml:id="id_3381"/>
    <xsl:param name="xrefReferenceValue" xml:id="id_3382"/>
    <xsl:param name="xrefColumnName" xml:id="id_3383"/>
    <xsl:variable name="xrefValue" select="xref:lookupXRef($xrefTableName,$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,false())" xml:id="id_3384"/>
    <xsl:choose xml:id="id_3385">
      <xsl:when test="not(string($xrefValue) = '')" xml:id="id_3386">
        <xsl:value-of select="$xrefValue" xml:id="id_3387"/>
      </xsl:when>
      <xsl:otherwise xml:id="id_3388">
        <!-- BUG 9888990 -->
        <xsl:if test="$xrefTableName='oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref'" xml:id="id_3389">
          <xsl:variable name="tempXrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/AGILE_ITEMID_TEMP.xref',$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,false())" xml:id="id_3390"/>
          <xsl:choose xml:id="id_3391">
            <xsl:when test="not(string($tempXrefValue) = '')" xml:id="id_3392">
              <xsl:value-of select="$tempXrefValue" xml:id="id_3393"/>
            </xsl:when>
            <xsl:otherwise xml:id="id_3394">
              <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/AGILE_ITEMID_TEMP.xref',$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,orcl:generate-guid(),'ANY')" xml:id="id_3395"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:if>
        <xsl:if test="$xrefTableName='oramds:/apps/AIAMetaData/xref/CHANGE_CHANGEID.xref'" xml:id="id_3396">
          <!-- BUG 10230959 -->
          <xsl:variable name="tempECOXrefValue" select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/AGILE_CHANGEID_TEMP.xref',$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,false())" xml:id="id_3397"/>
          <xsl:choose xml:id="id_3398">
            <xsl:when test="not(string($tempECOXrefValue) = '')" xml:id="id_3399">
              <xsl:value-of select="$tempECOXrefValue" xml:id="id_3400"/>
            </xsl:when>
            <xsl:otherwise xml:id="id_3401">
              <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/AGILE_CHANGEID_TEMP.xref',$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,orcl:generate-guid(),'ANY')" xml:id="id_3402"/>
            </xsl:otherwise>
          </xsl:choose>
          <!-- BUG 10230959 -->
        </xsl:if>
        <!--<xsl:value-of select="xref:populateXRefRow($xrefTableName,$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,orcl:generate-guid(),'ANY')"/>-->
        <!--xsl:value-of select="orcl:generate-guid()"/-->
        <!-- BUG 9888990 -->
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="delimitedStringToXML" xml:id="id_3403">
    <xsl:param name="varDelimitedString" select="''" xml:id="id_3404"/>
    <xsl:param name="varDelimiter" select="'|'" xml:id="id_3405"/>
    <xsl:element name="{string('Token')}" xml:id="id_3406">
      <xsl:choose xml:id="id_3407">
        <xsl:when test="contains($varDelimitedString, $varDelimiter)" xml:id="id_3408">
          <xsl:value-of select="substring-before($varDelimitedString, $varDelimiter)" xml:id="id_3409"/>
        </xsl:when>
        <xsl:otherwise xml:id="id_3410">
          <xsl:value-of select="$varDelimitedString" xml:id="id_3411"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:element>
    <xsl:variable name="left" select="substring-after($varDelimitedString, $varDelimiter)" xml:id="id_3412"/>
    <xsl:if test="string-length($left) > 1" xml:id="id_3413">
      <xsl:call-template name="delimitedStringToXML" xml:id="id_3414">
        <xsl:with-param name="varDelimitedString" select="$left" xml:id="id_3415"/>
        <xsl:with-param name="varDelimiter" select="$varDelimiter" xml:id="id_3416"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>
  <!--
   @Template: retrieveBusinessComponentID
   @Purpose: Extracts BusinessComponentID from the Error message 
   @:Parameter: varErrorString => Error string extracted from FaultNotification's MessageText element   
   (Note: Error message format is := ERROR [<<Object Type>>] :: {BUSINESS_COMPONENT_ID: <<Business Component ID>>} {APPLICATION_OBJECT_ID: <<Application Object ID>> } :: ERROR: <<Error message>>)
  -->
  <xsl:template name="retrieveBusinessComponentID" xml:id="id_3417">
    <xsl:param name="varErrorString" select="''" xml:id="id_3418"/>
    <xsl:variable name="varTempString_1" xml:id="id_3419">
      <xsl:choose xml:id="id_3420">
        <xsl:when test="contains($varErrorString, ':: {BUSINESS_COMPONENT_ID:')" xml:id="id_3421">
          <xsl:value-of select="substring-after($varErrorString, ':: {BUSINESS_COMPONENT_ID:')" xml:id="id_3422"/>
        </xsl:when>
        <xsl:otherwise xml:id="id_3423">
          <xsl:value-of select="''" xml:id="id_3424"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="varBusinessComponentID" xml:id="id_3425">
      <xsl:choose xml:id="id_3426">
        <xsl:when test="contains($varTempString_1, '} {APPLICATION_OBJECT_ID:')" xml:id="id_3427">
          <xsl:value-of select="substring-before($varTempString_1, '} {APPLICATION_OBJECT_ID:')" xml:id="id_3428"/>
        </xsl:when>
        <xsl:otherwise xml:id="id_3429">
          <xsl:value-of select="''" xml:id="id_3430"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:choose xml:id="id_3431">
      <xsl:when test="not(string($varBusinessComponentID) = '')" xml:id="id_3432">
        <xsl:value-of select="$varBusinessComponentID" xml:id="id_3433"/>
      </xsl:when>
      <xsl:otherwise xml:id="id_3434">
        <xsl:value-of select="'NOT_FOUND'" xml:id="id_3435"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <!-- 
      @Template: createEngineeringChangeOrderSpecificationGroup 
      @Purpose: Creates 'EngineeringChangeOrderSpecificationGroup' from P2/ P3 flexfields of ECO.
                OOTB template does nothing. Need to be coded in for customization. 
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'  
      @Logic: Custom Template
  -->
  <xsl:template name="createEngineeringChangeOrderSpecificationGroup" xml:id="id_3436">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3437"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_3438"/>
    <xsl:param name="varSiteID" xml:id="id_3439"/>
    <xsl:param name="varOrganizationCode" xml:id="id_3440"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_3441"/>
  </xsl:template>
  <!-- 
      @Template: createComponentItemSpecificationGroup 
      @Purpose: Creates 'ComponentItemSpecificationGroup' from AffectedItem details for individual ComponentItems 
                under 'RevisedBillOfMaterial'
                OOTB template does nothing. Need to be coded in for customization. 
      @Parameter: varAgileCreateEngineeringChangeOrderListABM => entire 'AgileCreateEngineeringChangeOrderListABM'      
      @Logic: Custom Template
  -->
  <xsl:template name="createComponentItemSpecificationGroup" xml:id="id_3442">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3443"/>
    <xsl:param name="varEngineeringChangeOrderNumber" xml:id="id_3444"/>
    <xsl:param name="varSiteID" xml:id="id_3445"/>
    <xsl:param name="varOrganizationCode" xml:id="id_3446"/>
    <corecomEBO:ComponentItemSpecificationGroup xml:id="id_3447">
      <xsl:for-each select="./*" xml:id="id_3448">
        <!--
     - Pickup all the child elements where name is not either Qty || ItemRev and map them to Specification 
     - as Qty and ItemRev have been mapped to appropriate elements already.
     - See "corecomEBO:ComponentItem" element creation above
    -->
        <xsl:if test="local-name() != 'Qty' or local-name() != 'ItemRev'" xml:id="id_3449"/>
      </xsl:for-each>
    </corecomEBO:ComponentItemSpecificationGroup>
  </xsl:template>
  <xsl:template name="isDefaultMasterOrg" xml:id="id_3450">
    <xsl:param name="varOrganizationCode" xml:id="id_3451"/>
    <xsl:variable name="varDefaultMasterOrg" xml:id="id_3452">
      <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE','DEFAULT_MASTER_ORG','TARGET_VALUE','NOT_FOUND'))"/-->
      <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_3453">
        <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_3454"/>
        <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_3455"/>
        <xsl:with-param name="varSourceValue" select="'DEFAULT_MASTER_ORG'" xml:id="id_3456"/>
        <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_3457"/>
        <xsl:with-param name="varDefaultValue" select="'NOT_FOUND'" xml:id="id_3458"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:choose xml:id="id_3459">
      <xsl:when test="$varOrganizationCode = $varDefaultMasterOrg" xml:id="id_3460">TRUE</xsl:when>
      <xsl:otherwise xml:id="id_3461">FALSE</xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="containsDefaultMasterOrg" xml:id="id_3462">
    <xsl:param name="varUniqueOrganizationCodes" xml:id="id_3463"/>
    <xsl:variable name="varDefaultMasterOrg" xml:id="id_3464">
      <!--xsl:value-of select="normalize-space(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm','AGILE_SITE','DEFAULT_MASTER_ORG','TARGET_VALUE','NOT_FOUND'))"/-->
      <xsl:call-template name="lookupDVM_WithDefaultValue" xml:id="id_3465">
        <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/AGILE_SITE_TARGET_MAPPING.dvm'" xml:id="id_3466"/>
        <xsl:with-param name="varSourceValueColumnName" select="'AGILE_SITE'" xml:id="id_3467"/>
        <xsl:with-param name="varSourceValue" select="'DEFAULT_MASTER_ORG'" xml:id="id_3468"/>
        <xsl:with-param name="varTargetValueColumnName" select="'TARGET_VALUE'" xml:id="id_3469"/>
        <xsl:with-param name="varDefaultValue" select="'NOT_FOUND'" xml:id="id_3470"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:for-each select="$varUniqueOrganizationCodes" xml:id="id_3471">
      <xsl:if test=". = $varDefaultMasterOrg" xml:id="id_3472">TRUE</xsl:if>
    </xsl:for-each>
  </xsl:template>
  <!-- 
  @Template: prepare_AgileCreateEngineeringChangeOrderListABM_retain_NoSiteSpecificAIOnly 
  @Requires: varAgileCreateEngineeringChangeOrderListABM =>  entire 'AgileCreateEngineeringChangeOrderListABM'
  @Logic: retain only no site specificAIOnly
  -->
  <xsl:template name="prepare_AgileCreateEngineeringChangeOrderListABM_retain_NoSiteSpecificAIOnly" xml:id="id_3473">
    <xsl:param name="varAgileCreateEngineeringChangeOrderListABM" xml:id="id_3474"/>
	<!--Start of Bug 15926135 -->
	<xsl:variable name="varItemNumberList" select="$varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems/changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_4019"/>
	<!--End of Bug 15926135 -->
    <changeABM:AgileCreateEngineeringChangeOrderListABM xml:id="id_3475">	
      <xsl:for-each select="$varAgileCreateEngineeringChangeOrderListABM/*" xml:id="id_3476">
        <xsl:choose xml:id="id_3477">
          <xsl:when test="local-name() = 'ABMHeader'" xml:id="id_3478">
            <changeABM:ABMHeader xml:id="id_3479">
              <xsl:copy-of select="@*" xml:id="id_3480"/>
              <xsl:for-each select="./*" xml:id="id_3481">
                <xsl:element name="{local-name()}" xmlns="" xml:id="id_3482">
                  <xsl:copy-of select="node()|@*" xml:id="id_3483"/>
                </xsl:element>
              </xsl:for-each>
            </changeABM:ABMHeader>
          </xsl:when>
          <xsl:when test="local-name() = 'AgileCreateEngineeringChangeOrder'" xml:id="id_3484">
            <changeABM:AgileCreateEngineeringChangeOrder xml:id="id_3485">
              <xsl:copy-of select="@*" xml:id="id_3486"/>
              <xsl:for-each select="./*" xml:id="id_3487">
                <xsl:choose xml:id="id_3488">
                  <xsl:when test="local-name() = 'AffectedItems'" xml:id="id_3489">
                    <xsl:variable name="varAffectedItemNumber" select="./changeABO:AffectedItemRow/changeABO:ItemNumber" xml:id="id_3490"/>
					<!--Start of Bug 15926135 -->
                    <!--xsl:choose xml:id="id_3491">
                      <xsl:when test="count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems[changeABO:AffectedItemRow/changeABO:ItemNumber = $varAffectedItemNumber] ) = 1 and count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems[changeABO:AffectedItemRow/changeABO:ItemNumber = $varAffectedItemNumber]/changeABO:AffectedItemRow/changeABO:Sites[not(string-length(text()) = 0)] ) = 0" xml:id="id_3492">
                        <xsl:element name="changeABO:{local-name()}" xml:id="id_3493">
                          <xsl:for-each select="./*" xml:id="id_3494">
                            <xsl:element name="changeABO:{local-name()}" xml:id="id_3495">
                              <xsl:copy-of select="node()|@*" xml:id="id_3496"/>
                            </xsl:element>
                          </xsl:for-each>
                        </xsl:element>
                      </xsl:when>
                    </xsl:choose-->
					<xsl:choose xml:id="id_4020">
					   <xsl:when test="count($varItemNumberList[.=$varAffectedItemNumber]) = 1" xml:id="id_4021">
						<xsl:choose xml:id="id_4022">
						 <xsl:when test="count($varAgileCreateEngineeringChangeOrderListABM/changeABM:AgileCreateEngineeringChangeOrder/changeABO:AffectedItems[changeABO:AffectedItemRow/changeABO:ItemNumber = $varAffectedItemNumber]/changeABO:AffectedItemRow/changeABO:Sites[not(string-length(text()) = 0)] ) = 0" xml:id="id_4023">            
						  <xsl:element name="changeABO:{local-name()}" xml:id="id_4024">
						   <xsl:for-each select="./*" xml:id="id_4025">
							<xsl:element name="changeABO:{local-name()}" xml:id="id_4026">
							 <xsl:copy-of select="node()|@*" xml:id="id_4027"/>
							</xsl:element>
						   </xsl:for-each>
						  </xsl:element>
						 </xsl:when>
						</xsl:choose>
					   </xsl:when>
					  </xsl:choose>
					  <!--End of Bug 15926135 -->
                  </xsl:when>
                  <xsl:otherwise xml:id="id_3497">
                    <xsl:element name="changeABO:{local-name()}" xml:id="id_3498">
                      <xsl:copy-of select="node()|@*" xml:id="id_3499"/>
                    </xsl:element>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </changeABM:AgileCreateEngineeringChangeOrder>
          </xsl:when>
          <xsl:otherwise xml:id="id_3500">
            <xsl:copy-of select="node()|@*" xml:id="id_3501"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </changeABM:AgileCreateEngineeringChangeOrderListABM>
  </xsl:template>
  <!--
   @Template: BOMComponentData_CurrentOrPrevious
   @Purpose: determine corecom:Quantity, corecom:MinimumOrderQuantity, corecom:MaximumOrderQuantity, 
                      corecom:MutuallyExclusiveOptionIndicator and corecom:MutuallyExclusiveOptionIndicator from 
                      the child element RedlinedBOMRowCurrent respective RedlinedBOMRowPrevious 
   @:Parameter: varRedlinedBOMRow => the current element RedlinedBOMRow   
   @:Parameter: varBOMItemTypeCommon => common BOM item type of the current element AffectedItem   
     -->
  <xsl:template name="BOMComponentData_CurrentOrPrevious" xml:id="id_3502">
    <xsl:param name="varRedlinedBOMRow" xml:id="id_3503"/>
    <xsl:param name="varBOMItemTypeCommon" xml:id="id_3504"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_3505"/>
    <xsl:if test="($varBOMItemTypeCommon = 'MODEL') or ($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_3506">
      <xsl:choose xml:id="id_3507">
        <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Minqty" xml:id="id_3508">
          <corecom:MinimumOrderQuantity xml:id="id_3509">
            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Minqty" xml:id="id_3510"/>
          </corecom:MinimumOrderQuantity>
        </xsl:when>
        <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Minqty" xml:id="id_3511">
          <corecom:MinimumOrderQuantity xml:id="id_3512">
            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Minqty" xml:id="id_3513"/>
          </corecom:MinimumOrderQuantity>
        </xsl:when>
      </xsl:choose>
      <xsl:choose xml:id="id_3514">
        <xsl:when test="./changeABO:RedlinedBOMRowCurrent/itemABO:Maxqty" xml:id="id_3515">
          <corecom:MaximumOrderQuantity xml:id="id_3516">
            <xsl:value-of select="./changeABO:RedlinedBOMRowCurrent/itemABO:Maxqty" xml:id="id_3517"/>
          </corecom:MaximumOrderQuantity>
        </xsl:when>
        <xsl:when test="./changeABO:RedlinedBOMRowPrevious/itemABO:Maxqty" xml:id="id_3518">
          <corecom:MaximumOrderQuantity xml:id="id_3519">
            <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Maxqty" xml:id="id_3520"/>
          </corecom:MaximumOrderQuantity>
        </xsl:when>
      </xsl:choose>
      <xsl:variable name="varBOMComponentOptional" xml:id="id_3521">
        <xsl:choose xml:id="id_3522">
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:Optional" xml:id="id_3523">
            <xsl:choose xml:id="id_3524">
              <xsl:when test="($varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:Optional != '')" xml:id="id_3525">
                <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:Optional" xml:id="id_3526"/>
              </xsl:when>
              <xsl:otherwise xml:id="id_3527">
                <!-- Optional Flag was reset  -->
                <xsl:value-of select="'No'" xml:id="id_3528"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:Optional" xml:id="id_3529">
            <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:Optional" xml:id="id_3530"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$varBOMComponentOptional != ''" xml:id="id_3531">
        <corecom:OptionalIndicator xml:id="id_3532">
          <xsl:call-template name="lookupDVM" xml:id="id_3533">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR.dvm'" xml:id="id_3534"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_3535"/>
            <xsl:with-param name="varSourceValue" select="$varBOMComponentOptional" xml:id="id_3536"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_3537"/>
          </xsl:call-template>
        </corecom:OptionalIndicator>
      </xsl:if>
      <xsl:variable name="varBOMComponentMutExcl" xml:id="id_3538">
        <xsl:choose xml:id="id_3539">
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:MutExcl" xml:id="id_3540">
            <xsl:choose xml:id="id_3541">
              <xsl:when test="($varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:MutExcl != '')" xml:id="id_3542">
                <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowCurrent/itemABO:MutExcl" xml:id="id_3543"/>
              </xsl:when>
              <xsl:otherwise xml:id="id_3544">
                <!-- Mutually Exclusive Flag was reset  -->
                <xsl:value-of select="'No'" xml:id="id_3545"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:MutExcl" xml:id="id_3546">
            <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:MutExcl" xml:id="id_3547"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$varBOMComponentMutExcl != ''" xml:id="id_3548">
        <corecom:MutuallyExclusiveOptionIndicator xml:id="id_3549">
          <xsl:call-template name="lookupDVM" xml:id="id_3550">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR.dvm'" xml:id="id_3551"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_3552"/>
            <xsl:with-param name="varSourceValue" select="$varBOMComponentMutExcl" xml:id="id_3553"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_3554"/>
          </xsl:call-template>
        </corecom:MutuallyExclusiveOptionIndicator>
      </xsl:if>
    </xsl:if>
  </xsl:template>
  <!--
   @Template: BOMComponentData_Previous
   @Purpose: determine corecom:Quantity, corecom:MinimumOrderQuantity, corecom:MaximumOrderQuantity, 
                      corecom:MutuallyExclusiveOptionIndicator and corecom:MutuallyExclusiveOptionIndicator from 
                      the child element RedlinedBOMRowPrevious 
   @:Parameter: varRedlinedBOMRow => the current element RedlinedBOMRow   
   @:Parameter: varBOMItemTypeCommon => common BOM item type of the current element AffectedItem   
     -->
  <xsl:template name="BOMComponentData_Previous" xml:id="id_3555">
    <xsl:param name="varRedlinedBOMRow" xml:id="id_3556"/>
    <xsl:param name="varBOMItemTypeCommon" xml:id="id_3557"/>
    <xsl:param name="SystemInstanceCode" xml:id="id_3558"/>
    <xsl:if test="($varBOMItemTypeCommon = 'MODEL') or ($varBOMItemTypeCommon = 'OPTION CLASS')" xml:id="id_3559">
      <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Minqty" xml:id="id_3560">
        <corecom:MinimumOrderQuantity xml:id="id_3561">
          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Minqty" xml:id="id_3562"/>
        </corecom:MinimumOrderQuantity>
      </xsl:if>
      <xsl:if test="./changeABO:RedlinedBOMRowPrevious/itemABO:Maxqty" xml:id="id_3563">
        <corecom:MaximumOrderQuantity xml:id="id_3564">
          <xsl:value-of select="./changeABO:RedlinedBOMRowPrevious/itemABO:Maxqty" xml:id="id_3565"/>
        </corecom:MaximumOrderQuantity>
      </xsl:if>
      <xsl:variable name="varBOMComponentOptional" xml:id="id_3566">
        <xsl:choose xml:id="id_3567">
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:Optional" xml:id="id_3568">
            <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:Optional" xml:id="id_3569"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$varBOMComponentOptional != ''" xml:id="id_3570">
        <corecom:OptionalIndicator xml:id="id_3571">
          <xsl:call-template name="lookupDVM" xml:id="id_3572">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR.dvm'" xml:id="id_3573"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_3574"/>
            <xsl:with-param name="varSourceValue" select="$varBOMComponentOptional" xml:id="id_3575"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_3576"/>
          </xsl:call-template>
        </corecom:OptionalIndicator>
      </xsl:if>
      <xsl:variable name="varBOMComponentMutExcl" xml:id="id_3577">
        <xsl:choose xml:id="id_3578">
          <xsl:when test="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:MutExcl" xml:id="id_3579">
            <xsl:value-of select="$varRedlinedBOMRow/changeABO:RedlinedBOMRowPrevious/itemABO:MutExcl" xml:id="id_3580"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$varBOMComponentMutExcl != ''" xml:id="id_3581">
        <corecom:MutuallyExclusiveOptionIndicator xml:id="id_3582">
          <xsl:call-template name="lookupDVM" xml:id="id_3583">
            <xsl:with-param name="varDVMName" select="'oramds:/apps/AIAMetaData/dvm/ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR.dvm'" xml:id="id_3584"/>
            <xsl:with-param name="varSourceValueColumnName" select="$SystemInstanceCode" xml:id="id_3585"/>
            <xsl:with-param name="varSourceValue" select="$varBOMComponentMutExcl" xml:id="id_3586"/>
            <xsl:with-param name="varTargetValueColumnName" select="'COMMON'" xml:id="id_3587"/>
          </xsl:call-template>
        </corecom:MutuallyExclusiveOptionIndicator>
      </xsl:if>
    </xsl:if>
  </xsl:template>
  <!-- 
      @Template: lookupDVM 
      @Purpose: Agile ABM will have language specific values but on middle-tier the English language values are treated as
                key values and hence DVMs will have English values in Agile column. The logic for  ABM -> EBM  transformation
                would be first pick the corresponding English value from resource-bundle and then go to DVM to
                pick up language COMMON column values.
                In case of EBM -> ABM transformations the logic would be to pick Agile specific column value from DVM first and 
                then pick the corresponding value in a particular language relative to English specific value from resource bundle
      @Parameter: varDVMName => DVM to be used 
      @Parameter: varSourceValueColumnName => source column name in DVM
      @Parameter: varSourceValue => source column's value in DVM
      @Parameter: varTargetValueColumnName => target value's column in DVM       
  -->
  <xsl:template name="lookupDVM" xml:id="id_3588">
    <xsl:param name="varDVMName" xml:id="id_3589"/>
    <xsl:param name="varSourceValueColumnName" xml:id="id_3590"/>
    <xsl:param name="varSourceValue" xml:id="id_3591"/>
    <xsl:param name="varTargetValueColumnName" xml:id="id_3592"/>
    <xsl:value-of select="dvm:lookupValue($varDVMName,$varSourceValueColumnName,$varSourceValue,$varTargetValueColumnName,$varSourceValue)" xml:id="id_3593"/>
  </xsl:template>
  <xsl:template name="lookupDVM_WithDefaultValue" xml:id="id_3594">
    <xsl:param name="varDVMName" xml:id="id_3595"/>
    <xsl:param name="varSourceValueColumnName" xml:id="id_3596"/>
    <xsl:param name="varSourceValue" xml:id="id_3597"/>
    <xsl:param name="varTargetValueColumnName" xml:id="id_3598"/>
    <xsl:param name="varDefaultValue" xml:id="id_3599"/>
    <xsl:value-of select="dvm:lookupValue($varDVMName,$varSourceValueColumnName,$varSourceValue,$varTargetValueColumnName,$varDefaultValue)" xml:id="id_3600"/>
  </xsl:template>

</xsl:stylesheet>
<!-- 
@Transformation File: AgileCreateEngineeringChangeOrderListABM_to_CreateEngineeringChangeOrderListEBM.xsl

@Requires:
            DVM: 'AGILE_SITE_TARGET_MAPPING'
            DVM: 'ECO_REASON_CODE'
            DVM: 'ECO_TYPECODE'
            DVM: 'ECO_CLASSIFICATION_CODE'
            DVM: 'ECO_STATUS_CODE'
            DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_OPTIONALINDICATOR'  
            DVM: 'ECO_ENGINEERINGCHANGEORDERLINE_REVISEDBILLOFMATERIALS_BILLOFMATERIALSCOMPONENTITEM_MUTUALLYEXCLUSIVEOPTIONINDICATOR'      
            DVM: 'ITEM_PRIMARYCLASSIFICATIONCODE'
            DVM: 'ITEM_BOM_ITEMTYPE_CODE'
            DVM: 'ITEM_WIP_SUPPLY_CODE'
            DVM: 'ITEM_INDICATOR'  (planned
            DVM: 'ITEM_UOM_CODE'
            DVM: 'AGILE_INTEGRATION_USERS'
            
            XREF: 'CHANGE_CHANGEID' 
            XREF: 'ITEM_ITEMID' 
-->
